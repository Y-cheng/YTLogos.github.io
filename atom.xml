<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Logos</title>
  <subtitle>Stay hungry,Stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ytlogos.github.io/"/>
  <updated>2017-11-29T12:05:48.985Z</updated>
  <id>https://ytlogos.github.io/</id>
  
  <author>
    <name>TaoYan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>生物信息学学习笔记（二）</title>
    <link href="https://ytlogos.github.io/2017/11/29/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/29/生物信息学学习笔记（二）/</id>
    <published>2017-11-29T13:19:05.000Z</published>
    <updated>2017-11-29T12:05:48.985Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171129/dlGEdblL4H.png?imageslim" alt="mark"></p>
<h2 id="Hi-C"><a href="#Hi-C" class="headerlink" title="Hi-C"></a>Hi-C</h2><ul>
<li>拓扑相关结构域(TAD)是基因组上空间上分隔的一些DNA序列，TAD平均长度在1M左右，其中包含一个或数个基因以及基因的调控元件——增强子(enhancer)。增强子不仅控制基因的表达时间还控制基因在不同细胞中的选择性表达。TAD由边界原件(boundary elements，也称为绝缘子)相互隔离，因此TAD内部的基因活性独立于其它TAD</li>
</ul>
<a id="more"></a>
<h2 id="群体进化"><a href="#群体进化" class="headerlink" title="群体进化"></a>群体进化</h2><p>今天逛<a href="http://biotrainee.com/forum.php/" target="_blank" rel="external">生信技能树</a>的时候发现了<strong>ydchen</strong>写的一篇关于群体进化名词解释的<a href="http://www.biotrainee.com:8080/thread-321-1-1.html" target="_blank" rel="external">帖子</a>，写的很不错，所以我这里就copy一下了。要想生信学得好，还得多逛<a href="http://biotrainee.com/forum.php/" target="_blank" rel="external">生信技能树</a></p>
<ul>
<li>等位基因频率：在一个群体中某类等位基因占该基因位点上全部等位基因数的比率</li>
<li>基因型频率：群体中某一基因型个体占群体总个数的比例。可以反映某一基因型个体在群体中的相对数量</li>
<li>群体：指生活在一定空间范围内，能够互相交配并生育具有正常生殖能力后代的同种个体群</li>
<li>遗传平衡定律(又称为哈迪·温伯格定律)：一个不发生突变、迁移和选择的无限大的相互交配的群体中，群体的基因频率和基因型频率将逐代保持不变</li>
<li>适合度：指一个个体能够生存并将基因传给下一代的能力，可用相同环境中不同个体的相对生育率来衡量</li>
<li>突变压力：一定条件下，一个群体的突变率可明显增加形成突变压力，使某个基因频率增高</li>
<li>选择压力：受某种环境条件的影响，某些突变型被选择所作用，使突变基因的频率降低</li>
<li>选择系数：指在选择作用下降低的适合度</li>
<li>群体分层：指群体内存在亚群的现象，亚群内部个体间的相互关系大于整个群体内部个体间的平均亲缘关系</li>
<li>核苷酸多态性(π)：衡量特定群体多态性高低的参数，是指在同一群体中随机挑选的两条DNA序列在各个核苷酸位点上变异的均值。π值越大说明其对应的亚群多态性越高</li>
<li>群体间固定指数(Fst)：衡量群体中等位基因频率是否偏离遗传平衡论比例的指标，用来研究不同群体间的分化程度。其取值为0到1，0代表两个群体未分化，其成员间是完全随机交配的；1代表两个群体完全分化，形成物种隔离，且无共同的多样性存在</li>
<li>θw：Watterson’s 多态性估值，从理论上讲，在中性条件下应当有θw=4Neμ的平衡状态，Ne表示有效群体大小，μ表示每一代的序列突变率</li>
<li>连锁不平衡：相邻位点间的非随机关联，当一个位点上的某一等位基因与另一位点上的某一等位基因共同出现的概率大于随机组合的概率，则这两个位点存在连锁不平衡</li>
<li>瓶颈效应：由于环境骤变(如火灾、地震、洪水等)或者人类活动(如人工选择、驯化)，使得某一生物种群的规模迅速较少，仅有一小部分个体能够顺利通过瓶颈事件，在之后的恢复期内产生大量后代</li>
<li>随机遗传漂变：当一个种群中的生物个体的数量较少时，下一代的个体容易因为有的个体没有产生后代，或是有的等位基因没有传给后代，而和上一代有不同的等位基因频率。一个等位基因可能(在经过一个以上的世代后)因此在这个群体中消失或者固定成为唯一的等位基因。这种现象就是随机遗传漂变</li>
<li>奠基者效应：有少数个体的基因频率决定了他们后代中的基因频率的效应，是一种极端的遗传漂变作用</li>
<li>迁移压力(又称为基因流)：由于某种原因，具有某一基因频率的群体的一部分移入基因频率与其不同的群体中并杂交定居，就会引起迁入群体的基因频率发生改变</li>
<li>有效群体大小：指与实际群体具有相同的基因频率方差或相同杂合度衰减率的理想群体大小，它反映了群体平均近交系数增量的大小以及群体遗传结构中基因的平均纯度</li>
<li>中性学说：认为分子水平上的大多数突变是中性的或近中性的，自然选择对它们不起作用，这些突变靠一代又一代的随机漂变而被保存或趋于消失，从而形成分子水平上的进化性变化或种内变异</li>
<li>Tajima’s D值检验：在原有的平衡状态中θT=θW=4Neμ，所以D值为0，但是如果群体中存在许多低频率的等位基因(稀有等位基因)，使θT&lt;θW，则D<0。相反，当群体中是中等频率的等位基因占主导时，θt>θW，D&gt;0。Tajima把过多低频率等位基因的存在归咎为定向选择时，选择性消除会削弱原有等位基因在群体中的频率，而是新等位基因以低频率补充进来成为稀有等位基因。相反，如果中等频率等位基因占主导，则可能是平衡选择的结果，或者是种群大小在经历瓶颈效应时使稀有等位基因丢失。因此当Tajima’s D显著大于0时，可用于推断瓶颈效应和平衡选择；Tajima’s D显著小于0时，可用于推断群体规模放大和定向选择。由于平衡选择和正向选择都属于正选择的范畴，因此只要D值显著偏离0就可能是自然选择的结果，而当D值不显著偏离0时则中性零假说不能被排除</0。相反，当群体中是中等频率的等位基因占主导时，θt></li>
<li>正选择：自然选择“选留”一些稀少的等位基因，拥有这些等位基因的个体能繁殖更多的后代，这样的突变基因往往具有与原来基因不同的功能，而且该功能使得拥有它的生物更能适应环境</li>
<li>负选择：自然选择淘汰一些稀少的等位基因，拥有这些等位基因的个体不能繁殖或者繁殖很少的后代，这些基因往往丧失了功能</li>
<li>平衡选择：是一种关于自然选择保持种群内遗传多态性的假说，是在一些等位基因上杂合的基因型的系列，这些等位基因的纯合体仅在正常的杂交群体中少量个体中存在，并且在适合度上低于杂合体，然后将会出现有利于在许多座位上发展复等位基因系列的选择压力</li>
<li>正向选择：是指生存环境中的方向性选择(自然选择)或品种的人工定向选择</li>
<li>选择性消除：指由于最近较强的正向自然选择，一个突变位点相邻DNA上的核苷酸之间的差异性下降或消除</li>
<li>微进化：群体在世代过程中等位基因频率的变化，成为微进化即发生在物种内的遗传变化</li>
<li>大进化：从现有物种中产生新物种的过程，是微进化扩展、累积的结果</li>
<li>趋同进化：在突变和选择的作用下，不同物种间具有趋同进化的趋势，这种现象称为趋同进化</li>
<li>遗传负荷：如果一个群体的突变不断积累，并且这些突变是有害的，就会出现适合度下降。这种现象称为遗传负荷</li>
</ul>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171129/dlGEdblL4H.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hi-C&quot;&gt;&lt;a href=&quot;#Hi-C&quot; class=&quot;headerlink&quot; title=&quot;Hi-C&quot;&gt;&lt;/a&gt;Hi-C&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;拓扑相关结构域(TAD)是基因组上空间上分隔的一些DNA序列，TAD平均长度在1M左右，其中包含一个或数个基因以及基因的调控元件——增强子(enhancer)。增强子不仅控制基因的表达时间还控制基因在不同细胞中的选择性表达。TAD由边界原件(boundary elements，也称为绝缘子)相互隔离，因此TAD内部的基因活性独立于其它TAD&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="bioinformatics" scheme="https://ytlogos.github.io/categories/bioinformatics/"/>
    
    
      <category term="evolution" scheme="https://ytlogos.github.io/tags/evolution/"/>
    
      <category term="Hi-C" scheme="https://ytlogos.github.io/tags/Hi-C/"/>
    
  </entry>
  
  <entry>
    <title>生物信息学学习笔记（一）</title>
    <link href="https://ytlogos.github.io/2017/11/28/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/28/生物信息学学习笔记（一）/</id>
    <published>2017-11-28T13:19:05.000Z</published>
    <updated>2017-11-28T13:31:46.880Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171128/D6l28BlfFI.png?imageslim" alt="mark"></p>
<p>生物信息学学习笔记主要是我平常看文献以及一些资料时总结的一些东西，相对来说有点杂，所以我专门开辟出一个新的系列，以便后面可以持续更新。</p>
<a id="more"></a>
<ul>
<li><p>sequence logos方法利用每个位置的高度来表示其保守程度，这样特征高度就反映了相对的变化频率，比如说一个consensus sequence位置上可能是C或者T，sequence logos上C的高度代表了其出现的频率。</p>
</li>
<li><p>改良品种中LD显著增加，这是驯化正向选择的结果，栽培品种的π值、w值相比于野生种明显降低</p>
</li>
<li><p>顺式(cis-)指的是“分子内”，也就是说顺式作用就是自己作用于自己，就像顺式作用元件就是一段DNA序列作用于自己的临近序列，调节它的表达，比如我们常说的增强子、沉默子等。反式(tran-)指的是“分子间”的作用，所以反式作用因子就是一个蛋白质分子，是由A基因编码的，但是可以作用于B基因，调节B基因的表达。但是也存在少量的“顺式作用因子”。因子(factor)在分子生物学中就是特指DNA片段产生的物质，换句话说就是特指蛋白质，比如调节因子、转录因子等。元件(element)指的是DNA或者RNA具有某种特定功能的序列，换句话说就是DNA或者RNA的一片段。</p>
</li>
</ul>
<h2 id="染色质开放性"><a href="#染色质开放性" class="headerlink" title="染色质开放性"></a>染色质开放性</h2><ul>
<li>染色质开放性(chromatin accessibility)是指真核生物染色质DNA在核小体或转录因子等蛋白与其结合后，对其它蛋白能否再结合的开放程度。这一特征反映了染色质转录活跃程度，结合其他DNA修饰(如甲基化)信息，特定条件下的染色质开放性变化可以提供大量的基因表达调控信息，为各种蛋白质结合新位点的发现指明方向。</li>
</ul>
<blockquote>
<p>有趣的是染色质开放性变化往往是各种应激反应(stimulus response)、抗逆反应(stress response)或者发育阶段过渡(transition)发生时非常早期的细胞学事件。在癌症早期诊断和治疗、农作物逆境胁迫的早期防治等方面，染色质结构研究可以提供非常上游的宝贵信息。</p>
</blockquote>
<p>检测染色质开放性的手段主要是足迹法(footprinting)，即利用外来蛋白(如核酸酶、修饰酶等)处理细胞核，再利用酶切、电泳、测序等手段衡量这些蛋白与DNA的结合程度，以此来体现染色质开放性。<br>用于足迹法的外来蛋白主要是核酸酶，最开始简单除暴用的是Dnase Ⅰ，价格低廉，但需要大量的实验材料。DNase Ⅰ主要切割核小体未占据的DNA区域，生成的片段测序之后获得的就是染色质开放区域。后来又出现了MNase Ⅰ，其为外切酶，消化了开放区域之后，测序获得的就是当前状态下核小体或者转录因子等占据的封闭区域。因此二者互为补充。<br>得益于二代测序技术的发展，ATAC-seq(Assay for transposase Accessible Chromatin with sequencing)是其中具备高灵敏度的一种方法。ATAC-seq使用Tn5转座酶，在开放区域跳转，边切割边加上接头，利用PCR技术富集开放区域片段，因此灵敏度高，甚至可以做单细胞测序。<br>所有以核酸酶为基础的DNA足迹法都有一个致命的缺陷：核酸酶切割的偏好性(Bias)。有研究指出DNase Ⅰ切割无核小体和转录因子结合的“裸”DNA时展现出强烈的偏好性，之前许多DNase Ⅰ印记更多地反映是切割的偏好性而非真实的蛋白质结合情况，再加上植物材料由于其细胞结构的特殊性(主要是细胞壁的存在以及丰富的纤维素和多糖)，获取细胞核用于足迹法分析本身就是一个挑战。<br>MAPit(methyltransferase accessibility protocol for individual templates)技术的出现解决了上述部分难题，MAPit利用外源DNA甲基化转移酶处理细胞核，染色质开放区域中的特定“C”位点可被甲基化，封闭区域中的相应“C”位点则不被甲基化，之后进行甲基化测序(Bisulfite sequencing)，从而精确显示染色质的开放程度。该技术利用DNA甲基化组来显示染色质开放性，避免了核酸酶的偏好性问题，且结果同时提供了DNA甲基化组和染色质开放性的信息，配合转录组测序(RNA-seq)，可一次性组合出特定状态下全基因组的甲基化修饰、蛋白结合以及基因表达调控的复杂网络，是功能强大的组合型分析。</p>
<ul>
<li><p>单体型是指位于一条染色体特定区域的一组相互关联，并倾向于以整体遗传给后代的单核苷酸多态性的组合。简单地说就是同源染色体上同一位点的杂合SNP，如在某一位置同源染色体中一条为G，另一条染色体为A。单体型图谱能够将来自于亲本的遗传信息区分开，研究遗传变异。</p>
</li>
<li><p>Hi-C技术是染色体构象捕获(Chromosome Confirmation Capture,3C)的一种衍生技术，是指基于高通量进行染色体构象的捕获，它能够在全基因组范围内捕捉不同基因座位之间的空间交互，研究三维空间中调控基因的DNA元件。</p>
</li>
</ul>
<h2 id="Hi-C技术流程"><a href="#Hi-C技术流程" class="headerlink" title="Hi-C技术流程"></a>Hi-C技术流程</h2><ul>
<li>用甲醛对细胞进行交联固定，使DNA与蛋白、蛋白与蛋白之间进行交联，这样会导致相互作用的DNA片段被交联在一起。</li>
<li>进行酶切(如Hind Ⅲ等限制性内切酶)，使交联两侧产生粘性末端，加入过量限制性内切酶将未交联的DNA与交联的DNA相互分离。限制酶的选择取决于需要分析的基因座位的情况，限制序列较短(4bp)的内切酶切点密集，用于研究较短的座位(10~20kp),而限制序列较长(6bp)的内切酶用于研究较长的座位。</li>
<li>末端修复，引入生物素标记，连接</li>
<li>解交联，使DNA和蛋白、蛋白与蛋白分开，提取DNA，打断，捕获带有生物素标记的片段，进行建库</li>
<li>测序</li>
</ul>
<hr>
<ul>
<li><p>影响基因表达的染色质相互作用的例子之一是：染色体区域可以折叠将增强子以及相关转录因子带到基因附近。</p>
</li>
<li><p>拓扑关联结构域(TAD)是利用Hi-C map分析研究染色质构象信息时获取的一种图形现象，也是染色质局部相互作用较为强烈的一个作用单元，与基因转录表达调控有着密切关系。</p>
</li>
</ul>
<blockquote>
<p>2012年四个独立的研究小组利用Hi-C技术分析不同物种染色质构象信息时均发现了一种高度自我相互作用的基因组单元，并称之为拓扑关联结构域(TAD)，具有保守性</p>
</blockquote>
<ul>
<li>染色质环(chromatin loop)是染色质物理结构的特性之一。染色质中的调控元件一般都相距较远，比如启动子、增强子等距离调控基因位点均有一定间隔。随着3C技术和一些分子研究技术的证实，这些调控元件在三维空间上的距离要比它们之间的插入序列更近一些，因此形成了染色质环。染色质环通过控制启动子、增强子这些顺式调控元件来调控基因转录表达</li>
</ul>
<blockquote>
<p>拓扑关联结构域更像是染色质环在全基因组所有作用位点进行图谱分析时表现出来的一种现象</p>
</blockquote>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171128/D6l28BlfFI.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;p&gt;生物信息学学习笔记主要是我平常看文献以及一些资料时总结的一些东西，相对来说有点杂，所以我专门开辟出一个新的系列，以便后面可以持续更新。&lt;/p&gt;
    
    </summary>
    
      <category term="bioinformatics" scheme="https://ytlogos.github.io/categories/bioinformatics/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（九）</title>
    <link href="https://ytlogos.github.io/2017/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/26/Linux学习笔记（九）/</id>
    <published>2017-11-26T13:19:05.000Z</published>
    <updated>2017-11-26T13:32:19.595Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171120/B6jBAEJ3k8.png?imageslim" alt="mark"></p>
<h2 id="sed实例讲解"><a href="#sed实例讲解" class="headerlink" title="sed实例讲解"></a>sed实例讲解</h2><p>上篇<a href="https://ytlogos.github.io/2017/11/20/Linux学习笔记（八）/">博客</a>已经讲解了sed的基本命令及其使用方法，sed有两种方式进行调用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sed [-n] [-e] &apos;command(s)&apos; files</div><div class="line">sed [-n] -f scriptfile files</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="sed各个选项"><a href="#sed各个选项" class="headerlink" title="sed各个选项"></a>sed各个选项</h2><h3 id="替换命令：s命令"><a href="#替换命令：s命令" class="headerlink" title="替换命令：s命令"></a>替换命令：s命令</h3><p>sed的替换命令语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">s/pattern/replacement/</div></pre></td></tr></table></figure></p>
<p>现在有一个包含3列10行的数据集chroms.txt：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ head -n 3 chroms.txt</div><div class="line">chrom1  3214482 3216968</div><div class="line">chrom1  3216025 3216968</div><div class="line">chrom1  3216022 3216024</div></pre></td></tr></table></figure></p>
<p>我们要将chrom替换成chr：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;s/chrom/chr/&apos; chroms.txt |head -n 3</div><div class="line">chr1    3214482 3216968</div><div class="line">chr1    3216025 3216968</div><div class="line">chr1    3216022 3216024</div></pre></td></tr></table></figure></p>
<blockquote>
<p>不管是pattern还是replacement都是被两个斜杠/包围，叫做定界符，定界符不仅仅只有/，还有：|等<br>sed有部分命令会直接修改原文件，所以使用过程中最后将结果redirect到一个新的文件</p>
</blockquote>
<h4 id="n选项和p命令一起使用表示只打印那些发生替换的行"><a href="#n选项和p命令一起使用表示只打印那些发生替换的行" class="headerlink" title="-n选项和p命令一起使用表示只打印那些发生替换的行"></a>-n选项和p命令一起使用表示只打印那些发生替换的行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ cat company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div><div class="line">$ sed -n &apos;s/u/U/p&apos; company.txt</div><div class="line">baidU 100 5000</div><div class="line">sohU 100 4500</div><div class="line">gUge 50 3000</div></pre></td></tr></table></figure>
<h4 id="选项-i会匹配文件中每一行的第一个匹配"><a href="#选项-i会匹配文件中每一行的第一个匹配" class="headerlink" title="选项-i会匹配文件中每一行的第一个匹配"></a>选项-i会匹配文件中每一行的第一个匹配</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ cat company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div><div class="line">$ sed -i &apos;s/g/G/&apos; company.txt</div><div class="line">$ cat company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">Google 110 5000</div><div class="line">Guge 50 3000</div></pre></td></tr></table></figure>
<h4 id="全面替换标记g"><a href="#全面替换标记g" class="headerlink" title="全面替换标记g"></a>全面替换标记g</h4><p>使用后缀/g标记会替换每一行中的所有匹配<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;s/g/G/g&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">GooGle 110 5000</div><div class="line">GuGe 50 3000</div></pre></td></tr></table></figure></p>
<h4 id="从第n个匹配处开始匹配标记ng"><a href="#从第n个匹配处开始匹配标记ng" class="headerlink" title="从第n个匹配处开始匹配标记ng"></a>从第n个匹配处开始匹配标记ng</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;s/g/G/2g&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">gooGle 110 5000</div><div class="line">guGe 50 3000</div></pre></td></tr></table></figure>
<p>上面是从第二个匹配处开始替换，所以第一个g没有发生替换</p>
<h4 id="E选项调用扩展正则表达式"><a href="#E选项调用扩展正则表达式" class="headerlink" title="-E选项调用扩展正则表达式"></a>-E选项调用扩展正则表达式</h4><p>sed默认使用的时POSIX的基本正则表达式（BRE），通过选项-E我们可以使用扩展版的正则表达式（ERE），举个例子，假设我们有一个字符串：chr1:28427874-28425431,分别代表染色体（chr）、start position以及end position，我们要将这三者分离开来形成3列：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo &apos;chr1:28427874-28425431&apos;|sed -E &apos;s/^(chr[^:]+):([0-9]+)-([0-9]+)/\1\t\2\t\3/&apos;</div><div class="line">chr1    28427874        28425431</div></pre></td></tr></table></figure></p>
<p>看起来有点复杂，主要是涉及到正则表达式，拆开来看的话也不复杂，第一部分^(chr[^:]+):,首先匹配一行的开始，接着匹配（）里面的一切。总结起来就是该部分匹配以chr开头以及至少一个非:的字符，一次匹配到:就结束了。第二部分和第三部分都是匹配至少一个数字。最后将匹配到的三部分形成三列。<br>要实现这一功能还有sed很多方法，比如我们只需要将:和-替换成一个制表符就行了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo &apos;chr1:28427874-28425431&apos;|sed &apos;s/[:-]/\t/g&apos;</div><div class="line">chr1    28427874        28425431</div></pre></td></tr></table></figure></p>
<p>还可以拆成多个命令完成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo &apos;chr1:28427874-28425431&apos;|sed &apos;s/:/\t/g&apos; | sed &apos;s/-/\t/g&apos;</div><div class="line">chr1    28427874        28425431</div></pre></td></tr></table></figure></p>
<p>还可以通过-e选项来添加多个命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo &apos;chr1:28427874-28425431&apos;|sed -e &apos;s/:/\t/g&apos; -e &apos;s/-/\t/g&apos;</div><div class="line">chr1    28427874        28425431</div></pre></td></tr></table></figure></p>
<h4 id="打印特定的几行"><a href="#打印特定的几行" class="headerlink" title="打印特定的几行"></a>打印特定的几行</h4><p>这个类似于head，如果我们需要打印第m到n行，使用’m,np’进行匹配<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sed -n &apos;2,5p&apos; chroms.txt</div><div class="line">chrom1  3216025 3216968</div><div class="line">chrom1  3216022 3216024</div><div class="line">chrom1  3671349 3671498</div><div class="line">chrom1  3214482 3216021</div></pre></td></tr></table></figure></p>
<h3 id="删除命令：d命令"><a href="#删除命令：d命令" class="headerlink" title="删除命令：d命令"></a>删除命令：d命令</h3><h4 id="删除空白行"><a href="#删除空白行" class="headerlink" title="删除空白行"></a>删除空白行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;/^$/d&apos; file</div></pre></td></tr></table></figure>
<h4 id="指定删除第几行"><a href="#指定删除第几行" class="headerlink" title="指定删除第几行"></a>指定删除第几行</h4><p>比如删除第二行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ cat company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div><div class="line">$ sed &apos;2d&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure></p>
<h4 id="删除指定的第几行以及后面所有行"><a href="#删除指定的第几行以及后面所有行" class="headerlink" title="删除指定的第几行以及后面所有行"></a>删除指定的第几行以及后面所有行</h4><p>比如删除第二行及其后面所有行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;2,$d&apos; company.txt</div><div class="line">baidu 100 5000</div></pre></td></tr></table></figure></p>
<p>从上面很容易知道$d表示最后一行，同时删除第m行到第n行也很容易实现了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#删除最后一行</div><div class="line">$ sed &apos;$d&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div><div class="line">#删除第2到3行</div><div class="line">$ sed &apos;2,3d&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure></p>
<h4 id="匹配删除"><a href="#匹配删除" class="headerlink" title="匹配删除"></a>匹配删除</h4><p>比如我们需要删除所有开头是g的行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;/^g/&apos;d company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div></pre></td></tr></table></figure></p>
<blockquote>
<p>注意这里之间匹配用’’围住，d则不用</p>
</blockquote>
<h3 id="已匹配字符串标记-amp"><a href="#已匹配字符串标记-amp" class="headerlink" title="已匹配字符串标记&amp;"></a>已匹配字符串标记&amp;</h3><p>啥意思呢，就是&amp;代表已匹配的项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;s/\w\+/[&amp;]/g&apos; company.txt</div><div class="line">[baidu] [100] [5000]</div><div class="line">[sohu] [100] [4500]</div><div class="line">[google] [110] [5000]</div><div class="line">[guge] [50] [3000]</div></pre></td></tr></table></figure></p>
<p>正则表达式\w\+匹配每一个单词，使用[&amp;]替换它，&amp;对应于之前匹配到的每个单词</p>
<h3 id="子串匹配标记-1"><a href="#子串匹配标记-1" class="headerlink" title="子串匹配标记\1"></a>子串匹配标记\1</h3><p>即匹配给定样式的其中一部分,对于匹配到的第一个子串就标记为\1，以此类推匹配到的第二个子串就是\2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo this is digit 7 in a number|sed &apos;s/digit \([0-9]\)/\1/&apos;</div><div class="line">this is 7 in a number</div></pre></td></tr></table></figure></p>
<p>\(..\)用于匹配子串数字，上述命令中digit 7被匹配到的是子串是7<br>再举个例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo aaa BBB |sed &apos;s/\([a-z]\+\) \([A-Z]\+\)/\2 \1/&apos;</div><div class="line">BBB aaa</div></pre></td></tr></table></figure></p>
<p>上述命令中匹配到的子串分别是aaa、BBB，\2表示BBB，\1表示aaa。</p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>sed表达式可以使用单引号来引用，但是如果表达式内部包含变量字符串，就需要使用双引号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">test=hello </div><div class="line">echo hello WORLD | sed &quot;s/$test/HELLO&quot; </div><div class="line">HELLO WORLD</div></pre></td></tr></table></figure></p>
<h3 id="下一个：n命令"><a href="#下一个：n命令" class="headerlink" title="下一个：n命令"></a>下一个：n命令</h3><p>如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行然后继续<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;/test/&#123; n; s/aa/bb/; &#125;&apos; file</div></pre></td></tr></table></figure></p>
<h3 id="变形：y命令"><a href="#变形：y命令" class="headerlink" title="变形：y命令"></a>变形：y命令</h3><p>把1~10行内所有的abcde转为大写，注意正则表达式元字符不能使用该命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;1,10y/abcde/ABCDE/&apos; file</div></pre></td></tr></table></figure></p>
<h3 id="退出：q命令"><a href="#退出：q命令" class="headerlink" title="退出：q命令"></a>退出：q命令</h3><p>打印完第10行后退出sed<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;10q&apos; file</div></pre></td></tr></table></figure></p>
<h3 id="打印奇数行或者偶数行"><a href="#打印奇数行或者偶数行" class="headerlink" title="打印奇数行或者偶数行"></a>打印奇数行或者偶数行</h3><p>有两种方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#奇数行</div><div class="line">$ $ sed -n &apos;p;n&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">#偶数行</div><div class="line">$ sed -n &apos;n;p&apos; company.txt</div><div class="line">sohu 100 4500</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure></p>
<p>另一种方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#奇数行</div><div class="line">$ sed -n &apos;1~2p&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">#偶数行</div><div class="line">$ sed -n &apos;2~2p&apos; company.txt</div><div class="line">sohu 100 4500</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure></p>
<p>sed内容十分丰富，这里只是稍微介绍一些主要功能，想要深入学习的话可参考<a href="http://www.gnu.org/software/sed/manual/sed.html" target="_blank" rel="external">官方文档</a></p>
<p>注：<br>本文参考了sed的<a href="http://www.gnu.org/software/sed/manual/sed.html" target="_blank" rel="external">官方文档</a>以及Linux命令大全中的<a href="http://man.linuxde.net/sed" target="_blank" rel="external">sed</a>命令用法</p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171120/B6jBAEJ3k8.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;sed实例讲解&quot;&gt;&lt;a href=&quot;#sed实例讲解&quot; class=&quot;headerlink&quot; title=&quot;sed实例讲解&quot;&gt;&lt;/a&gt;sed实例讲解&lt;/h2&gt;&lt;p&gt;上篇&lt;a href=&quot;https://ytlogos.github.io/2017/11/20/Linux学习笔记（八）/&quot;&gt;博客&lt;/a&gt;已经讲解了sed的基本命令及其使用方法，sed有两种方式进行调用：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sed [-n] [-e] &amp;apos;command(s)&amp;apos; files&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed [-n] -f scriptfile files&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
      <category term="sed" scheme="https://ytlogos.github.io/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（八）</title>
    <link href="https://ytlogos.github.io/2017/11/20/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/20/Linux学习笔记（八）/</id>
    <published>2017-11-20T09:19:05.000Z</published>
    <updated>2017-11-20T09:48:40.764Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171120/B6jBAEJ3k8.png?imageslim" alt="mark"></p>
<h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><p>sed是一种功能强大的流式文本编辑器，能够完美结合正则表达式使用。处理时sed将当前处理的行储存在临时缓冲区中，称为模式空间（pattern space），接着sed命令处理缓冲区的内容，处理完成后打印到屏幕，接着继续处理下一行，不断重复直到文件结束。</p>
<a id="more"></a>
<h2 id="sed的用途"><a href="#sed的用途" class="headerlink" title="sed的用途"></a>sed的用途</h2><p>sed用途十分广泛：</p>
<ul>
<li>文本替换</li>
<li>选择性的文件输出</li>
<li>从文本特定位置进行编辑</li>
<li>无交互式的文本编辑</li>
</ul>
<h2 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h2><p>sed遵循简单的工作流：读取、执行以及显示，下图显示sed的工作流程：<br><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171120/4556AfHI7k.png?imageslim" alt="mark"></p>
<ul>
<li>读取：sed从输入流（文件、管道、标准输入STDIN等）中读取一行并且存储到模式空间的内部缓冲区</li>
<li>执行：默认情况下所有的sed命令都在模式空间中按顺序执行，除非指定了行的地址，否则sed命令将会在所有的行上依次执行</li>
<li>显示：发送修改后的内容到输出流，之后模式空间将被清空，继续重复上述过程直到文件结束</li>
</ul>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li>模式空间（pattern space）是一块活跃的缓冲区，在sed编辑器执行命令时它会保存待检查的文本</li>
<li>默认情况下所有的sed命令都是在模式空间中执行，因此输入文件不会发生改变</li>
<li>另外一个缓冲区是保持空间（hold buffer），在处理模式空间中的某些行时，可以利用保持空间来临时保存一些行，在每一个循环结束的时候，sed将会移除模式空间的内容，但是保持空间的内容在所有循环过程中是持久存储的，sed命令无法直接在保持空间中执行，因此sed允许数据在模式空间与保持空间之间切换</li>
<li>初始情况下模式空间和保持空间都是空的</li>
<li>如果没有提供输入文件的话sed将会从标准输入接收请求</li>
<li>如果没有提供地址范围的话，默认情况下sed将对所有的行进行操作</li>
</ul>
<h2 id="sed的选型、命令、替换标记"><a href="#sed的选型、命令、替换标记" class="headerlink" title="sed的选型、命令、替换标记"></a>sed的选型、命令、替换标记</h2><p>sed作为一个强大的流式编辑器，具有其特有的格式</p>
<h3 id="sed命令格式"><a href="#sed命令格式" class="headerlink" title="sed命令格式"></a>sed命令格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sed [options] &apos;commands&apos; file(s)</div><div class="line">sed [options] -f scriptfile file(s)</div></pre></td></tr></table></figure>
<h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><ul>
<li>-e：以选项中指定的script来处理输入的文本文件</li>
<li>-f：以选项中指定的script文本来处理输入的文本文件</li>
<li>-n或者–quiet或者–silent：仅显示script处理后的结果</li>
</ul>
<h3 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h3><ul>
<li>a\：在当前行下面插入文本</li>
<li>i\：在当前行上面插入文本</li>
<li>c\：将选定的行改为新的版本</li>
<li>d：删除选择的行</li>
<li>D：删除模板块的第一行</li>
<li>s：替换指定字符</li>
<li>h：拷贝模板块中的内容到内存中的缓冲区</li>
<li>H：追加模板块中的内容到内存中的缓冲区</li>
<li>g：获取缓冲区的内容并替代当前模板块的内容</li>
<li>G：获取缓存区的内容，并追加到当前模板块文本后面</li>
<li>l：列出不能打印字符的清单</li>
<li>n：读取下一个输入行，并用下一个命令处理新的行而不是用第一个命令</li>
<li>N：追加下一个输入行到模板块后面并在两者间嵌入一个新行，改变当前行号码</li>
<li>p：打印模板块的行</li>
<li>P：打印模板块的第一行</li>
<li>q：退出sed</li>
<li>b label：分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾</li>
<li>r file：从file中读取行</li>
<li>t table：if分支，从最后一行开始，条件一旦满足或者T、t命令，将导致分支到带有标号的命令处或者到脚本的末尾</li>
<li>T table：错误分支，从最后一行开始，一旦发生错误或者T、t命令，将导致分支到带有标号的命令处或者到脚本的末尾</li>
<li>w file：写并追加到file末尾</li>
<li>W file：写并追加模板块的第一行到file末尾</li>
<li>！：表示后面的命令对所有没有被选定的行发生作用</li>
<li>=：打印当前行号码</li>
</ul>
<h3 id="sed替换标记"><a href="#sed替换标记" class="headerlink" title="sed替换标记"></a>sed替换标记</h3><ul>
<li>g：表示行内全面替换</li>
<li>p：表示打印行</li>
<li>w：表示将行写入一个文件</li>
<li>x：表示互换模板块中的文本和缓冲区的文本</li>
<li>y：表示将一个字符翻译为另外的字符（不用于正则表达式）</li>
<li>\l：子串匹配标记</li>
<li>&amp;：已匹配字符串标记</li>
</ul>
<h3 id="sed元字符集（就是一些正则表达式）"><a href="#sed元字符集（就是一些正则表达式）" class="headerlink" title="sed元字符集（就是一些正则表达式）"></a>sed元字符集（就是一些正则表达式）</h3><ul>
<li>^：匹配行的开始，如/^sed/匹配所有以sed开头的行</li>
<li>$：匹配行结束，如/sed$/匹配所有以sed结尾的行</li>
<li>.：匹配一个非换行符的任意字符，如/s.d/匹配在sd之间接一个任意字符</li>
<li><em>：匹配0个或多个字符，如/</em>sed/匹配所有模板是一个或多个字符后接sed的行</li>
<li>[]：匹配一个指定范围内的字符，如/[sH]ed/匹配sed和Hed</li>
<li>[^]：匹配一个不在指定范围内的字符，如/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字符开头紧跟sed的行</li>
<li>\(..\)：匹配子串，保存匹配的字符，如s/(love)able/\1rs，loveabel被替换成了lovers</li>
<li>&amp;：保存搜索字符用来替换其它字符，如s/love/**&amp;**/，love替换成了**love**</li>
<li>\&lt;：匹配单词的开始，如/\&lt;love/匹配包含以love开头的单词的行</li>
<li>\&gt;：匹配单词的结束，如/love\&gt;/匹配包含以love结尾的单词的行</li>
<li>x\{m\}：重复字符x，m次，如/0\{5\}匹配包含5个0的行】</li>
<li>x\{m,\}：重复字符x至少m次，如/0\{5,\}/匹配至少5个0的行</li>
<li>x\{m,n\}：重复字符x至少m次，之多n次，如/0\{5,10\}/匹配5-10个0的行</li>
</ul>
<p>后面将讲解sed实例进行解释各个选项及其使用。</p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171120/B6jBAEJ3k8.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;sed&quot;&gt;&lt;a href=&quot;#sed&quot; class=&quot;headerlink&quot; title=&quot;sed&quot;&gt;&lt;/a&gt;sed&lt;/h2&gt;&lt;p&gt;sed是一种功能强大的流式文本编辑器，能够完美结合正则表达式使用。处理时sed将当前处理的行储存在临时缓冲区中，称为模式空间（pattern space），接着sed命令处理缓冲区的内容，处理完成后打印到屏幕，接着继续处理下一行，不断重复直到文件结束。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
      <category term="sed" scheme="https://ytlogos.github.io/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（七）</title>
    <link href="https://ytlogos.github.io/2017/11/16/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/16/Linux学习笔记（七）/</id>
    <published>2017-11-16T01:19:05.000Z</published>
    <updated>2017-11-20T09:49:30.533Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171113/97fC0bjE56.png?imageslim" alt="mark"></p>
<h2 id="awk命令"><a href="#awk命令" class="headerlink" title="awk命令"></a>awk命令</h2><p><strong>awk</strong>是一种编程语言，用于在unix下处理数据以及文本。数据可以来自stdin、一个或者多个文件或者其它命令的输出，同时支持自定义函数和正则表达式，更多是作为脚本来使用。</p>
<a id="more"></a>
<h2 id="awk命令格式以及选项"><a href="#awk命令格式以及选项" class="headerlink" title="awk命令格式以及选项"></a>awk命令格式以及选项</h2><p><strong>awk</strong>使用一个或多个如下结构：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pattren &#123; action &#125;</div></pre></td></tr></table></figure>
<p>每一个pattern是一个表达式或者正则表达式，pattern类似于其它编程语言中的if语句：如果表达式为TRUE或者正则表达式匹配到的话，后面的action命令会被执行。</p>
<h2 id="awk语法形式"><a href="#awk语法形式" class="headerlink" title="awk语法形式"></a>awk语法形式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">awk [options] &apos;script&apos; var=value file(s)</div><div class="line">awk [options] -f scriptfile var=value file(s)</div></pre></td></tr></table></figure>
<p>常用命令选项：</p>
<ul>
<li>-F fs：fs指定输入分隔符，fs可以是字符串或者正则表达式</li>
<li>-v var=value：赋值一个用户定义变量，将外部变量传递给awk</li>
<li>-f scriptfile：从脚本文件中读取awk命令</li>
<li>-m[fr] val：对val值设置内在限制，-mf选项限制分配给val的最大块数目；-mr选项限制记录的最大块数目，这两个功能是扩展功能，在标准awk中不适用。</li>
</ul>
<h2 id="awk模式以及操作"><a href="#awk模式以及操作" class="headerlink" title="awk模式以及操作"></a>awk模式以及操作</h2><p>上面已经讲了pattern以及action，awk就是有一个或多个模式与操作组成的。</p>
<h3 id="模式pattern"><a href="#模式pattern" class="headerlink" title="模式pattern"></a>模式pattern</h3><p>pattern可以是以下任意一种：</p>
<ul>
<li>正则表达式</li>
<li>关系表达式：使用运算符操作，可以是字符串或者数字的比较测试</li>
<li>模式匹配表达式：用运算符<code>~</code>(匹配)和<code>!</code>(不匹配)</li>
<li>BEGIN语句块、pattern语句块以及END语句块，涉及十分复杂，后续再讲解</li>
</ul>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>操作由一个或多个命令、函数表达式组成，相互之间使用换行符或者分号分开，并位于大括号内。主要部分是：</p>
<ul>
<li>变量或者数组赋值</li>
<li>输出命令</li>
<li>内置函数</li>
<li>控制流语句</li>
</ul>
<h2 id="awk脚本基本结构"><a href="#awk脚本基本结构" class="headerlink" title="awk脚本基本结构"></a>awk脚本基本结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk &apos;BEGIN&#123; print &quot;start&quot;&#125; pattern&#123; command &#125; END&#123; print &quot;end&quot;&#125;&apos; file</div></pre></td></tr></table></figure>
<p>一个awk脚本通常是由：BEIGIN语句块、能够使用模式匹配的通用语句块、END语句块三部分组成，这三部分是可选的，任意一部分都可以不出现在脚本中。脚本通常是在’’或””中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">awk &apos;BEGIN&#123; i=0 &#125; &#123; i++ &#125; END&#123; print i &#125;&apos; filename</div><div class="line">awk &quot;BEGIN&#123; i=0 &#125; &#123; i++ &#125; END&#123; print i &#125;&quot; filename</div></pre></td></tr></table></figure>
<h3 id="awk的工作原理"><a href="#awk的工作原理" class="headerlink" title="awk的工作原理"></a>awk的工作原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk &apos;BEGIN&#123; commands &#125; pattern&#123; commands &#125; END&#123; commands &#125;&apos;</div></pre></td></tr></table></figure>
<p>工作原理：</p>
<ul>
<li>第一步是执行<code>BEGIN{ commands }</code>语句块中的语句</li>
<li>第二步是从文件或者标准输入中读取一行，然后执行<code>pattern{ commands }</code>语句块，它是逐行扫描文件，从第一行到最后一行重复此命令直到文件被完全读取完毕</li>
<li>最后当读至输入流末尾时，执行<code>END{ commands }</code>语句块</li>
</ul>
<p>注意事项：</p>
<ul>
<li><code>BEGIN{ commands }</code>语句块在awk开始从输入流中读取之前被执行，是一个可选语句块，比如变量初始化、打印输出表格的表头等语句通常可以写在此语句块中</li>
<li><code>END{ commands }</code>语句块在awk从输入流中读取所有行之后被执行，比如打印所有行的分析结果这类信息汇总都是在此语句块中完成，也是一个可选语句块</li>
<li><code>pattern{ commands }</code>语句块是最重要的组成部分，也是可选的，如果没有提供此语句块，则默认执行{ print },即打印每一个读取到的行，awk读取到的每一行都会执行该语句块</li>
</ul>
<p>我们举个例子来说明一下：打印出<em>example.bed</em>文件的每一行，并且在开始读取之前打印出start，读取完毕之后打印出end</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;BEGIN&#123;print &quot;start&quot;&#125;&#123;print&#125;END&#123;print &quot;end&quot;&#125;&apos; example.bed</div><div class="line">start</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr3    11      28</div><div class="line">chr1    40      49</div><div class="line">chr3    16      27</div><div class="line">chr1    9       28</div><div class="line">chr2    35      54</div><div class="line">chr1    10      19</div><div class="line">end</div></pre></td></tr></table></figure>
<blockquote>
<p>敲黑板了！！！当print不带任何参数时，它就打印当前行，当print的参数以逗号进行分隔时，打印时则以空格作为定界符，在awk的print语句块中双引号是被当作拼接符来使用的。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ echo|awk &apos;&#123;var1=&quot;v1&quot;;var2=&quot;v2&quot;;var3=&quot;v3&quot;;print var1,var2,var3;&#125;&apos;</div><div class="line"></div><div class="line">v1 v2 v3</div><div class="line">$ echo|awk &apos;&#123;var1=&quot;v1&quot;;var2=&quot;v2&quot;;var3=&quot;v3&quot;;print var1&quot;=&quot;var2&quot;=&quot;var3;&#125;&apos;</div><div class="line"></div><div class="line">v1=v2=v3</div></pre></td></tr></table></figure>
<p>{}类似于循环体，会对文件每一行进行迭代，通常变量初始化语句(比如i=0)以及打印文件头部的语句放在BEGIN语句块中，而将打印的结果等语句放在END语句块中。</p>
<h2 id="awk内置变量"><a href="#awk内置变量" class="headerlink" title="awk内置变量"></a>awk内置变量</h2><p>awk内置大量的变量方便我们直接调用</p>
<ul>
<li>$n：当前记录的第n个字段，比如n为1表示第一个字段，n为2表示第二字段，以此类推</li>
<li>$0：表示执行过程中当前行的文本内容</li>
<li>FS：字段分隔符，默认是空格</li>
<li>IGNORECASE：如果为真表示忽略大小写进行匹配</li>
<li>NF：表示字段数，在执行过程中对应于当前的字段数</li>
<li>NR：表示记录数，在执行过程中对应于当前的行号</li>
<li>OFMT：数字的输出格式，默认为%.6g</li>
<li>OFS：输出字段分隔符，默认值为空格</li>
<li>ORS：输出记录分隔符，默认值为一个换行符</li>
<li>RS：记录分隔符：默认是空格</li>
<li>RSTART：由match函数所匹配的字符串的第一个位置</li>
<li>RLENGTH：由match函数所匹配到的字符串的长度</li>
</ul>
<p>举例说明部分变量：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ head -n 3 example.bed|awk &apos;&#123;print &quot;Line No:&quot;NR&quot;, No of fields:&quot;NF, &quot;$0=&quot;$0,&quot;$1=&quot;$1,&quot;$2=&quot;$2,&quot;$3=&quot;$3&#125;&apos;</div><div class="line">Line No:1, No of fields:3 $0=chr1       26      39 $1=chr1 $2=26 $3=39</div><div class="line">Line No:2, No of fields:3 $0=chr1       32      47 $1=chr1 $2=32 $3=47</div><div class="line">Line No:3, No of fields:3 $0=chr3       11      28 $1=chr3 $2=11 $3=28</div></pre></td></tr></table></figure>
<p>上面我们先选取前三行，然后分别打印出每一行的行号，每一行的字段数以及每一行的每一个字段。<br>由于NF表示字段数，因此<code>print $NF</code>就会打印出每一行的最后一个字段,<code>print $(NF-1)</code>就会打印出倒数第二个字段，依此类推。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ head -n 3 example.bed|awk &apos;&#123;print $NF&#125;&apos;</div><div class="line">39</div><div class="line">47</div><div class="line">28</div></pre></td></tr></table></figure>
<p>统计一个文件有多少行可以使用以下命令语句：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;END&#123;print NR&#125;&apos; Mus_musculus.GRCm38.75_chr1.gtf</div><div class="line">81231</div></pre></td></tr></table></figure>
<p>上面我们只是用了END语句块，在读入每一行时awk会将NR更新为对应的行号，所以当读取到最后一行时就会打印出最后一行的行号NR也就是文件的总行数了。</p>
<h2 id="传递外部变量给awk"><a href="#传递外部变量给awk" class="headerlink" title="传递外部变量给awk"></a>传递外部变量给awk</h2><p>借助-v选项可以将外部值（非来自stdin）传递给awk：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ var=1000</div><div class="line">$ echo |awk &apos;&#123;print var&#125;&apos; var=&quot;$var&quot;</div><div class="line">1000</div></pre></td></tr></table></figure>
<h2 id="awk运算与判断"><a href="#awk运算与判断" class="headerlink" title="awk运算与判断"></a>awk运算与判断</h2><p>awk不仅支持算术运算还支持逻辑运算</p>
<h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>+-</td>
<td>加减</td>
</tr>
<tr>
<td>* / &amp;</td>
<td>乘 除 求余</td>
</tr>
<tr>
<td>+-！</td>
<td>一元加减 逻辑非</td>
</tr>
<tr>
<td>^<em>*</em></td>
<td>求幂</td>
</tr>
<tr>
<td>—++ –</td>
<td>增加或减少，作为前缀</td>
</tr>
</tbody>
</table>
<blockquote>
<p>所有算术运算符进行操作，操作数自动转为数值，所有非数值转为0</p>
</blockquote>
<h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>主要赋值运算符有：= += -= <em>= /= ……= *</em>=</p>
<p>举例说明：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+=5,等价于a=a+5.其它类似</div></pre></td></tr></table></figure>
<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>就是我们常见的”或”、”与”、”非”</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;BEGIN&#123;a=1;b=2;print (a&gt;5&amp;&amp;b&gt;2),(a&gt;5||b&lt;=2);&#125;&apos;</div><div class="line">0 1</div></pre></td></tr></table></figure>
<h3 id="正则运算符"><a href="#正则运算符" class="headerlink" title="正则运算符"></a>正则运算符</h3><p>主要有~和~！即匹配正则表达式和不匹配</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;BEGIN&#123;a=&quot;100test&quot;;if(a~/^100*/)&#123;print &quot;OK&quot;;&#125;&#125;&apos;</div><div class="line">OK</div></pre></td></tr></table></figure>
<h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p>主要是&gt;、&gt;=、=、==、!=、&lt;、&lt;=等</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;BEGIN&#123;a=11;if(a&gt;=9)&#123;print &quot;OK&quot;;&#125;&#125;&apos;</div><div class="line">OK</div></pre></td></tr></table></figure>
<h3 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h3><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>$</td>
<td>字段引用</td>
</tr>
<tr>
<td>空格</td>
<td>字符串连接符</td>
</tr>
<tr>
<td>?:</td>
<td>C条件表达式</td>
</tr>
<tr>
<td>in</td>
<td>数组中是否存在某值</td>
</tr>
</tbody>
</table>
<h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171114/1JeD56aLBg.png?imageslim" alt="级别越高越优先"></p>
<h2 id="awk高级输入输出"><a href="#awk高级输入输出" class="headerlink" title="awk高级输入输出"></a>awk高级输入输出</h2><h3 id="next语句读取下一条记录"><a href="#next语句读取下一条记录" class="headerlink" title="next语句读取下一条记录"></a>next语句读取下一条记录</h3><p>awk中的next语句使用：在循环逐行匹配，如果遇到next，就会跳过当前行，直接忽略下面的语句而进入下一匹配，一般用于多行匹配</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;NR%2==1&#123;next&#125;&#123;print NR,$0;&#125;&apos; example.bed</div><div class="line">2 chr1  32      47</div><div class="line">4 chr1  40      49</div><div class="line">6 chr1  9       28</div><div class="line">8 chr1  10      19</div></pre></td></tr></table></figure>
<p>后面还有很多复杂用法我暂时不讲了，再者如果遇到更复杂的情况最好使用其他更强大的工具比如python。下面我会讲讲awk如何处理生物信息学数据。</p>
<h3 id="条件筛选"><a href="#条件筛选" class="headerlink" title="条件筛选"></a>条件筛选</h3><p>我们想要将长度大于18的行找出来（即end position-start position&gt;18）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;$3-$2&gt;18&apos; example.bed</div><div class="line">chr1    9       28</div><div class="line">chr2    35      54</div></pre></td></tr></table></figure>
<p>下面是一些常用的逻辑操作符</p>
<table>
<thead>
<tr>
<th>Comparison</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>a==b</td>
<td>a is equal to b</td>
</tr>
<tr>
<td>a!=b</td>
<td>a is not equal to b</td>
</tr>
<tr>
<td>a &lt; b</td>
<td>a is less than b</td>
</tr>
<tr>
<td>a &gt; b</td>
<td>a is greater than b</td>
</tr>
<tr>
<td>a &lt;= b</td>
<td>a is less than or equal to b</td>
</tr>
<tr>
<td>a &gt;= b</td>
<td>a is greater than or equal to b</td>
</tr>
<tr>
<td>a ~ b</td>
<td>a matches regular expression pattern b</td>
</tr>
<tr>
<td>a !~ b</td>
<td>a does not match regular expression pattern b</td>
</tr>
<tr>
<td>a &amp;&amp; b</td>
<td>logical and a and b</td>
</tr>
<tr>
<td>!a</td>
<td>not a (logical negation)</td>
</tr>
</tbody>
</table>
<p>筛选出位于染1号染色体上长度大于10的行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;$1~/chr1/ &amp;&amp; $3-$2&gt;10&apos; example.bed</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr1    9       28</div></pre></td></tr></table></figure>
<p><code>$1~/chr1/</code>是一正则表达式匹配（正则表达式在符号斜杠里），表示第一列中能匹配到chr1的行，<code>~</code>表示匹配，不匹配的话使用<code>!~</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;$1!~/chr1/ &amp;&amp; $3-$2&gt;10&apos; example.bed</div><div class="line">chr3    11      28</div><div class="line">chr3    16      27</div><div class="line">chr2    35      54</div></pre></td></tr></table></figure>
<p>正则表达式结合其他复杂命令（action）可以解决很多复杂问题，比如我们想要将2和3号染色体每行长度都打印出来自成一列：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;$1!~/chr1/ &#123;print $0 &quot;\t&quot; $3-$2&#125;&apos; example.bed</div><div class="line">chr3    11      28      17</div><div class="line">chr3    16      27      11</div><div class="line">chr2    35      54      19</div></pre></td></tr></table></figure>
<p>目前我们已经讲了awk可以使用的两个功能：</p>
<ul>
<li>结合正则表达式以及算术对数据集进行过滤</li>
<li>利用算术重铸数据集的列</li>
</ul>
<h2 id="BEGIN和END"><a href="#BEGIN和END" class="headerlink" title="BEGIN和END"></a>BEGIN和END</h2><p>前面我们已经讲了BEGIN和END，BEGIN在初始化变量方面十分有用，比如如果我们想要求平均长度的话，首先我们可以求和再除以总行数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;BEGIN&#123;sum=0&#125;;&#123;sum+=($3-$2)&#125;;END&#123;print &quot;mean: &quot;sum/NR&#125;;&apos; example.bed</div><div class="line">mean: 14</div></pre></td></tr></table></figure></p>
<p>由于NR表示当前行数，因此我们就可以利用它来提取数据集中的数据，比如提取example.bed中的3-5行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;NR&gt;=3&amp;&amp;NR&lt;=5&apos; example.bed</div><div class="line">chr3    11      28</div><div class="line">chr1    40      49</div><div class="line">chr3    16      27</div></pre></td></tr></table></figure></p>
<p>使用awk我们可以很方便的实现BED与GTF文件之间的转换，比如我们可以十分快速的实现从GTF文件中提取出BED文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;!/^#/ &#123;print $1 &quot;\t&quot; $4-1 &quot;\t&quot; $5&#125;&apos; Mus_musculus.GRCm38.75_chr1.gtf|head -n 3</div><div class="line">1       3054232 3054733</div><div class="line">1       3054232 3054733</div><div class="line">1       3054232 3054733</div></pre></td></tr></table></figure></p>
<blockquote>
<p>这里需要注意的是BED文件索引是从0开始的，GTF索引是从1开始的，因此start position我们需要减去1.</p>
</blockquote>
<p>awk内置了很多函数可以调用：</p>
<table>
<thead>
<tr>
<th>function</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td>length(s)</td>
<td>length 0f a string s</td>
</tr>
<tr>
<td>tolower(s)</td>
<td>convert string s to lowercase</td>
</tr>
<tr>
<td>touppper(s)</td>
<td>convert string s to uppercase</td>
</tr>
<tr>
<td>substr(s,i,j)</td>
<td>return the substring of s that starts at i and ends at j</td>
</tr>
<tr>
<td>split(s,x,d)</td>
<td>split string s into chunks by delimiter d,place chunks in array x</td>
</tr>
<tr>
<td>sub(f,r,s)</td>
<td>find regular expression f in s and replace it with r(modifing s in place);use gsub for global substitution;returns a positive value if string is found</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171113/97fC0bjE56.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;awk命令&quot;&gt;&lt;a href=&quot;#awk命令&quot; class=&quot;headerlink&quot; title=&quot;awk命令&quot;&gt;&lt;/a&gt;awk命令&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;awk&lt;/strong&gt;是一种编程语言，用于在unix下处理数据以及文本。数据可以来自stdin、一个或者多个文件或者其它命令的输出，同时支持自定义函数和正则表达式，更多是作为脚本来使用。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
      <category term="awk" scheme="https://ytlogos.github.io/tags/awk/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（六）</title>
    <link href="https://ytlogos.github.io/2017/11/15/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/15/Linux学习笔记（六）/</id>
    <published>2017-11-15T05:19:05.000Z</published>
    <updated>2017-11-13T10:55:29.603Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171113/Fjbj28bH1F.png?imageslim" alt="mark"><br><a id="more"></a></p>
<h2 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h2><p>linux命令<code>uniq</code>可以将<strong>连续重复</strong>去除掉，举个例子说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ cat letters.txt</div><div class="line">A</div><div class="line">A</div><div class="line">B</div><div class="line">C</div><div class="line">B</div><div class="line">C</div><div class="line">C</div><div class="line">C</div></pre></td></tr></table></figure></p>
<p>里面存有重复数据，利用<code>uniq</code>可以有效的去除连续重复：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ uniq letters.txt</div><div class="line">A</div><div class="line">B</div><div class="line">C</div><div class="line">B</div><div class="line">C</div></pre></td></tr></table></figure></p>
<blockquote>
<p>可以看到只有连续重复才被执行只剩下一个，如果我们要去除所有的重复只保留一个，不管是不是连不连续，可以先进行排序再去重</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sort letters.txt|uniq</div><div class="line">A</div><div class="line">B</div><div class="line">C</div></pre></td></tr></table></figure>
<p>如果存在大小写字母，可以添加参数-i来忽略大小写。还有一个选项-c可以用来统计连续重复次数，同理要统计所有重复次数先进行排序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ uniq -c letters.txt</div><div class="line">      2 A</div><div class="line">      1 B</div><div class="line">      1 C</div><div class="line">      1 B</div><div class="line">      3 C</div><div class="line"># sort then uniq</div><div class="line">$ sort letters.txt|uniq -c</div><div class="line">      2 A</div><div class="line">      2 B</div><div class="line">      4 C</div></pre></td></tr></table></figure></p>
<p>再来一个，统计gtf文件中CDS、UTR等数目：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ grep -v &quot;^#&quot; Mus_musculus.GRCm38.75_chr1.gtf|cut -f3|sort|uniq -c|column -t</div><div class="line">25901  CDS</div><div class="line">36128  exon</div><div class="line">2027   gene</div><div class="line">2290   start_codon</div><div class="line">2299   stop_codon</div><div class="line">4993   transcript</div><div class="line">7588   UTR</div></pre></td></tr></table></figure></p>
<p>根据数目从大到小进行排序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ grep -v &quot;^#&quot; Mus_musculus.GRCm38.75_chr1.gtf|cut -f3|sort|uniq -c|sort -rn |column -t</div><div class="line">36128  exon</div><div class="line">25901  CDS</div><div class="line">7588   UTR</div><div class="line">4993   transcript</div><div class="line">2299   stop_codon</div><div class="line">2290   start_codon</div><div class="line">2027   gene</div></pre></td></tr></table></figure></p>
<p>再深入一点展示不停链上的数目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ grep -v &quot;^#&quot; Mus_musculus.GRCm38.75_chr1.gtf|cut -f3,7|sort|uniq -c|sort -rn|column -t</div><div class="line">18134  exon         +</div><div class="line">17994  exon         -</div><div class="line">13010  CDS          -</div><div class="line">12891  CDS          +</div><div class="line">3834   UTR          -</div><div class="line">3754   UTR          +</div><div class="line">2511   transcript   -</div><div class="line">2482   transcript   +</div><div class="line">1155   stop_codon   -</div><div class="line">1155   start_codon  -</div><div class="line">1144   stop_codon   +</div><div class="line">1135   start_codon  +</div><div class="line">1034   gene         +</div><div class="line">993    gene         -</div></pre></td></tr></table></figure></p>
<p>还可以查看特定基因上的CDS等数目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ grep &quot;ENSMUSG00000033793&quot; Mus_musculus.GRCm38.75_chr1.gtf|cut -f3|sort|uniq -c|sort -rn |column -t</div><div class="line">14  exon</div><div class="line">13  CDS</div><div class="line">3   UTR</div><div class="line">1   transcript</div><div class="line">1   stop_codon</div><div class="line">1   start_codon</div><div class="line">1   gene</div></pre></td></tr></table></figure></p>
<p>参数选项-d提供了一个数据集中的重复项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ uniq -d mm_gene_names.txt|wc -l</div><div class="line">0</div></pre></td></tr></table></figure></p>
<p>这个数据集中没有重复项！！！</p>
<h2 id="Join"><a href="#Join" class="headerlink" title="Join"></a>Join</h2><p>join顾名思义就是将不同数据集根据相同的列合并在一起，需要注意的是两个文件需要经过排序才能合并在一起，因此第一步需要检查数据集有没有排序，没有的话需要进行排序。<br>join基本语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">join -1 &lt;file_1_field&gt; -2 &lt;file_2_field&gt; &lt;file_1&gt; &lt;file_2&gt;</div></pre></td></tr></table></figure></p>
<p>其中file_1和file_2是两个需要合并的文件，file_1_field表示file_1中合并的列，file_2_field同理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sort -k1,1 example.bed &gt; example_sorted.bed</div><div class="line">$ sort -c -k1,1 example_lengths.txt</div></pre></td></tr></table></figure></p>
<p>经验证两个数据集都已经排过序了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ join -1 1 -2 1 example_sorted.bed example_lengths.txt &gt; example_with_lengths.txt</div><div class="line">$ cat example_with_lengths.txt|column -t</div><div class="line">chr1  10  19  58352</div><div class="line">chr1  26  39  58352</div><div class="line">chr1  32  47  58352</div><div class="line">chr1  40  49  58352</div><div class="line">chr1  9   28  58352</div><div class="line">chr2  35  54  39521</div><div class="line">chr3  11  28  24859</div><div class="line">chr3  16  27  24859</div></pre></td></tr></table></figure></p>
<p>如果我们将<em>example_lengths.txt</em>中的chr3去除掉再进行合并，结果会怎么样呢？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ head -n2 example_lengths.txt &gt; example_lengths_alt.txt</div><div class="line">$ join -1 1 -2 1 example_sorted.bed example_lengths_alt.txt</div><div class="line">chr1 10 19 58352</div><div class="line">chr1 26 39 58352</div><div class="line">chr1 32 47 58352</div><div class="line">chr1 40 49 58352</div><div class="line">chr1 9 28 58352</div><div class="line">chr2 35 54 39521</div></pre></td></tr></table></figure></p>
<p>结果发现chr3被join剔除掉了，因此join只会合并文件共有的项，如果想要保留chr3可以添加参数选项-a实现：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ join -1 1 -2 1 -a 1 example_sorted.bed example_lengths_alt.txt|column -t</div><div class="line">chr1  10  19  58352</div><div class="line">chr1  26  39  58352</div><div class="line">chr1  32  47  58352</div><div class="line">chr1  40  49  58352</div><div class="line">chr1  9   28  58352</div><div class="line">chr2  35  54  39521</div><div class="line">chr3  11  28</div><div class="line">chr3  16  27</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171113/Fjbj28bH1F.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
      <category term="uniq" scheme="https://ytlogos.github.io/tags/uniq/"/>
    
      <category term="join" scheme="https://ytlogos.github.io/tags/join/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（五）</title>
    <link href="https://ytlogos.github.io/2017/11/14/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/14/Linux学习笔记（五）/</id>
    <published>2017-11-14T05:19:05.000Z</published>
    <updated>2017-11-13T07:27:58.448Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171112/9Egg9ALKHB.png?imageslim" alt="mark"></p>
<h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a><strong><code>sort</code></strong></h2><p><code>sort</code>命令在<strong>linux</strong>中非常有用，它可以对文件进行排序并将排序结果标准输出。<code>sort</code>即可以从特定的文件中也可以从STDIN中获取输入。<br><code>sort</code>语法规则如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sort (选项) (参数) 文件</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>参数详解：</p>
<ul>
<li>-b：忽略每行前面开始出的空格字符； </li>
<li>-c：检查文件是否已经按照顺序排序； </li>
<li>-d：排序时，处理英文字母、数字及空格字符外，忽略其他的字符； </li>
<li>-f：排序时，将小写字母视为大写字母； </li>
<li>-i：排序时，除了040至176之间的ASCII字符外，忽略其他的字符； </li>
<li>-m：将几个排序号的文件进行合并； </li>
<li>-M：将前面3个字母依照月份的缩写进行排序； </li>
<li>-n：依照数值的大小排序； </li>
<li>-o&lt;输出文件&gt;：将排序后的结果存入制定的文件； </li>
<li>-r：以相反的顺序来排序； </li>
<li>-t&lt;分隔字符&gt;：指定排序时所用的栏位分隔字符； </li>
<li>+&lt;起始栏位&gt;-&lt;结束栏位&gt;：以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。</li>
</ul>
<p><code>sort</code>将文件/文本的每一行作为一个单位相互比较，比较原则是从首字符向后，一次按<strong>ASCII</strong>码值进行比较，最后将他们按升序格式输出。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ cat example.bed</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr3    11      28</div><div class="line">chr1    40      49</div><div class="line">chr3    16      27</div><div class="line">chr1    9       28</div><div class="line">chr2    35      54</div><div class="line">chr1    10      19</div><div class="line">#没有任何参数排序</div><div class="line">$ sort example.bed</div><div class="line">chr1    10      19</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr1    40      49</div><div class="line">chr1    9       28</div><div class="line">chr2    35      54</div><div class="line">chr3    11      28</div><div class="line">chr3    16      27</div></pre></td></tr></table></figure></p>
<blockquote>
<p><code>sort</code>默认空格（tab or spaces）作为分隔符，因此如果你的文件使用其他的分隔符，比如CSV文件（分隔符为“,”），这时就需要通过参数<code>-t</code>指定分隔符。</p>
</blockquote>
<p>实际排序过程中我们希望能够指定依次按哪一列进行排序，这里面就涉及到了参数选项-k了。-k参数的语法格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">FStart.CStart Modifie,FEnd.CEnd Modifier </div><div class="line">-------Start--------,-------End-------- </div><div class="line">FStart.CStart 选项 , FEnd.CEnd 选项</div></pre></td></tr></table></figure></p>
<p>格式被”,”分为两部分<code>Start</code>以及<code>End</code>两部分。其中<code>Start</code>部分又分为三部分,重点解释一下其中的<code>FStart</code>以及<code>CStart</code>部分，<code>CStart</code>不是必须的可以省略，省略的话表示从本域的开头部分开始，<code>FStart.CStart</code>中的<code>FStart</code>表示作用的域，<code>CStart</code>则表示在<code>FStart</code>域中从第几个字符开始排序，同理，在<code>End</code>部分类似。下面我们举个例子说明一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ head -n 3 example.bed</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr3    11      28</div><div class="line"># sort 进行排序</div><div class="line">$ sort -k1,1 -k2,2n example.bed</div><div class="line">chr1    9       28</div><div class="line">chr1    10      19</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr1    40      49</div><div class="line">chr2    35      54</div><div class="line">chr3    11      28</div><div class="line">chr3    16      27</div></pre></td></tr></table></figure></p>
<p>在上面的命令中，我们通过参数-k来指定按哪一列来进行排序，首先第一个-k参数表示我们想要第一按第一列排序，接下来的第二个-k参数表示按第二列排序，n表示这一列是数值型数据。-k的语法十分复杂，再举个简单例子，假设我们有这样一个文件<em>company.txt</em>:有三个域，第一个域是公司名称，第二个域是公司人数，第三个域是员工平均工资。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ cat company.txt|column -t</div><div class="line">baidu   100  5000</div><div class="line">sohu    100  4500</div><div class="line">google  110  5000</div><div class="line">guge    50   3000</div></pre></td></tr></table></figure></p>
<h3 id="按第一个域业也就是按公司名称的字母进行排序"><a href="#按第一个域业也就是按公司名称的字母进行排序" class="headerlink" title="按第一个域业也就是按公司名称的字母进行排序"></a>按第一个域业也就是按公司名称的字母进行排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k1 company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div><div class="line">sohu 100 4500</div></pre></td></tr></table></figure>
<p>这很好理解</p>
<h3 id="按每个公司的人数也就是第二个域进行排序-n表示这一个域是数值型数据"><a href="#按每个公司的人数也就是第二个域进行排序-n表示这一个域是数值型数据" class="headerlink" title="按每个公司的人数也就是第二个域进行排序(n表示这一个域是数值型数据)"></a>按每个公司的人数也就是第二个域进行排序(n表示这一个域是数值型数据)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k2n company.txt</div><div class="line">guge 50 3000</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div></pre></td></tr></table></figure>
<p>从上面可以看出，baidu和sohu的员工人数相同，这时会按照默认的规则从第一个域进行升序排列，所以可以看到baidu排在sohu前面。</p>
<h3 id="按公司员工人数排序，员工人数相同的按第三个域升序排列"><a href="#按公司员工人数排序，员工人数相同的按第三个域升序排列" class="headerlink" title="按公司员工人数排序，员工人数相同的按第三个域升序排列"></a>按公司员工人数排序，员工人数相同的按第三个域升序排列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k2n -k3n company.txt</div><div class="line">guge 50 3000</div><div class="line">sohu 100 4500</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div></pre></td></tr></table></figure>
<p>可以看出与前面的差别，这里按员工平均工资进行第二次排序，所以sohu排在baidu前面。</p>
<h3 id="先按员工工资降序排序，如果员工人数相同，则再按公司人数升序排序"><a href="#先按员工工资降序排序，如果员工人数相同，则再按公司人数升序排序" class="headerlink" title="先按员工工资降序排序，如果员工人数相同，则再按公司人数升序排序"></a>先按员工工资降序排序，如果员工人数相同，则再按公司人数升序排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k3nr -k2n company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">sohu 100 4500</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure>
<p>命令中的r表示降序排序，可以看到我们将n、r这样的选项加入到了每一个-k选项中，其实就是-k语法中的Modifier选项。</p>
<h3 id="从公司名称字母的第二个字母开始排序"><a href="#从公司名称字母的第二个字母开始排序" class="headerlink" title="从公司名称字母的第二个字母开始排序"></a>从公司名称字母的第二个字母开始排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k1.2 company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure>
<p>-k1.2表示对第一个域的第二个字符开始到本域的最后一个字符为止的字符串进行排序，可以看到sohu与google的第二个字母都是o，但是接下来的字母sohu的h排在google的o之前，因此sohu排在google前面。</p>
<h3 id="只针对公司名称的第二字母进行排序，相同的话则按员工平均工资降序排序"><a href="#只针对公司名称的第二字母进行排序，相同的话则按员工平均工资降序排序" class="headerlink" title="只针对公司名称的第二字母进行排序，相同的话则按员工平均工资降序排序"></a>只针对公司名称的第二字母进行排序，相同的话则按员工平均工资降序排序</h3><blockquote>
<p>注意了，敲黑板！！！上面我们是从第一个域的第二个字符开始进行排序，而这里只针对第二个字符进行排序，如果第二字符相同的话则按员工平均工资降序排序，上面的例子是按第三个字符进行排序。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k1.2,1.2 -k3rn company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">sohu 100 4500</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure>
<p>可以看到这次google排在sohu前面了。<br>-k选项部分讲到这里基本脉络清楚了,此时再结合其他选项<code>sort</code>就会变得十分强大。</p>
<h3 id="sort的-u选项"><a href="#sort的-u选项" class="headerlink" title="sort的-u选项"></a>sort的-u选项</h3><p>u代表unique，因此此选项会将重复的选项删除，举个例子，这里我们根据第二域进行排序，添加-u选项，这样具有相同员工数且处于后续位置的行将被删除。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sort -k2n -u company.txt</div><div class="line">guge 50 3000</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div></pre></td></tr></table></figure></p>
<blockquote>
<p>这里就将sohu这一行删除了。注意了，当-k与u结合使用时，-u只识别-k设定的域，发现相同就将后续相同的行删除。</p>
</blockquote>
<p>再举个例子看看特殊情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k2n -k3n -u company.txt</div><div class="line">guge 50 3000</div><div class="line">sohu 100 4500</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div></pre></td></tr></table></figure></p>
<p>可以看到这次没有删除任何行，这主要是由于-u会权衡所有-k选项，只会将都相同的删除，只要其中有一级不同就不会轻易删除。</p>
<h3 id="其他注意点"><a href="#其他注意点" class="headerlink" title="其他注意点"></a>其他注意点</h3><p>最后我还想再讲讲<code>sort</code>一些其他比较有用的选项。第一个是-V选项。我们通过一个例子看看。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ cat example2.bed</div><div class="line">chr2    15      19</div><div class="line">chr22   32      46</div><div class="line">chr10   31      47</div><div class="line">chr1    34      49</div><div class="line">chr11   6       16</div><div class="line">chr2    17      22</div><div class="line">chr2    27      46</div><div class="line">chr10   30      42</div><div class="line"># 进行排序</div><div class="line">$ sort -k1,1 -k2,2n example2.bed</div><div class="line">chr1    34      49</div><div class="line">chr10   30      42</div><div class="line">chr10   31      47</div><div class="line">chr11   6       16</div><div class="line">chr2    15      19</div><div class="line">chr2    17      22</div><div class="line">chr2    27      46</div><div class="line">chr22   32      46</div></pre></td></tr></table></figure></p>
<p>我们可以看到chr2排在chr11之后，主要是因为1排在2之前，<code>sort</code>对文本进行排序时无法按数字进行排序，通过选项-V可以解决这个问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ sort -k1,1V -k2,2n example2.bed</div><div class="line">chr1    34      49</div><div class="line">chr2    15      19</div><div class="line">chr2    17      22</div><div class="line">chr2    27      46</div><div class="line">chr10   30      42</div><div class="line">chr10   31      47</div><div class="line">chr11   6       16</div><div class="line">chr22   32      46</div></pre></td></tr></table></figure></p>
<p>另外一个需要考虑的是当我们处理大数据集文本时，提高运行速度是很重要的，<code>sort</code>提供了几种方法，第一是提供了-S选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sort -k1,1 -k4,4n -S2G Mus_musculus.GRCm38.75_chr1_random.gtf</div></pre></td></tr></table></figure></p>
<p>其中G表示gigabyte，另外一种方法是提供了并行多线程计算–parallel选项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sort -k1,1 -k4,4n --parallel=4 Mus_musculus.GRCm38.75_chr1_random.gtf</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171112/9Egg9ALKHB.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;sort&quot;&gt;&lt;a href=&quot;#sort&quot; class=&quot;headerlink&quot; title=&quot;sort&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sort&lt;/code&gt;命令在&lt;strong&gt;linux&lt;/strong&gt;中非常有用，它可以对文件进行排序并将排序结果标准输出。&lt;code&gt;sort&lt;/code&gt;即可以从特定的文件中也可以从STDIN中获取输入。&lt;br&gt;&lt;code&gt;sort&lt;/code&gt;语法规则如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sort (选项) (参数) 文件&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
      <category term="sort" scheme="https://ytlogos.github.io/tags/sort/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（四）</title>
    <link href="https://ytlogos.github.io/2017/11/13/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/13/Linux学习笔记（四）/</id>
    <published>2017-11-13T05:19:05.000Z</published>
    <updated>2017-11-12T06:21:31.888Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171112/894bbdhjmL.png?imageslim" alt="mark"></p>
<h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a><code>grep</code></h2><p><code>grep</code>全称是<strong>global search regular expression(RE) and print out the line</strong>，中文名即全面搜索正则表达式并把行打印出来。是一种强大的文本搜索工具，可以使用正则表达式搜索文本，并将匹配的行列打印出来。<strong>Unix</strong>的<code>grep</code>家族包括<code>grep</code>,<code>egrep</code>,<code>fgrep</code>以及<code>zgrep</code>等，<code>egrep</code>,<code>fgrep</code>与<code>grep</code>的差别很小，<code>egrep</code>支持更多的re元字符， <code>fgrep</code>就是<em>fixed grep</em>或<em>fast grep</em>，它们把所有的字母都看作单词，也就是说，正则表达式中的元字符表示其自身的字面意义，不再特殊<code>grep</code>可以通过-<em>G、</em>-<em>E、</em>-<em>F</em>命令行选项来使用<code>egrep</code>,<code>fgrep</code>的功能，<code>zgrep</code>可以用来处理<strong>ZIP</strong>格式文件。</p>
<a id="more"></a>
<h3 id="grep常用用法"><a href="#grep常用用法" class="headerlink" title="grep常用用法"></a><code>grep</code>常用用法</h3><p><code>grep</code>常用用法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep [-acinv] [--color=auto] &apos;字符串或者正则表达式&apos; filename</div></pre></td></tr></table></figure></p>
<p>选项参数：</p>
<ul>
<li>-a：将binary文件以text文件的方式搜索，即不要忽略二进制数据</li>
<li>-A&lt;显示列数&gt;：除了显示匹配到的那一行之外，还显示该行之后的内容</li>
<li>-b：除了显示匹配到的那一行之外，还显示该行之前的内容</li>
<li>-c：计算匹配到<strong>字符串</strong>的次数</li>
<li>-C&lt;显示列数&gt;：除了显示匹配到的那一列之外，还显示该列之前后的内容</li>
<li>-d&lt;进行动作&gt; 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作</li>
<li>-e&lt;范本样式&gt; 指定字符串作为查找文件内容的范本样式</li>
<li>-E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式</li>
<li>-f&lt;范本文件&gt; 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式</li>
<li>-F 将范本样式视为固定字符串的列表</li>
<li>-G 将范本样式视为普通的表示法来使用</li>
<li>-h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称 </li>
<li>-H 在显示符合范本样式的那一列之前，标示该列的文件名称</li>
<li>-l 列出文件内容符合指定的范本样式的文件名称。 </li>
<li>-L 列出文件内容不符合指定的范本样式的文件名称。 </li>
<li>-q 不显示任何信息。 </li>
<li>-R/-r 此参数的效果和指定“-d recurse”参数相同。 </li>
<li>-s 不显示错误信息。</li>
<li>-w 只显示全字符合的列。 </li>
<li>-x 只显示全列符合的列。 </li>
<li>-y 此参数效果跟“-i”相同。 </li>
<li>-o 只输出文件中匹配到的部分。</li>
<li>-i：忽略大小写</li>
<li>-n：输出行号</li>
<li>-v：方向选择即显示出未匹配到<strong>字符串</strong>的那一行</li>
<li>–color=auto：匹配到的字符串颜色高亮</li>
</ul>
<p>下面我们实战演练一下，我们要从<strong>GTF</strong>文件中搜索到匹配<code>Olfr418-ps1</code>的行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ grep &apos;Olfr418-ps1&apos; Mus_musculus.GRCm38.75_chr1_genes.txt</div><div class="line">ENSMUSG00000049605      Olfr418-ps1</div><div class="line">#打印出行号</div><div class="line">$ grep -n &apos;Olfr&apos; Mus_musculus.GRCm38.75_chr1_genes.txt|head -n 5</div><div class="line">548:ENSMUSG00000067064  Olfr1416</div><div class="line">549:ENSMUSG00000057464  Olfr1415</div><div class="line">550:ENSMUSG00000042849  Olfr1414</div><div class="line">551:ENSMUSG00000058904  Olfr1413</div><div class="line">552:ENSMUSG00000046300  Olfr1412</div></pre></td></tr></table></figure></p>
<p>通过参数<code>-v</code>设置可以不匹配不需要的字符串或者正则表达式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ grep Olfr Mus_musculus.GRCm38.75_chr1_genes.txt|grep -v Olfr1413|head -n 5</div><div class="line">ENSMUSG00000067064      Olfr1416</div><div class="line">ENSMUSG00000057464      Olfr1415</div><div class="line">ENSMUSG00000042849      Olfr1414</div><div class="line">ENSMUSG00000046300      Olfr1412</div><div class="line">ENSMUSG00000062497      Olfr1411</div></pre></td></tr></table></figure></p>
<blockquote>
<p>需要注意的是，这里我们排除掉<code>Olfr1413</code>，但是如果数据集里存在类似于<code>Olfr1413a</code>这样的字符，<code>grep</code>也会将之剔除，因此我们需要设置参数<code>-w</code>进行精准匹配。下面举个例子说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ cat example.txt</div><div class="line">bio</div><div class="line">bioinfo</div><div class="line">bioinformatics</div><div class="line">computational biology</div><div class="line"># grep without -w</div><div class="line">$ grep -v bioinfo example.txt</div><div class="line">bio</div><div class="line">computational biology</div><div class="line">#可以看出这里将含有bioinfo字符串的bioinformatics也剔除掉了,使用参数-w可以避免</div><div class="line">$ grep -v -w bioinfo example.txt</div><div class="line">bio</div><div class="line">bioinformatics</div><div class="line">computational biology</div></pre></td></tr></table></figure></p>
</blockquote>
<p>我们平常接触的组学数据格式都是很复杂的，当我们匹配的时候我们希望能过浏览匹配到的字符串的前后文，<code>Linux</code>提供了参数设置：-B（前）、-A（后）以及-C（前后），每个参数后面都跟着一个数字，表示要显示几行,如果匹配到多行，则个匹配之间会用–分割开：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ grep -B2 &apos;AGATCGG&apos; contam.fastq|head -n 6</div><div class="line">@DJB775P1:248:D0MDGACXX:7:1202:12362:49613</div><div class="line">TGCTTACTCTGCGTTGATACCACTGCTTAGATCGGAAGAGCACACGTCTGAA</div><div class="line">--</div><div class="line">JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD?DDDDDDBDDDABDDCA</div><div class="line">@DJB775P1:248:D0MDGACXX:7:1202:12782:49716</div><div class="line">CTCTGCGTTGATACCACTGCTTACTCTGCGTTGATACCACTGCTTAGATCGG</div></pre></td></tr></table></figure></p>
<p><code>grep</code>如果结合正则表达式则会显得十分强大，比如如果我们要匹配<code>Olfr1413</code>以及<code>Olfr1411</code>,可以使用简单的正则表达式完成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ grep &apos;Olfr141[13]&apos; Mus_musculus.GRCm38.75_chr1_genes.txt</div><div class="line">ENSMUSG00000058904      Olfr1413</div><div class="line">ENSMUSG00000062497      Olfr1411</div></pre></td></tr></table></figure></p>
<blockquote>
<p>当然如果我们要匹配的不具有相同的前缀，那就很尴尬了，这时我们可以利用<strong>POSIX Extended Regular Expressions(ERE)</strong>进行匹配，可以添加参数-E或者直接使用<code>egrep</code>都行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ grep -E &quot;(Olfr1413|Olfr12)&quot; Mus_musculus.GRCm38.75_chr1_genes.txt</div><div class="line">ENSMUSG00000058904      Olfr1413</div><div class="line">ENSMUSG00000061616      Olfr12</div></pre></td></tr></table></figure></p>
</blockquote>
<p>很多时候我们只需要将匹配到的行打印出来，此时我们可以使用参数-o：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ grep -o &quot;Olfr.*&quot; Mus_musculus.GRCm38.75_chr1_genes.txt|head -n 3</div><div class="line">Olfr1416</div><div class="line">Olfr1415</div><div class="line">Olfr1414</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171112/894bbdhjmL.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;grep&quot;&gt;&lt;a href=&quot;#grep&quot; class=&quot;headerlink&quot; title=&quot;grep&quot;&gt;&lt;/a&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;grep&lt;/code&gt;全称是&lt;strong&gt;global search regular expression(RE) and print out the line&lt;/strong&gt;，中文名即全面搜索正则表达式并把行打印出来。是一种强大的文本搜索工具，可以使用正则表达式搜索文本，并将匹配的行列打印出来。&lt;strong&gt;Unix&lt;/strong&gt;的&lt;code&gt;grep&lt;/code&gt;家族包括&lt;code&gt;grep&lt;/code&gt;,&lt;code&gt;egrep&lt;/code&gt;,&lt;code&gt;fgrep&lt;/code&gt;以及&lt;code&gt;zgrep&lt;/code&gt;等，&lt;code&gt;egrep&lt;/code&gt;,&lt;code&gt;fgrep&lt;/code&gt;与&lt;code&gt;grep&lt;/code&gt;的差别很小，&lt;code&gt;egrep&lt;/code&gt;支持更多的re元字符， &lt;code&gt;fgrep&lt;/code&gt;就是&lt;em&gt;fixed grep&lt;/em&gt;或&lt;em&gt;fast grep&lt;/em&gt;，它们把所有的字母都看作单词，也就是说，正则表达式中的元字符表示其自身的字面意义，不再特殊&lt;code&gt;grep&lt;/code&gt;可以通过-&lt;em&gt;G、&lt;/em&gt;-&lt;em&gt;E、&lt;/em&gt;-&lt;em&gt;F&lt;/em&gt;命令行选项来使用&lt;code&gt;egrep&lt;/code&gt;,&lt;code&gt;fgrep&lt;/code&gt;的功能，&lt;code&gt;zgrep&lt;/code&gt;可以用来处理&lt;strong&gt;ZIP&lt;/strong&gt;格式文件。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（三）</title>
    <link href="https://ytlogos.github.io/2017/11/12/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/12/Linux学习笔记（三）/</id>
    <published>2017-11-12T05:19:05.000Z</published>
    <updated>2017-11-12T06:13:36.928Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171111/Be16KgagG1.png?imageslim" alt="mark"></p>
<p>“write code for humans, write data for computers”</p>
<a id="more"></a>
<h2 id="cut"><a href="#cut" class="headerlink" title="cut"></a><strong>cut</strong></h2><p><code>cut</code>允许我们从数据集中提取某几列进行查看，通过参数<code>f</code>来设置查看几列，比如我们想要查看第一和第三列或者只查看第二列：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ cut -f 1,3 Mus_musculus.GRCm38.75_chr1.bed|head -n 3</div><div class="line">1       3054733</div><div class="line">1       3054733</div><div class="line">1       3054733</div><div class="line">$ cut -f 2 Mus_musculus.GRCm38.75_chr1.bed|head -n 3</div><div class="line">3054233</div><div class="line">3054233</div><div class="line">3054233</div></pre></td></tr></table></figure></p>
<p>结合<code>grep</code>我们可以十分方便的将<strong>GTF</strong>文件中的部分信息提取出来进行查看，使用<code>grep</code>主要用来将以<code>#</code>开头的部份内容剔除掉，这其中涉及到正则表达式，我将在后面集中学习。下面的命令可以将染色体、起始位置以及终止位置提取出来，类似于<code>bed</code>文件格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ grep -v &apos;^#&apos; Mus_musculus.GRCm38.75_chr1.gtf | cut -f 1,4,5 | head -n 3</div><div class="line">1       3054233 3054733</div><div class="line">1       3054233 3054733</div><div class="line">1       3054233 3054733</div></pre></td></tr></table></figure></p>
<p>我们也可以使用<code>&gt;</code>将提取的文件另存为一个文件，方便以后使用。这里我们存为<strong>test.txt</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ grep -v &quot;^#&quot; Mus_musculus.GRCm38.75_chr1.gtf | cut -f 1,4,5 &gt; test.txt</div></pre></td></tr></table></figure></p>
<p><code>cut</code>默认分隔符为空格，因此如果使用<code>cut</code>来处理<strong>CSV</strong>文件的话，我们就需要通过参数<code>d</code>指定分隔符 <strong><code>,</code></strong>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ cut -d , -f 2,3 Mus_musculus.GRCm38.75_chr1_bed.csv | head -n 3</div><div class="line">3054233,3054733</div><div class="line">3054233,3054733</div><div class="line">3054233,3054733</div></pre></td></tr></table></figure></p>
<h2 id="column"><a href="#column" class="headerlink" title="column"></a><strong>column</strong></h2><p>当我们处理制表符文件时，常常行列之间无法对其，浏览效果很差,如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ grep -v &quot;^#&quot; Mus_musculus.GRCm38.75_chr1.gtf|cut -f1-8|head -n 3</div><div class="line">1       pseudogene      gene    3054233 3054733 .       +       .</div><div class="line">1       unprocessed_pseudogene  transcript      3054233 3054733 .       +      .</div><div class="line">1       unprocessed_pseudogene  exon    3054233 3054733 .       +       .</div></pre></td></tr></table></figure></p>
<p><code>column</code>可以产生阅读效果很好的文件格式，参数<code>t</code>表示<code>column</code>将对数据集当作一个table来处理,下面的阅读效果明显好于前面的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ grep -v &quot;^#&quot; Mus_musculus.GRCm38.75_chr1.gtf|cut -f1-8|head -n 3|column -t</div><div class="line">1  pseudogene              gene        3054233  3054733  .  +  .</div><div class="line">1  unprocessed_pseudogene  transcript  3054233  3054733  .  +  .</div><div class="line">1  unprocessed_pseudogene  exon        3054233  3054733  .  +  .</div></pre></td></tr></table></figure></p>
<blockquote>
<p>需要注意的是，<code>column -t</code>只能支持在终端进行浏览数据，无法对数据集进行格式重写成一个文件。</p>
</blockquote>
<p><code>column</code>默认\t为分隔符，因此当我们处理其他分隔符数据时，需要使用参数<code>s</code>进行指定，比如当我们处理<strong>CSV</strong>数据时：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ column -s, -t Mus_musculus.GRCm38.75_chr1_bed.csv|head -n 3</div><div class="line">1  3054233    3054733</div><div class="line">1  3054233    3054733</div><div class="line">1  3054233    3054733</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171111/Be16KgagG1.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;p&gt;“write code for humans, write data for computers”&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（二）</title>
    <link href="https://ytlogos.github.io/2017/11/11/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/11/Linux学习笔记（二）/</id>
    <published>2017-11-11T05:19:05.000Z</published>
    <updated>2017-11-20T09:50:23.251Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171111/E3kF9hl9jj.png?imageslim" alt="mark"></p>
<p>鉴于以后要大量使用<code>Linux</code>系统处理生物信息学数据，因此加强自身linux系统的学习，开辟一个新的分类专门记录我学习<code>Linux</code>的学习笔记，一是为了我自己以后方便查看，二也是希望能帮助到其他学习<code>Linux</code>系统的人，共勉！！！</p>
<a id="more"></a>
<h2 id="head"><a href="#head" class="headerlink" title="head"></a><code>head</code></h2><p>快速查看数据，以<strong>bed</strong>(只有三列)格式数据为例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ head Mus_musculus.GRCm38.75_chr1.bed</div><div class="line">1       3054233 3054733</div><div class="line">1       3054233 3054733</div><div class="line">1       3054233 3054733</div><div class="line">1       3102016 3102125</div><div class="line">1       3102016 3102125</div><div class="line">1       3102016 3102125</div><div class="line">1       3205901 3671498</div><div class="line">1       3205901 3216344</div><div class="line">1       3213609 3216344</div><div class="line">1       3205901 3207317</div></pre></td></tr></table></figure></p>
<p><code>head</code>默认显示前十行，可以通过参数n来指定显示几行，比如只显示三行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ head -n 3 Mus_musculus.GRCm38.75_chr1.bed</div><div class="line">1       3054233 3054733</div><div class="line">1       3054233 3054733</div><div class="line">1       3054233 3054733</div></pre></td></tr></table></figure></p>
<h2 id="tail"><a href="#tail" class="headerlink" title="tail"></a><code>tail</code></h2><p>与<code>head</code>相对的有一个命令<code>tail</code>,<code>tail</code>显示后几行，默认显示后十行，也可以通过参数n来指定显示几行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ tail Mus_musculus.GRCm38.75_chr1.bed</div><div class="line">1       195166217       195166390</div><div class="line">1       195165745       195165851</div><div class="line">1       195165748       195165851</div><div class="line">1       195165745       195165747</div><div class="line">1       195228278       195228398</div><div class="line">1       195228278       195228398</div><div class="line">1       195228278       195228398</div><div class="line">1       195240910       195241007</div><div class="line">1       195240910       195241007</div><div class="line">1       195240910       195241007</div><div class="line">$ tail -n 3 Mus_musculus.GRCm38.75_chr1.bed</div><div class="line">1       195240910       195241007</div><div class="line">1       195240910       195241007</div><div class="line">1       195240910       195241007</div></pre></td></tr></table></figure></p>
<blockquote>
<p>基于这个特性，<code>tail</code>可以用来去除数据集的前几列，通过在参数n后面添加数字(即<code>-n +x</code>,区别于<code>-n 2</code>)指定从第几行开始，比如从第三行开始，也就是剔除了前两行。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ seq 5 &gt; nums.txt</div><div class="line">$ cat nums.txt</div><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line"># 从第三行开始</div><div class="line">$ tail -n +3 nums.txt</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td></tr></table></figure>
<p>结合这两个命令，我们可以十分方便的查看一个数据集的前几行以及后几行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ (head -n 2; tail -n 2)&lt; Mus_musculus.GRCm38.75_chr1.bed</div><div class="line">1       3054233 3054733</div><div class="line">1       3054233 3054733</div><div class="line">1       195240910       195241007</div><div class="line">1       195240910       195241007</div></pre></td></tr></table></figure></p>
<h2 id="less"><a href="#less" class="headerlink" title="less"></a><code>less</code></h2><p>一般小的文件我们直接用<code>cat</code>进行查看，但是如果大数据集的话用<code>cat</code>就十分不方便查看，<code>less</code>就是用来查看大数据集的命令。<code>less</code>一次性只显示前几行，但是可以通过滚动查看后面的信息，最后按<code>q</code>结束。下面列出<code>less</code>常用的命令：</p>
<table>
<thead>
<tr>
<th>Shortcut</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td>space bar</td>
<td>Next page</td>
</tr>
<tr>
<td>b</td>
<td>Previous page</td>
</tr>
<tr>
<td>g</td>
<td>First line</td>
</tr>
<tr>
<td>G</td>
<td>Last line</td>
</tr>
<tr>
<td>j</td>
<td>Down (one line at at time)</td>
</tr>
<tr>
<td>k</td>
<td>Up (one line at at time)</td>
</tr>
<tr>
<td>/\<pattern></pattern></td>
<td>Search down (forward) for string \<pattern></pattern></td>
</tr>
<tr>
<td>?\<pattern></pattern></td>
<td>Search up (backward) for string \<pattern></pattern></td>
</tr>
<tr>
<td>n</td>
<td>Repeat last search downward (forward)</td>
</tr>
<tr>
<td>N</td>
<td>Repeat last search upward (backward)</td>
</tr>
</tbody>
</table>
<h2 id="wc-word-count"><a href="#wc-word-count" class="headerlink" title="wc(word count)"></a><code>wc(word count)</code></h2><p>查看数据有多少行可以用<code>wc</code>命令,<code>wc</code>会显示出数据有多少行、多少word以及多少字符(characters)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ wc Mus_musculus.GRCm38.75_chr1.bed</div><div class="line">  81226  243678 1698545 Mus_musculus.GRCm38.75_chr1.bed</div></pre></td></tr></table></figure></p>
<p><code>wc</code>支持同时处理多个文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ wc Mus_musculus.GRCm38.75_chr1.bed Mus_musculus.GRCm38.75_chr1.gtf</div><div class="line">   81226   243678  1698545 Mus_musculus.GRCm38.75_chr1.bed</div><div class="line">   81231  2385570 26607149 Mus_musculus.GRCm38.75_chr1.gtf</div><div class="line">  162457  2629248 28305694 总用量</div></pre></td></tr></table></figure></p>
<p>如果只想显示多少行，添加参数<code>l</code>就行了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ wc -l Mus_musculus.GRCm38.75_chr1.bed</div><div class="line">81226 Mus_musculus.GRCm38.75_chr1.bed</div></pre></td></tr></table></figure></p>
<p>更多用法可以用<code>man wc</code>查看。</p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171111/E3kF9hl9jj.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;p&gt;鉴于以后要大量使用&lt;code&gt;Linux&lt;/code&gt;系统处理生物信息学数据，因此加强自身linux系统的学习，开辟一个新的分类专门记录我学习&lt;code&gt;Linux&lt;/code&gt;的学习笔记，一是为了我自己以后方便查看，二也是希望能帮助到其他学习&lt;code&gt;Linux&lt;/code&gt;系统的人，共勉！！！&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（一）</title>
    <link href="https://ytlogos.github.io/2017/11/09/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/09/Linux学习笔记（一）/</id>
    <published>2017-11-09T12:27:05.000Z</published>
    <updated>2017-11-09T12:29:58.738Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171109/Jb7HLAJK63.png?imageslim" alt="mark"></p>
<p>鉴于以后要大量使用<code>Linux</code>系统处理生物信息学数据，因此加强自身linux系统的学习，开辟一个新的分类专门记录我学习<code>Linux</code>的学习笔记，一是为了我自己以后方便查看，二也是希望能帮助到其他学习<code>Linux</code>系统的人，共勉！！！</p>
<a id="more"></a>
<ul>
<li>创建含有当前时间的文件，如创建一个含有今天时间日期的文件夹</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir results-$(date +%F)</div><div class="line">$ ls</div><div class="line">results-2017-11-02</div></pre></td></tr></table></figure>
<ul>
<li>设置自己的快捷命令，比如我们要创建项目时，需要创建<code>data/seqs</code>,<code>scripts</code>以及<code>analysis</code>文件夹，我们可以写一个快捷命令符，以后就可以直接调用即可：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ alias mkpr=&quot;mkdir -p &#123;data/seqs,scripts,analysis&#125;&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>这样后面我们每次运行<em>mkpr</em>就会创建<code>data/seqs</code>,<code>scripts</code>以及<code>analysis</code>文件夹。将上述两点综合我们就可以很容易创建含有当前时期的文件，这里我们将<code>date +%F</code>设置成快捷命令<em>today</em>。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ alias today=&quot;date +%F&quot;</div></pre></td></tr></table></figure>
<blockquote>
<p>这样我们以后只需要运行以下命令就可以创建含有当前时间日期的文件了。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir results-$(today)</div><div class="line">$ls</div><div class="line">results-2017-11-02</div></pre></td></tr></table></figure>
<blockquote>
<p>注意上述命令在我们重启终端时是无法再次作用的，要使得<strong>alias</strong>命令永久有效，我们可以将命令添加到<code>.bashrc</code>中，之后<code>source ~/.bashrc</code>即可生效。</p>
</blockquote>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171109/Jb7HLAJK63.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;p&gt;鉴于以后要大量使用&lt;code&gt;Linux&lt;/code&gt;系统处理生物信息学数据，因此加强自身linux系统的学习，开辟一个新的分类专门记录我学习&lt;code&gt;Linux&lt;/code&gt;的学习笔记，一是为了我自己以后方便查看，二也是希望能帮助到其他学习&lt;code&gt;Linux&lt;/code&gt;系统的人，共勉！！！&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>R语言可视化之UpSetR包</title>
    <link href="https://ytlogos.github.io/2017/10/15/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8BUpSetR%E5%8C%85/"/>
    <id>https://ytlogos.github.io/2017/10/15/R语言可视化之UpSetR包/</id>
    <published>2017-10-15T08:47:05.000Z</published>
    <updated>2017-10-15T08:26:29.107Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/JK4Hhj821g.png?imageslim" alt=""></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>集合可视化我们用得最多的是韦恩图，韦恩图在集合数少的时候是很好用的，但是当集合数多比如五个以上的时候那就会看花眼了，比如下面这副含有6个集合韦恩图，是发表在<strong>Nature</strong>上的文章里的，漂亮是漂亮，但是眼都快看花了。</p>
<a id="more"></a>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/Khec36GlKg.png?imageslim" alt="banana"></p>
<p>今天介绍一个R包<strong>UpSetR</strong>，专门用来集合可视化，来源于<a href="http://caleydo.org/tools/upset/" target="_blank" rel="external">UpSet</a>，Python里面也有一个相似的包<strong>py-upset</strong>。此外还有个<a href="https://gehlenborglab.shinyapps.io/upsetr/" target="_blank" rel="external">UpSetR shiny app</a>以及<a href="https://github.com/hms-dbmi/UpSetR-shiny" target="_blank" rel="external">源代码</a>.</p>
<!--more-->
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>两种方式安装：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#从CRAN安装</div><div class="line">install.packages(&quot;UpSetR&quot;)</div><div class="line">#从Github上安装</div><div class="line">devtools::install_github(&quot;hms-dbmi/UpSetR&quot;)</div></pre></td></tr></table></figure>
<h2 id="数据导入"><a href="#数据导入" class="headerlink" title="数据导入"></a>数据导入</h2><p><strong>UpSetR</strong>提供了两个函数<code>fromList</code>以及<code>fromExpression</code>将数据转换为<strong>UpsetR</strong>适用的数据格式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#fromList</div><div class="line">listinput &lt;- list(one = c(1, 2, 3, 5, 7, 8, 11, 12, 13), two = c(1, 2, 4, 5, </div><div class="line">    10), three = c(1, 5, 6, 7, 8, 9, 10, 12, 13))</div><div class="line">#fromExpression</div><div class="line">expressionInput &lt;- c(one = 2, two = 1, three = 2, `one&amp;two` = 1, `one&amp;three` = 4, </div><div class="line">    `two&amp;three` = 1, `one&amp;two&amp;three` = 2)</div></pre></td></tr></table></figure>
<p>接下来就可以绘制绘制图形了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">library(UpSetR)</div><div class="line">upset(fromList(listinput), order.by = &quot;freq&quot;)</div><div class="line">#下面绘制的图形等同于上图</div><div class="line">upset(fromExpression(expressionInput), order.by = &quot;freq&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/m0KhE6H1EG.png?imageslim" alt=""></p>
<h2 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h2><p>下面所有的例子都将使用<strong>UpSetR</strong>内置的数据集<code>movies</code>来绘制。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#导入数据</div><div class="line">movies &lt;- read.csv(system.file(&quot;extdata&quot;, &quot;movies.csv&quot;, package = &quot;UpSetR&quot;), header = TRUE, sep = &quot;;&quot;)</div><div class="line">#先大致浏览一下该数据集,数据集太长，就只看前几列</div><div class="line">knitr::kable(head(movies[,1:10]))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/56g2k8ba7B.png?imageslim" alt=""></p>
<p>该数据集展示的是电影名（name）、发行时间（ReleaseDate）以及电影类型，多了去了就不详讲了，自个可以看去。<br><strong>UpsetR</strong>绘制集合可视化图形使用函数<code>upset()</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">upset(movies, nsets = 6, number.angles = 30, point.size = 2, line.size = 1, mainbar.y.label = &quot;Genre Intersections&quot;, sets.x.label = &quot;Movies Per Genre&quot;, text.scale = c(1.3, 1.3, 1, 1, 1.5, 1))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/claalIAdBg.png?imageslim" alt=""></p>
<p>解释一下上面部分参数：</p>
<ul>
<li>nsets: 顾名思义，就是展示几个集合，<code>movies</code>数据集由20几个集合，不可能全部展示，另外从图中可以看出，这6个集合应该不是按顺序选择的。</li>
<li>numble.angle: 柱子上的数字看到了吧，这个参数就是调整数字角度的，可有可无的</li>
<li>mainbar.y.label/sets.x.label：坐标轴名称</li>
<li>text.scale(): 有六个数字，分别控制c(intersection size title, intersection size tick labels, set size title, set size tick labels, set names, numbers above bars)。</li>
</ul>
<p>很多时候我们想要看特定的几个集合，<strong>UpSetR</strong>满足我们的需求。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">upset(movies, sets = c(&quot;Action&quot;, &quot;Adventure&quot;, &quot;Comedy&quot;, &quot;Drama&quot;, &quot;Mystery&quot;, </div><div class="line">    &quot;Thriller&quot;, &quot;Romance&quot;, &quot;War&quot;, &quot;Western&quot;), mb.ratio = c(0.55, 0.45), order.by = &quot;freq&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/KC6gI5kg3H.png?imageslim" alt=""></p>
<p>文中的参数：</p>
<ul>
<li>mb.ratio: 控制上方条形图以及下方点图的比例</li>
<li>order.by: 如何排序，这里<code>freq</code>表示从大到小排序展示，其他选项有<code>degree</code>以及先按<code>freq</code>再按<code>degree</code>排序。</li>
</ul>
<p>各个变量也可以通过参数<code>keep.order</code>来排序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">upset(movies, sets = c(&quot;Action&quot;, &quot;Adventure&quot;, &quot;Comedy&quot;, &quot;Drama&quot;, &quot;Mystery&quot;, </div><div class="line">    &quot;Thriller&quot;, &quot;Romance&quot;, &quot;War&quot;, &quot;Western&quot;), mb.ratio = c(0.55, 0.45), order.by = &quot;freq&quot;, </div><div class="line">    keep.order = TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/KC2EhHf71g.png?imageslim" alt=""></p>
<p>也可以按<code>group</code>进行展示，这图展示的就是按各个变量自身、两个交集、三个交集…依次展示。参数<code>cutoff</code>控制每个<code>group</code>显示几个交集。<br>参数<code>intersects</code>控制总共显示几个交集。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">upset(movies, nintersects = 70, group.by = &quot;sets&quot;, cutoff = 7)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/29DlaBFaKc.png?imageslim" alt=""></p>
<blockquote>
<p>还有很多参数比如控制颜色的参数，点、线大小等，具体可查看?upset</p>
</blockquote>
<h2 id="queries参数"><a href="#queries参数" class="headerlink" title="queries参数"></a>queries参数</h2><p>queries参数分为四个部分：<code>query</code>, <code>param</code>, <code>color</code>, <code>active</code>.</p>
<ul>
<li>query: 指定哪个query，<strong>UpSetR</strong>有内置的，也可以自定义，说到底就是一个查询函数</li>
<li>param: list, query作用于哪个交集</li>
<li>color：每个query都是一个list，里面可以设置颜色,没设置的话将调用包里默认的调色板</li>
<li>active：被指定的条形图是否需要颜色覆盖，TRUE的话显示颜色，FALSE的话则在条形图顶端显示三角形</li>
</ul>
<h3 id="内置的intersects-query"><a href="#内置的intersects-query" class="headerlink" title="内置的intersects query"></a>内置的intersects query</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">upset(movies, queries = list(list(query=intersects, params=list(&quot;Drama&quot;, &quot;Comedy&quot;, &quot;Action&quot;), color=&quot;orange&quot;, active=T),</div><div class="line">                             list(query=intersects, params=list(&quot;Drama&quot;), color=&quot;red&quot;, active=F),</div><div class="line">                             list(query=intersects, params=list(&quot;Action&quot;, &quot;Drama&quot;), active=T)))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/IF81B9E86k.png?imageslim" alt=""></p>
<h3 id="内置的elements-query"><a href="#内置的elements-query" class="headerlink" title="内置的elements query"></a>内置的<code>elements</code> query</h3><p>此query可以可视化特定交集在不同条件下的情况</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">upset(movies, queries = list(list(query=elements, params=list(&quot;AvgRating&quot;, 3.5, 4.1), color=&quot;blue&quot;, active=T),</div><div class="line">                             list(query=elements, params=list(&quot;ReleaseDate&quot;, 1980, 1990, 2000), color=&quot;red&quot;, active=F)))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/66a2m1gmE2.png?imageslim" alt=""></p>
<h3 id="自定义一个query"><a href="#自定义一个query" class="headerlink" title="自定义一个query"></a>自定义一个<code>query</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">myfunc &lt;- function(row, release, rating)&#123;</div><div class="line">  newdata &lt;- (row[&quot;ReleaseDate&quot;]%in%release)&amp;(row[&quot;AvgRating&quot;]&gt;rating)</div><div class="line">&#125;</div><div class="line">upset(movies, queries = list(list(query=myfunc, params=list(c(1950,1960,1990,2000), 3.0), color=&quot;red&quot;, active=T)))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/2B75j4641e.png?imageslim" alt=""></p>
<h3 id="添加query图例"><a href="#添加query图例" class="headerlink" title="添加query图例"></a>添加<code>query</code>图例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">upset(movies, query.legend = &quot;top&quot;, queries = list(list(query = intersects, </div><div class="line">    params = list(&quot;Drama&quot;, &quot;Comedy&quot;, &quot;Action&quot;), color = &quot;orange&quot;, active = T, </div><div class="line">    query.name = &quot;Funny action&quot;), list(query = intersects, params = list(&quot;Drama&quot;), </div><div class="line">    color = &quot;red&quot;, active = F), list(query = intersects, params = list(&quot;Action&quot;, </div><div class="line">    &quot;Drama&quot;), active = T, query.name = &quot;Emotional action&quot;)))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/jffFG8aKD6.png?imageslim" alt=""></p>
<h2 id="参数attribute-plots"><a href="#参数attribute-plots" class="headerlink" title="参数attribute.plots"></a>参数<code>attribute.plots</code></h2><p>主要是用于添加属性图，内置有柱形图、散点图、热图等</p>
<h3 id="柱形图"><a href="#柱形图" class="headerlink" title="柱形图"></a>柱形图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">upset(movies, main.bar.color = &quot;black&quot;, queries = list(list(query = intersects, </div><div class="line">    params = list(&quot;Drama&quot;), active = T)), attribute.plots = list(gridrows = 50, </div><div class="line">    plots = list(list(plot = histogram, x = &quot;ReleaseDate&quot;, queries = F), list(plot = histogram, </div><div class="line">        x = &quot;AvgRating&quot;, queries = T)), ncols = 2))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/gfc18maAjI.png?imageslim" alt=""></p>
<h3 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">upset(movies, main.bar.color = &quot;black&quot;, queries = list(list(query = intersects, </div><div class="line">    params = list(&quot;Drama&quot;), color = &quot;red&quot;, active = F), list(query = intersects, </div><div class="line">    params = list(&quot;Action&quot;, &quot;Drama&quot;), active = T), list(query = intersects, </div><div class="line">    params = list(&quot;Drama&quot;, &quot;Comedy&quot;, &quot;Action&quot;), color = &quot;orange&quot;, active = T)), </div><div class="line">    attribute.plots = list(gridrows = 45, plots = list(list(plot = scatter_plot, </div><div class="line">        x = &quot;ReleaseDate&quot;, y = &quot;AvgRating&quot;, queries = T), list(plot = scatter_plot, </div><div class="line">        x = &quot;AvgRating&quot;, y = &quot;Watches&quot;, queries = F)), ncols = 2), query.legend = &quot;bottom&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/JK4Hhj821g.png?imageslim" alt=""></p>
<h3 id="箱线图"><a href="#箱线图" class="headerlink" title="箱线图"></a>箱线图</h3><p>箱线图可以展示数据的分布,通过参数<code>boxplot.summary</code>控制，最多可以一次性显示两个箱线图</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">upset(movies, boxplot.summary = c(&quot;AvgRating&quot;, &quot;ReleaseDate&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/FAH4If1bgh.png?imageslim" alt=""></p>
<p>还有一个十分重要的功能<strong>Incorporating Set Metadata</strong>这里就不讲了，有兴趣的可以参考这份<a href="https://cran.rstudio.com/web/packages/UpSetR/vignettes/set.metadata.plots.html" target="_blank" rel="external">文档</a></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.2 (2017-09-28)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 15063)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] UpSetR_1.3.3</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.13     knitr_1.17       magrittr_1.5     munsell_0.4.3   </div><div class="line">##  [5] colorspace_1.3-2 rlang_0.1.2      stringr_1.2.0    highr_0.6       </div><div class="line">##  [9] plyr_1.8.4       tools_3.4.2      grid_3.4.2       gtable_0.2.0    </div><div class="line">## [13] htmltools_0.3.6  yaml_2.1.14      lazyeval_0.2.0   rprojroot_1.2   </div><div class="line">## [17] digest_0.6.12    tibble_1.3.4     gridExtra_2.3    ggplot2_2.2.1   </div><div class="line">## [21] evaluate_0.10.1  rmarkdown_1.6    labeling_0.3     stringi_1.1.5   </div><div class="line">## [25] compiler_3.4.2   scales_0.5.0     backports_1.1.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171015/JK4Hhj821g.png?imageslim&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;集合可视化我们用得最多的是韦恩图，韦恩图在集合数少的时候是很好用的，但是当集合数多比如五个以上的时候那就会看花眼了，比如下面这副含有6个集合韦恩图，是发表在&lt;strong&gt;Nature&lt;/strong&gt;上的文章里的，漂亮是漂亮，但是眼都快看花了。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="UpSetR" scheme="https://ytlogos.github.io/tags/UpSetR/"/>
    
  </entry>
  
  <entry>
    <title>ggplot2高效实用指南</title>
    <link href="https://ytlogos.github.io/2017/09/19/ggplot2%E9%AB%98%E6%95%88%E5%AE%9E%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>https://ytlogos.github.io/2017/09/19/ggplot2高效实用指南/</id>
    <published>2017-09-19T00:29:46.000Z</published>
    <updated>2017-09-19T04:22:05.904Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/emJBf4A306.png?imageslim" alt="mark"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文内容基本是来源于<a href="http://www.sthda.com/english/wiki/be-awesome-in-ggplot2-a-practical-guide-to-be-highly-effective-r-software-and-data-visualization" target="_blank" rel="external">STHDA</a>，这是一份十分详细的<strong>ggplot2</strong>使用指南，因此我将其翻译成中文，一是有助于我自己学习理解，另外其他R语言爱好者或者可视化爱好者可以用来学习。翻译过程肯定不能十全十美，各位读者有建议或改进的话，十分欢迎发<strong>Email</strong>(tyan@zju.edu.cn)给我。</p>
<a id="more"></a>
<p><a href="https://ggplot2.tidyverse.org/reference/" target="_blank" rel="external"><strong>ggplot2</strong></a>是由<strong>Hadley Wickham</strong>创建的一个十分强大的可视化R包。按照<strong>ggplot2</strong>的绘图理念，Plot(图)= data(数据集)+ Aesthetics(美学映射)+ Geometry(几何对象)：</p>
<ul>
<li>data: 数据集，主要是data frame；</li>
<li>Aesthetics: 美学映射，比如将变量映射给x,y坐标轴，或者映射给颜色、大小、形状等图形属性；</li>
<li>Geometry: 几何对象，比如柱形图、直方图、散点图、线图、密度图等。</li>
</ul>
<p>在<strong>ggplot2</strong>中有两个主要绘图函数：qplot()以及ggplot()。</p>
<ul>
<li>qplot(): 顾名思义，快速绘图；</li>
<li>ggplot()：此函数才是<strong>ggplot2</strong>的精髓，远比qplot()强大，可以一步步绘制十分复杂的图形。</li>
</ul>
<p>由<strong>ggplot2</strong>绘制出来的ggplot图可以作为一个变量，然后由print()显示出来。</p>
<h2 id="图形类型"><a href="#图形类型" class="headerlink" title="图形类型"></a>图形类型</h2><p>根据数据集，<strong>ggplot2</strong>提供不同的方法绘制图形，主要是为下面几类数据类型提供绘图方法：</p>
<ul>
<li>一个变量x: 连续或离散</li>
<li>两个变量x&amp;y：连续和(或)离散</li>
<li>连续双变量分布x&amp;y: 都是连续</li>
<li>误差棒</li>
<li>地图</li>
<li>三变量</li>
</ul>
<h2 id="安装及加载"><a href="#安装及加载" class="headerlink" title="安装及加载"></a>安装及加载</h2><p>安装<strong>ggplot2</strong>提供三种方式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#直接安装tidyverse，一劳永逸（推荐,数据分析大礼包）</div><div class="line">install.packages(&quot;tidyverse&quot;)</div><div class="line">#直接安装ggplot2</div><div class="line">install.packages(&quot;ggplot2&quot;)</div><div class="line">#从Github上安装最新的版本，先安装devtools(如果没安装的话)</div><div class="line">devtools::install_github(&quot;tidyverse/ggplot2&quot;)</div></pre></td></tr></table></figure>
<p>加载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">library(ggplot2)</div></pre></td></tr></table></figure></p>
<h2 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h2><blockquote>
<p>数据集应该数据框data.frame</p>
</blockquote>
<p>本文将使用数据集<strong>mtcars</strong>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#load the data set</div><div class="line">data(mtcars)</div><div class="line">df &lt;- mtcars[, c(&quot;mpg&quot;,&quot;cyl&quot;,&quot;wt&quot;)]</div><div class="line">#将cyl转为因子型factor</div><div class="line">df$cyl &lt;- as.factor(df$cyl)</div><div class="line">head(df)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##                    mpg cyl    wt</div><div class="line">## Mazda RX4         21.0   6 2.620</div><div class="line">## Mazda RX4 Wag     21.0   6 2.875</div><div class="line">## Datsun 710        22.8   4 2.320</div><div class="line">## Hornet 4 Drive    21.4   6 3.215</div><div class="line">## Hornet Sportabout 18.7   8 3.440</div><div class="line">## Valiant           18.1   6 3.460</div></pre></td></tr></table></figure>
<h2 id="qplot"><a href="#qplot" class="headerlink" title="qplot()"></a>qplot()</h2><p>qplot()类似于R基本绘图函数plot(),可以快速绘制常见的几种图形：散点图、箱线图、小提琴图、直方图以及密度曲线图。其绘图格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qplot(x, y=NULL, data, geom=&quot;auto&quot;)</div></pre></td></tr></table></figure></p>
<p>其中：</p>
<ul>
<li>x,y: 根据需要绘制的图形使用;</li>
<li>data：数据集;</li>
<li>geom：几何图形，变量x,y同时指定的话默认为散点图，只指定x的话默认为直方图。</li>
</ul>
<h3 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qplot(x=mpg, y=wt, data=df, geom = &quot;point&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/DlJaE4eke3.png?imageslim" alt=""><br>也可以添加平滑曲线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qplot(x=mpg, y=wt, data = df, geom = c(&quot;point&quot;, &quot;smooth&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/i3lHIh2jdD.png?imageslim" alt=""><br>还有其他参数可以修改，比如点的形状、大小、颜色等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#将变量cyl映射给颜色和形状</div><div class="line">qplot(x=mpg, y=wt, data = df, colour=cyl, shape=cyl)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/D6Aflkkhab.png?imageslim" alt=""></p>
<h3 id="箱线图、小提琴图、点图"><a href="#箱线图、小提琴图、点图" class="headerlink" title="箱线图、小提琴图、点图"></a>箱线图、小提琴图、点图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#构造数据集</div><div class="line">set.seed(1234)</div><div class="line">wdata &lt;- data.frame(</div><div class="line">  sex=factor(rep(c(&quot;F&quot;, &quot;M&quot;), each=200)),</div><div class="line">  weight=c(rnorm(200, 55), rnorm(200, 58))</div><div class="line">)</div><div class="line">head(wdata)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   sex   weight</div><div class="line">## 1   F 53.79293</div><div class="line">## 2   F 55.27743</div><div class="line">## 3   F 56.08444</div><div class="line">## 4   F 52.65430</div><div class="line">## 5   F 55.42912</div><div class="line">## 6   F 55.50606</div></pre></td></tr></table></figure>
<p>箱线图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qplot(sex, weight, data = wdata, geom = &quot;boxplot&quot;, fill=sex)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/92K2e20idg.png?imageslim" alt=""></p>
<p>小提琴图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qplot(sex, weight, data = wdata, geom = &quot;violin&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/3m8H660Cl9.png?imageslim" alt=""></p>
<p>点图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qplot(sex, weight, data = wdata, geom = &quot;dotplot&quot;, stackdir=&quot;center&quot;, binaxis=&quot;y&quot;, dotsize=0.5, color=sex)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/Hb7G4J8875.png?imageslim" alt=""></p>
<h3 id="直方图、密度图"><a href="#直方图、密度图" class="headerlink" title="直方图、密度图"></a>直方图、密度图</h3><p>直方图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qplot(weight, data = wdata, geom = &quot;histogram&quot;, fill=sex)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/gd448CcLDb.png?imageslim" alt=""></p>
<p>密度图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qplot(weight, data = wdata, geom = &quot;density&quot;, color=sex, linetype=sex)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/dl77b5BDdm.png?imageslim" alt=""></p>
<h2 id="ggplot"><a href="#ggplot" class="headerlink" title="ggplot()"></a>ggplot()</h2><p>上文中的qplot()绘制散点图：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qplot(x=mpg, y=wt, data=df, geom = &quot;point&quot;)</div></pre></td></tr></table></figure></p>
<p>在ggplot()中完全可以如下实现：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(data=df, aes(x=mpg, y=wt))+</div><div class="line">  geom_point()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/80fkCC4Kgh.png?imageslim" alt=""></p>
<p>改变点形状、大小、颜色等属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data=df, aes(x=mpg, y=wt))+geom_point(color=&quot;blue&quot;, size=2, shape=23)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/6LbL12Jmhm.png?imageslim" alt=""></p>
<p>绘图过程中常常要用到转换(transformation),这时添加图层的另一个方法是用stat_*()函数。<br>下例中的geom_density()与stat_density()是等价的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(wdata, aes(x=weight))+geom_density()</div></pre></td></tr></table></figure></p>
<p>等价于<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(wdata, aes(x=weight))+stat_density()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/D3ca6EAf3F.png?imageslim" alt=""></p>
<blockquote>
<p>对于每一种几何图形。<strong>ggplot2</strong> 基本都提供了 geom<em><em>()</em>和 stat</em><em>()</em></p>
</blockquote>
<h3 id="一个变量：连续型"><a href="#一个变量：连续型" class="headerlink" title="一个变量：连续型"></a>一个变量：连续型</h3><p>使用数据集wdata，先计算出不同性别的体重平均值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">library(plyr)</div><div class="line">mu &lt;- ddply(wdata, &quot;sex&quot;, summarise, grp.mean=mean(weight))</div></pre></td></tr></table></figure></p>
<p>先绘制一个图层a,后面逐步添加图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a &lt;- ggplot(wdata, aes(x=weight))</div></pre></td></tr></table></figure></p>
<p>可能添加的图层有：</p>
<ul>
<li>对于一个连续变量：<ul>
<li>面积图geom_area()</li>
<li>密度图geom_density()</li>
<li>点图geom_dotplot()</li>
<li>频率多边图geom_freqpoly()</li>
<li>直方图geom_histogram()</li>
<li>经验累积密度图stat_ecdf()</li>
<li>QQ图stat_qq()</li>
</ul>
</li>
<li>对于一个离散变量：<ul>
<li>条形图geom_bar()</li>
</ul>
</li>
</ul>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/gcLBC7cG47.png?imageslim" alt=""></p>
<h4 id="面积图"><a href="#面积图" class="headerlink" title="面积图"></a>面积图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+geom_area(stat = &quot;bin&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/J288ccH2m5.png?imageslim" alt=""></p>
<p>改变颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a+geom_area(aes(fill=sex), stat = &quot;bin&quot;, alpha=0.6)+</div><div class="line">  theme_classic()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/LIj4mJbKb2.png?imageslim" alt=""></p>
<blockquote>
<p>注意：y轴默认为变量weight的数量即count，如果y轴要显示密度，可用以下代码：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+geom_area(aes(y=..density..), stat = &quot;bin&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/kkCc85KCeJ.png?imageslim" alt=""></p>
<p>可以通过修改不同属性如透明度、填充颜色、大小、线型等自定义图形：</p>
<h4 id="密度图"><a href="#密度图" class="headerlink" title="密度图"></a>密度图</h4><p>使用以下函数：</p>
<ul>
<li>geom_density():绘制密度图</li>
<li>geom_vline():添加竖直线</li>
<li>scale_color_manual():手动修改颜色</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+geom_density()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/c1EL7I2a49.png?imageslim" alt=""></p>
<p>根据sex修改颜色，将sex映射给line颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+geom_density(aes(color=sex))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/72Ahbf7K6h.png?imageslim" alt=""></p>
<p>修改填充颜色以及透明度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+geom_density(aes(fill=sex), alpha=0.4)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/ejijLE9IfG.png?imageslim" alt=""></p>
<p>添加均值线以及手动修改颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a+geom_density(aes(color=sex))+</div><div class="line">  geom_vline(data=mu, aes(xintercept=grp.mean, color=sex), linetype=&quot;dashed&quot;)+</div><div class="line">  scale_color_manual(values = c(&quot;red&quot;, &quot;blue&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/mAFhH7lleK.png?imageslim" alt=""></p>
<h4 id="点图"><a href="#点图" class="headerlink" title="点图"></a>点图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+geom_dotplot()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/H1mDL0HCJI.png?imageslim" alt=""></p>
<p>将sex映射给颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+geom_dotplot(aes(fill=sex))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/6bfHaEcBAl.png?imageslim" alt=""></p>
<p>手动修改颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a+geom_dotplot(aes(fill=sex))+</div><div class="line">  scale_fill_manual(values=c(&quot;#999999&quot;, &quot;#E69F00&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/kiE9Lci30h.png?imageslim" alt=""></p>
<h4 id="频率多边图"><a href="#频率多边图" class="headerlink" title="频率多边图"></a>频率多边图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+geom_freqpoly()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/K40Fch448J.png?imageslim" alt=""></p>
<p>y轴显示为密度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a+geom_freqpoly(aes(y=..density..))+</div><div class="line">  theme_minimal()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/CgCf1eAgf8.png?imageslim" alt=""></p>
<p>修改颜色以及线型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a+geom_freqpoly(aes(color=sex, linetype=sex))+</div><div class="line">  theme_minimal()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/jaaBibcFjH.png?imageslim" alt=""></p>
<h4 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+geom_histogram()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/bHilai3a9l.png?imageslim" alt=""></p>
<p>将sex映射给线颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+geom_histogram(aes(color=sex), fill=&quot;white&quot;, position = &quot;dodge&quot;)+theme_classic()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/eD7iLDJId1.png?imageslim" alt=""></p>
<h4 id="经验累积密度图"><a href="#经验累积密度图" class="headerlink" title="经验累积密度图"></a>经验累积密度图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+stat_ecdf()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/f83Imkm4jm.png?imageslim" alt=""></p>
<h4 id="QQ图"><a href="#QQ图" class="headerlink" title="QQ图"></a>QQ图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data = mtcars, aes(sample=mpg))+stat_qq()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/e7G7hbeLID.png?imageslim" alt=""></p>
<h3 id="一个离散变量"><a href="#一个离散变量" class="headerlink" title="一个离散变量"></a>一个离散变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#加载数据集</div><div class="line">data(mpg)</div><div class="line">b &lt;- ggplot(mpg, aes(x=fl))</div><div class="line">b+geom_bar()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/b4FJFb7H99.png?imageslim" alt=""></p>
<p>修改填充颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">b+geom_bar(fill=&quot;steelblue&quot;, color=&quot;black&quot;)+theme_classic()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/ih6I2ammG4.png?imageslim" alt=""></p>
<h3 id="两个变量：x-y皆连续"><a href="#两个变量：x-y皆连续" class="headerlink" title="两个变量：x,y皆连续"></a>两个变量：x,y皆连续</h3><p>使用数据集mtcars， 先创建一个ggplot图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">b &lt;- ggplot(data = mtcars, aes(x=wt, y=mpg))</div></pre></td></tr></table></figure></p>
<p>可能添加的图层有：</p>
<ul>
<li>geom_point():散点图</li>
<li>geom_smooth():平滑线</li>
<li>geom_quantile():分位线</li>
<li>geom_rug():边际地毯线</li>
<li>geom_jitter():避免重叠</li>
<li>geom_text():添加文本注释</li>
</ul>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/ld1EAJgd88.png?imageslim" alt=""></p>
<h4 id="散点图-1"><a href="#散点图-1" class="headerlink" title="散点图"></a>散点图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">b+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/796GlJi3Al.png?imageslim" alt=""></p>
<p>将变量cyl映射给点的颜色和形状<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">b + geom_point(aes(color = factor(cyl), shape = factor(cyl)))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/J6dfJ1EL33.png?imageslim" alt=""></p>
<p>自定义颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">b+geom_point(aes(color=factor(cyl), shape=factor(cyl)))+</div><div class="line">  scale_color_manual(values=c(&quot;#999999&quot;, &quot;#E69F00&quot;, &quot;#56B4E9&quot;))+theme_classic()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/3695bEj0Ha.png?imageslim" alt=""></p>
<h4 id="平滑线"><a href="#平滑线" class="headerlink" title="平滑线"></a>平滑线</h4><p>可以添加回归曲线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">b+geom_smooth()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/1hJGKGeLc2.png?imageslim" alt=""></p>
<p>散点图+回归线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">b+geom_point()+</div><div class="line">  geom_smooth(method = &quot;lm&quot;, se=FALSE)#去掉置信区间</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/Gl47fkb2c2.png?imageslim" alt=""></p>
<p>使用loess方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">b+geom_point()+</div><div class="line">  geom_smooth(method = &quot;loess&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/6jaCLAL3Fc.png?imageslim" alt=""></p>
<p>将变量映射给颜色和形状<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">b+geom_point(aes(color=factor(cyl), shape=factor(cyl)))+</div><div class="line">  geom_smooth(aes(color=factor(cyl), shape=factor(cyl)), method = &quot;lm&quot;, se=FALSE, fullrange=TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/7hjfJ89K4c.png?imageslim" alt=""></p>
<h4 id="分位线"><a href="#分位线" class="headerlink" title="分位线"></a>分位线</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(data = mpg, aes(cty, hwy))+</div><div class="line">  geom_point()+geom_quantile()+</div><div class="line">  theme_minimal()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/l0F005kgih.png?imageslim" alt=""></p>
<h4 id="边际地毯线"><a href="#边际地毯线" class="headerlink" title="边际地毯线"></a>边际地毯线</h4><p>使用数据集<strong>faithful</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(data = faithful, aes(x=eruptions, y=waiting))+</div><div class="line">  geom_point()+geom_rug()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/7H7BlJE35k.png?imageslim" alt=""></p>
<h4 id="避免重叠"><a href="#避免重叠" class="headerlink" title="避免重叠"></a>避免重叠</h4><p>实际上<code>geom_jitter()</code>是<code>geom_point(position=&quot;jitter&quot;)</code>的简称,下面使用数据集<strong>mpg</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggplot(data = mpg, aes(displ, hwy))</div><div class="line">p+geom_point()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/Ad2aBaaEED.png?imageslim" alt=""><br>增加抖动防止重叠<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+geom_jitter(width = 0.5, height = 0.5)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/DmKBbIGK2c.png?imageslim" alt=""></p>
<p>其中两个参数：</p>
<ul>
<li>width：x轴方向的抖动幅度</li>
<li>height：y轴方向的抖动幅度</li>
</ul>
<h4 id="文本注释"><a href="#文本注释" class="headerlink" title="文本注释"></a>文本注释</h4><p>参数label用来指定注释标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">b+geom_text(aes(label=rownames(mtcars)))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/L6CaLD26ga.png?imageslim" alt=""></p>
<h3 id="两个变量：连续二元分布"><a href="#两个变量：连续二元分布" class="headerlink" title="两个变量：连续二元分布"></a>两个变量：连续二元分布</h3><p>使用数据集<strong>diamonds</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">head(diamonds[, c(&quot;carat&quot;, &quot;price&quot;)])</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">## # A tibble: 6 x 2</div><div class="line">##   carat price</div><div class="line">##   &lt;dbl&gt; &lt;int&gt;</div><div class="line">## 1  0.23   326</div><div class="line">## 2  0.21   326</div><div class="line">## 3  0.23   327</div><div class="line">## 4  0.29   334</div><div class="line">## 5  0.31   335</div><div class="line">## 6  0.24   336</div></pre></td></tr></table></figure>
<p>创建ggplot图层,后面再逐步添加图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c &lt;- ggplot(data=diamonds, aes(carat, price))</div></pre></td></tr></table></figure></p>
<p>可添加的图层有：</p>
<ul>
<li>geom_bin2d(): 二维封箱热图</li>
<li>geom_hex(): 六边形封箱图</li>
<li>geom_density_2d(): 二维等高线密度图</li>
</ul>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/mIdJKh6F1G.png?imageslim" alt=""></p>
<h4 id="二维封箱热图"><a href="#二维封箱热图" class="headerlink" title="二维封箱热图"></a>二维封箱热图</h4><p><code>geom_bin2d()</code>将点的数量用矩形封装起来，通过颜色深浅来反映点密度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c+geom_bin2d()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/BgC3g377mE.png?imageslim" alt=""><br>设置bin的数量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c+geom_bin2d(bins=150)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/4ejegHkcbF.png?imageslim" alt=""></p>
<h4 id="六边形封箱图"><a href="#六边形封箱图" class="headerlink" title="六边形封箱图"></a>六边形封箱图</h4><p>geom_hex()依赖于另一个R包<strong>hexbin</strong>，所以没安装的先安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">install.packages(&quot;hexbin&quot;)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">library(hexbin)</div><div class="line">c+geom_hex()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/f9Fbl2IAKj.png?imageslim" alt=""></p>
<p>修改bin的数目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c+geom_hex(bins=10)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/bIc44CGdC8.png?imageslim" alt=""></p>
<h4 id="二维等高线密度图"><a href="#二维等高线密度图" class="headerlink" title="二维等高线密度图"></a>二维等高线密度图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sp &lt;- ggplot(faithful, aes(x=eruptions, y=waiting))</div><div class="line">sp+geom_point()+ geom_density_2d()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/imG9fLLlb6.png?imageslim" alt=""></p>
<h3 id="两个变量：连续函数"><a href="#两个变量：连续函数" class="headerlink" title="两个变量：连续函数"></a>两个变量：连续函数</h3><p>主要是如何通过线来连接两个变量，使用数据集<strong>economics</strong>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">head(economics)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">## # A tibble: 6 x 6</div><div class="line">##         date   pce    pop psavert uempmed unemploy</div><div class="line">##       &lt;date&gt; &lt;dbl&gt;  &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;int&gt;</div><div class="line">## 1 1967-07-01 507.4 198712    12.5     4.5     2944</div><div class="line">## 2 1967-08-01 510.5 198911    12.5     4.7     2945</div><div class="line">## 3 1967-09-01 516.3 199113    11.7     4.6     2958</div><div class="line">## 4 1967-10-01 512.9 199311    12.5     4.9     3143</div><div class="line">## 5 1967-11-01 518.1 199498    12.5     4.7     3066</div><div class="line">## 6 1967-12-01 525.8 199657    12.1     4.8     3018</div></pre></td></tr></table></figure>
<p>先创建一个ggplot图层，后面逐步添加图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d &lt;- ggplot(data = economics, aes(x=date, y=unemploy))</div></pre></td></tr></table></figure></p>
<p>可添加的图层有：</p>
<ul>
<li>geom_area():面积图</li>
<li>geom_line()：折线图</li>
<li>geom_step(): 阶梯图</li>
</ul>
<h4 id="面积图-1"><a href="#面积图-1" class="headerlink" title="面积图"></a>面积图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d+geom_area()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/dj4fHa6Kh2.png?imageslim" alt=""></p>
<h4 id="线图"><a href="#线图" class="headerlink" title="线图"></a>线图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d+geom_line()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/DhLc531J92.png?imageslim" alt=""></p>
<h4 id="阶梯图"><a href="#阶梯图" class="headerlink" title="阶梯图"></a>阶梯图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">set.seed(1111)</div><div class="line">ss &lt;- economics[sample(1:nrow(economics), 20),]</div><div class="line">ggplot(ss, aes(x=date, y=unemploy))+</div><div class="line">  geom_step()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/l5lHl5944G.png?imageslim" alt=""></p>
<h3 id="两个变量：x离散，y连续"><a href="#两个变量：x离散，y连续" class="headerlink" title="两个变量：x离散，y连续"></a>两个变量：x离散，y连续</h3><p>使用数据集<strong>ToothGrowth</strong>,其中的变量len(Tooth length)是连续变量，dose是离散变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ToothGrowth$dose &lt;- as.factor(ToothGrowth$dose)</div><div class="line">head(ToothGrowth)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##    len supp dose</div><div class="line">## 1  4.2   VC  0.5</div><div class="line">## 2 11.5   VC  0.5</div><div class="line">## 3  7.3   VC  0.5</div><div class="line">## 4  5.8   VC  0.5</div><div class="line">## 5  6.4   VC  0.5</div><div class="line">## 6 10.0   VC  0.5</div></pre></td></tr></table></figure>
<p>创建图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">e &lt;- ggplot(data = ToothGrowth, aes(x=dose, y=len))</div></pre></td></tr></table></figure></p>
<p>可添加的图层有：</p>
<ul>
<li>geom_boxplot(): 箱线图</li>
<li>geom_violin()：小提琴图</li>
<li>geom_dotplot()：点图</li>
<li>geom_jitter(): 带状图</li>
<li>geom_line(): 线图</li>
<li>geom_bar(): 条形图</li>
</ul>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/3F447J6d7L.png?imageslim" alt=""></p>
<h4 id="箱线图"><a href="#箱线图" class="headerlink" title="箱线图"></a>箱线图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">e+geom_boxplot()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/37J7f7hfCJ.png?imageslim" alt=""></p>
<p>添加有缺口的箱线图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">e+geom_boxplot(notch = TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/952cibHB9E.png?imageslim" alt=""></p>
<p>按dose分组映射给颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">e+geom_boxplot(aes(color=dose))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/15dJjbIGkB.png?imageslim" alt=""></p>
<p>将dose映射给填充颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">e+geom_boxplot(aes(fill=dose))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/Am1A6Efaa6.png?imageslim" alt=""></p>
<p>按supp进行分类并映射给填充颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(ToothGrowth, aes(x=dose, y=len))+ geom_boxplot(aes(fill=supp))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/jfFFF1Hh99.png?imageslim" alt=""></p>
<h4 id="小提琴图"><a href="#小提琴图" class="headerlink" title="小提琴图"></a>小提琴图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">e+geom_violin(trim = FALSE)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/fG1DmbmaIB.png?imageslim" alt=""></p>
<p>添加中值点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">e+geom_violin(trim = FALSE)+</div><div class="line">  stat_summary(fun.data = mean_sdl, fun.args = list(mult=1), </div><div class="line">               geom=&quot;pointrange&quot;, color=&quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/GAkDaEHJe2.png?imageslim" alt=""></p>
<p>与箱线图结合<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">e+geom_violin(trim = FALSE)+</div><div class="line">  geom_boxplot(width=0.2)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/igef2H376K.png?imageslim" alt=""></p>
<p>将dose映射给颜色进行分组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">e+geom_violin(aes(color=dose), trim = FALSE)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/g6G0aI5DaE.png?imageslim" alt=""></p>
<h4 id="点图-1"><a href="#点图-1" class="headerlink" title="点图"></a>点图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">e+geom_dotplot(binaxis = &quot;y&quot;, stackdir = &quot;center&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/60aB2FKkBj.png?imageslim" alt=""></p>
<p>添加中值点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">e + geom_dotplot(binaxis = &quot;y&quot;, stackdir = &quot;center&quot;) + </div><div class="line">  stat_summary(fun.data=mean_sdl, color = &quot;red&quot;,geom = &quot;pointrange&quot;,fun.args=list(mult=1))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/B1A5h69HDF.png?imageslim" alt=""></p>
<p>与箱线图结合<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">e + geom_boxplot() + </div><div class="line">  geom_dotplot(binaxis = &quot;y&quot;, stackdir = &quot;center&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/JkebcfeiHH.png?imageslim" alt=""></p>
<p>添加小提琴图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">e + geom_violin(trim = FALSE) +</div><div class="line">  geom_dotplot(binaxis=&apos;y&apos;, stackdir=&apos;center&apos;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/DGm19F7hde.png?imageslim" alt=""></p>
<p>将dose映射给颜色以及填充色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">e + geom_dotplot(aes(color = dose, fill = dose), </div><div class="line">                 binaxis = &quot;y&quot;, stackdir = &quot;center&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/AGABHiI43E.png?imageslim" alt=""></p>
<h4 id="带状图"><a href="#带状图" class="headerlink" title="带状图"></a>带状图</h4><p>带状图是一种一维散点图，当样本量很小时，与箱线图相当<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">e + geom_jitter(position=position_jitter(0.2))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/KE0EHFl7h0.png?imageslim" alt=""></p>
<p>添加中值点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">e + geom_jitter(position=position_jitter(0.2)) + </div><div class="line">  stat_summary(fun.data=&quot;mean_sdl&quot;,  fun.args = list(mult=1), </div><div class="line">               geom=&quot;pointrange&quot;, color = &quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/GF9c4kHDKI.png?imageslim" alt="mark"></p>
<p>与点图结合<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">e + geom_jitter(position=position_jitter(0.2)) + </div><div class="line">  geom_dotplot(binaxis = &quot;y&quot;, stackdir = &quot;center&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/238j5KGmEB.png?imageslim" alt="mark"></p>
<p>与小提琴图结合<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">e + geom_violin(trim = FALSE) +</div><div class="line">  geom_jitter(position=position_jitter(0.2))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/lEADE3fA1h.png?imageslim" alt="mark"></p>
<p>将dose映射给颜色和形状<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">e +  geom_jitter(aes(color = dose, shape = dose),</div><div class="line">                 position=position_jitter(0.2))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/7lKfKkE5d6.png?imageslim" alt="mark"></p>
<h4 id="线图-1"><a href="#线图-1" class="headerlink" title="线图"></a>线图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#构造数据集</div><div class="line">df &lt;- data.frame(supp=rep(c(&quot;VC&quot;, &quot;OJ&quot;), each=3),</div><div class="line">                dose=rep(c(&quot;D0.5&quot;, &quot;D1&quot;, &quot;D2&quot;),2),</div><div class="line">                len=c(6.8, 15, 33, 4.2, 10, 29.5))</div><div class="line">head(df)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   supp dose  len</div><div class="line">## 1   VC D0.5  6.8</div><div class="line">## 2   VC   D1 15.0</div><div class="line">## 3   VC   D2 33.0</div><div class="line">## 4   OJ D0.5  4.2</div><div class="line">## 5   OJ   D1 10.0</div><div class="line">## 6   OJ   D2 29.5</div></pre></td></tr></table></figure>
<p>将supp映射线型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(df, aes(x=dose, y=len, group=supp)) +</div><div class="line">  geom_line(aes(linetype=supp))+</div><div class="line">  geom_point()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/Bjl125A2Im.png?imageslim" alt="mark"></p>
<p>修改线型、点的形状以及颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(df, aes(x=dose, y=len, group=supp)) +</div><div class="line">  geom_line(aes(linetype=supp, color = supp))+</div><div class="line">  geom_point(aes(shape=supp, color = supp))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/j9e39B9cKB.png?imageslim" alt="mark"></p>
<h4 id="条形图"><a href="#条形图" class="headerlink" title="条形图"></a>条形图</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#构造数据集</div><div class="line">df &lt;- data.frame(dose=c(&quot;D0.5&quot;, &quot;D1&quot;, &quot;D2&quot;),</div><div class="line">                len=c(4.2, 10, 29.5))</div><div class="line">head(df)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">##   dose  len</div><div class="line">## 1 D0.5  4.2</div><div class="line">## 2   D1 10.0</div><div class="line">## 3   D2 29.5</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">df2 &lt;- data.frame(supp=rep(c(&quot;VC&quot;, &quot;OJ&quot;), each=3),</div><div class="line">                dose=rep(c(&quot;D0.5&quot;, &quot;D1&quot;, &quot;D2&quot;),2),</div><div class="line">                len=c(6.8, 15, 33, 4.2, 10, 29.5))</div><div class="line">head(df2)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   supp dose  len</div><div class="line">## 1   VC D0.5  6.8</div><div class="line">## 2   VC   D1 15.0</div><div class="line">## 3   VC   D2 33.0</div><div class="line">## 4   OJ D0.5  4.2</div><div class="line">## 5   OJ   D1 10.0</div><div class="line">## 6   OJ   D2 29.5</div></pre></td></tr></table></figure>
<p>创建图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">f &lt;- ggplot(df, aes(x = dose, y = len))</div><div class="line">f + geom_bar(stat = &quot;identity&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/FF7A37l9j4.png?imageslim" alt="mark"></p>
<p>修改填充色以及添加标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">f + geom_bar(stat=&quot;identity&quot;, fill=&quot;steelblue&quot;)+</div><div class="line">  geom_text(aes(label=len), vjust=-0.3, size=3.5)+</div><div class="line">  theme_minimal()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/hBa9871IE9.png?imageslim" alt="mark"></p>
<p>将dose映射给条形图颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">f + geom_bar(aes(color = dose),</div><div class="line">             stat=&quot;identity&quot;, fill=&quot;white&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/HIGAAJLiFl.png?imageslim" alt="mark"></p>
<p>修改填充色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f + geom_bar(aes(fill = dose), stat=&quot;identity&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/LGFlfJGmHi.png?imageslim" alt="mark"></p>
<p>将变量supp映射给填充色，从而达到分组效果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">g &lt;- ggplot(data=df2, aes(x=dose, y=len, fill=supp)) </div><div class="line">g + geom_bar(stat = &quot;identity&quot;)#position默认为stack</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/dLGm6lij04.png?imageslim" alt="mark"></p>
<p>修改position为dodge<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">g + geom_bar(stat=&quot;identity&quot;, position=position_dodge())</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/Di23jj9kC9.png?imageslim" alt="mark"></p>
<h3 id="两个变量：x、y皆离散"><a href="#两个变量：x、y皆离散" class="headerlink" title="两个变量：x、y皆离散"></a>两个变量：x、y皆离散</h3><p>使用数据集diamonds中的两个离散变量color以及cut<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds, aes(cut, color)) +</div><div class="line">  geom_jitter(aes(color = cut), size = 0.5)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/c8Fh5DI7cE.png?imageslim" alt="mark"></p>
<h3 id="两个变量：绘制误差图"><a href="#两个变量：绘制误差图" class="headerlink" title="两个变量：绘制误差图"></a>两个变量：绘制误差图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">df &lt;- ToothGrowth</div><div class="line">df$dose &lt;- as.factor(df$dose)</div><div class="line">head(df)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##    len supp dose</div><div class="line">## 1  4.2   VC  0.5</div><div class="line">## 2 11.5   VC  0.5</div><div class="line">## 3  7.3   VC  0.5</div><div class="line">## 4  5.8   VC  0.5</div><div class="line">## 5  6.4   VC  0.5</div><div class="line">## 6 10.0   VC  0.5</div></pre></td></tr></table></figure>
<p>绘制误差图需要知道均值以及标准误，下面这个函数用来计算每组的均值以及标准误。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">data_summary &lt;- function(data, varname, grps)&#123;</div><div class="line">  require(plyr)</div><div class="line">  summary_func &lt;- function(x, col)&#123;</div><div class="line">    c(mean = mean(x[[col]], na.rm=TRUE),</div><div class="line">      sd = sd(x[[col]], na.rm=TRUE))</div><div class="line">  &#125;</div><div class="line">  data_sum&lt;-ddply(data, grps, .fun=summary_func, varname)</div><div class="line">  data_sum &lt;- rename(data_sum, c(&quot;mean&quot; = varname))</div><div class="line"> return(data_sum)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>计算均值以及标准误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">df2 &lt;- data_summary(df, varname=&quot;len&quot;, grps= &quot;dose&quot;)</div><div class="line"># Convert dose to a factor variable</div><div class="line">df2$dose=as.factor(df2$dose)</div><div class="line">head(df2)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">##   dose    len       sd</div><div class="line">## 1  0.5 10.605 4.499763</div><div class="line">## 2    1 19.735 4.415436</div><div class="line">## 3    2 26.100 3.774150</div></pre></td></tr></table></figure>
<p>创建图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">f &lt;- ggplot(df2, aes(x = dose, y = len, </div><div class="line">                     ymin = len-sd, ymax = len+sd))</div></pre></td></tr></table></figure></p>
<p>可添加的图层有：</p>
<ul>
<li>geom_crossbar(): 空心柱，上中下三线分别代表ymax、mean、ymin</li>
<li>geom_errorbar(): 误差棒</li>
<li>geom_errorbarh(): 水平误差棒</li>
<li>geom_linerange()：竖直误差线</li>
<li>geom_pointrange()：中间为一点的误差线</li>
</ul>
<p>具体如下：</p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/521m2AHCDg.png?imageslim" alt=""></p>
<h4 id="geom-crossbar"><a href="#geom-crossbar" class="headerlink" title="geom_crossbar()"></a>geom_crossbar()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f+geom_crossbar()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/18EIA26lgI.png?imageslim" alt="mark"></p>
<p>将dose映射给颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f+geom_crossbar(aes(color=dose))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/jH5eDIHjHL.png?imageslim" alt="mark"></p>
<p>自定义颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">f+geom_crossbar(aes(color=dose))+</div><div class="line">  scale_color_manual(values = c(&quot;#999999&quot;, &quot;#E69F00&quot;, &quot;#56B4E9&quot;))+theme_classic()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/jcBCFdKlmH.png?imageslim" alt="mark"></p>
<p>修改填充色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">f+geom_crossbar(aes(fill=dose))+</div><div class="line">  scale_fill_manual(values = c(&quot;#999999&quot;, &quot;#E69F00&quot;, &quot;#56B4E9&quot;))+</div><div class="line">  theme_classic()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/6c5A4l9d2D.png?imageslim" alt="mark"></p>
<p>通过将supp映射给颜色实现分组，可以利用函数stat_summary()来计算mean和sd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">f &lt;- ggplot(df, aes(x=dose, y=len, color=supp))</div><div class="line">f+stat_summary(fun.data = mean_sdl, fun.args = list(mult=1), geom=&quot;crossbar&quot;, width=0.6, position = position_dodge(0.8))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/3e3Ic9486G.png?imageslim" alt="mark"></p>
<h4 id="误差棒"><a href="#误差棒" class="headerlink" title="误差棒"></a>误差棒</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f &lt;- ggplot(df2, aes(x=dose, y=len, ymin=len-sd, ymax=len+sd))</div></pre></td></tr></table></figure>
<p>将dose映射给颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f+geom_errorbar(aes(color=dose), width=0.2)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/HLJe8aLajg.png?imageslim" alt="mark"></p>
<p>与线图结合<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">f+geom_line(aes(group=1))+</div><div class="line">  geom_errorbar(width=0.15)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/2E0aKa6GgJ.png?imageslim" alt="mark"></p>
<p>与条形图结合，并将变量dose映射给颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">f+geom_bar(aes(color=dose), stat = &quot;identity&quot;, fill=&quot;white&quot;)+</div><div class="line">  geom_errorbar(aes(color=dose), width=0.1)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170918/1GllA47ajF.png?imageslim" alt="mark"></p>
<h4 id="水平误差棒"><a href="#水平误差棒" class="headerlink" title="水平误差棒"></a>水平误差棒</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#构造数据集</div><div class="line">df2 &lt;- data_summary(ToothGrowth, varname=&quot;len&quot;, grps = &quot;dose&quot;)</div><div class="line">df2$dose &lt;- as.factor(df2$dose)</div><div class="line">head(df2)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">##   dose    len       sd</div><div class="line">## 1  0.5 10.605 4.499763</div><div class="line">## 2    1 19.735 4.415436</div><div class="line">## 3    2 26.100 3.774150</div></pre></td></tr></table></figure>
<p>创建图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f &lt;- ggplot(data = df2, aes(x=len, y=dose,xmin=len-sd, xmax=len+sd))</div></pre></td></tr></table></figure></p>
<p>参数xmin与xmax用来设置水平误差棒</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f+geom_errorbarh()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/2KAK9FgCDF.png?imageslim" alt="mark"></p>
<p>通过映射实现分组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f+geom_errorbarh(aes(color=dose))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/G3cJmg13EI.png?imageslim" alt="mark"></p>
<h4 id="geom-linerange-与geom-pointrange"><a href="#geom-linerange-与geom-pointrange" class="headerlink" title="geom_linerange()与geom_pointrange()"></a>geom_linerange()与geom_pointrange()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f &lt;- ggplot(df2, aes(x=dose, y=len, ymin=len-sd, ymax=len+sd))</div></pre></td></tr></table></figure>
<p>line range<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f+geom_linerange()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/95BJEFgb1c.png?imageslim" alt="mark"></p>
<p>point range<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f+geom_pointrange()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/5kAAd2dhJl.png?imageslim" alt="mark"></p>
<h4 id="点图-误差棒"><a href="#点图-误差棒" class="headerlink" title="点图+误差棒"></a>点图+误差棒</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">g &lt;- ggplot(df, aes(x=dose, y=len))+</div><div class="line">  geom_dotplot(binaxis = &quot;y&quot;, stackdir = &quot;center&quot;)</div></pre></td></tr></table></figure>
<p>添加geom_crossbar()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">g+stat_summary(fun.data = mean_sdl, fun.args = list(mult=1), geom=&quot;crossbar&quot;, color=&quot;red&quot;, width=0.1)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/gb1G7K8D25.png?imageslim" alt="mark"></p>
<p>添加geom_errorbar()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">g + stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), </div><div class="line">        geom=&quot;errorbar&quot;, color=&quot;red&quot;, width=0.2) +</div><div class="line">  stat_summary(fun.y=mean, geom=&quot;point&quot;, color=&quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/HBjmlf502b.png?imageslim" alt="mark"></p>
<p>添加geom_pointrange()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">g + stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), </div><div class="line">                 geom=&quot;pointrange&quot;, color=&quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/E3K5E0cg9B.png?imageslim" alt="mark"></p>
<h3 id="两个变量：地图绘制"><a href="#两个变量：地图绘制" class="headerlink" title="两个变量：地图绘制"></a>两个变量：地图绘制</h3><p><strong>ggplot2</strong>提供了绘制地图的函数<code>geom_map()</code>，依赖于包<strong>maps</strong>提供地理信息。<br>安装<strong>map</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">install.paclages(&quot;maps&quot;)</div></pre></td></tr></table></figure></p>
<p>下面将绘制美国地图，数据集采用<strong>USArrests</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">library(maps)</div><div class="line">head(USArrests)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##            Murder Assault UrbanPop Rape</div><div class="line">## Alabama      13.2     236       58 21.2</div><div class="line">## Alaska       10.0     263       48 44.5</div><div class="line">## Arizona       8.1     294       80 31.0</div><div class="line">## Arkansas      8.8     190       50 19.5</div><div class="line">## California    9.0     276       91 40.6</div><div class="line">## Colorado      7.9     204       78 38.7</div></pre></td></tr></table></figure>
<p>对数据进行整理一下,添加一列state<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">crimes &lt;- data.frame(state=tolower(rownames(USArrests)), USArrests)</div><div class="line">head(crimes)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##            Murder Assault UrbanPop Rape</div><div class="line">## Alabama      13.2     236       58 21.2</div><div class="line">## Alaska       10.0     263       48 44.5</div><div class="line">## Arizona       8.1     294       80 31.0</div><div class="line">## Arkansas      8.8     190       50 19.5</div><div class="line">## California    9.0     276       91 40.6</div><div class="line">## Colorado      7.9     204       78 38.7</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#数据重铸</div><div class="line">library(reshape2)</div><div class="line">crimesm &lt;- melt(crimes, id=1)</div><div class="line">head(crimesm)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##        state variable value</div><div class="line">## 1    alabama   Murder  13.2</div><div class="line">## 2     alaska   Murder  10.0</div><div class="line">## 3    arizona   Murder   8.1</div><div class="line">## 4   arkansas   Murder   8.8</div><div class="line">## 5 california   Murder   9.0</div><div class="line">## 6   colorado   Murder   7.9</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">map_data &lt;- map_data(&quot;state&quot;)</div><div class="line">#绘制地图，使用Murder进行着色</div><div class="line">ggplot(crimes, aes(map_id=state))+</div><div class="line">  geom_map(aes(fill=Murder), map=map_data)+</div><div class="line">  expand_limits(x=map_data$long, y=map_data$lat)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/I05fI783fH.png?imageslim" alt="mark"></p>
<h3 id="三个变量"><a href="#三个变量" class="headerlink" title="三个变量"></a>三个变量</h3><p>使用数据集<strong>mtcars</strong>，首先绘制一个相关性图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#构造数据</div><div class="line">df &lt;- mtcars[, c(1,3,4,5,6,7)]</div><div class="line">head(df)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##                    mpg disp  hp drat    wt  qsec</div><div class="line">## Mazda RX4         21.0  160 110 3.90 2.620 16.46</div><div class="line">## Mazda RX4 Wag     21.0  160 110 3.90 2.875 17.02</div><div class="line">## Datsun 710        22.8  108  93 3.85 2.320 18.61</div><div class="line">## Hornet 4 Drive    21.4  258 110 3.08 3.215 19.44</div><div class="line">## Hornet Sportabout 18.7  360 175 3.15 3.440 17.02</div><div class="line">## Valiant           18.1  225 105 2.76 3.460 20.22</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cormat &lt;- round(cor(df), 2)</div><div class="line">cormat_melt &lt;- melt(cormat)</div><div class="line">head(cormat)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##        mpg  disp    hp  drat    wt  qsec</div><div class="line">## mpg   1.00 -0.85 -0.78  0.68 -0.87  0.42</div><div class="line">## disp -0.85  1.00  0.79 -0.71  0.89 -0.43</div><div class="line">## hp   -0.78  0.79  1.00 -0.45  0.66 -0.71</div><div class="line">## drat  0.68 -0.71 -0.45  1.00 -0.71  0.09</div><div class="line">## wt   -0.87  0.89  0.66 -0.71  1.00 -0.17</div><div class="line">## qsec  0.42 -0.43 -0.71  0.09 -0.17  1.00</div></pre></td></tr></table></figure>
<p>创建图层：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">g &lt;- ggplot(cormat_melt, aes(x=Var1, y=Var2))</div></pre></td></tr></table></figure></p>
<p>在此基础上可添加的图层有：</p>
<ul>
<li>geom_tile(): 瓦片图</li>
<li>geom_raster(): 光栅图，瓦片图的一种，只不过所有的tiles都是一样的大小 </li>
</ul>
<p>现在使用使用geom_tile()绘制相关性矩阵图，我们这里这绘制下三角矩阵图，首先要整理数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#获得相关矩阵的下三角</div><div class="line">get_lower_tri &lt;- function(cormat)&#123;</div><div class="line">  cormat[upper.tri(cormat)] &lt;- NA</div><div class="line">  return(cormat)</div><div class="line">&#125;</div><div class="line">#获得相关矩阵的上三角</div><div class="line">get_upper_tri &lt;- function(cormat)&#123;</div><div class="line">  cormat[lower.tri(cormat)] &lt;- NA</div><div class="line">  return(cormat)</div><div class="line">&#125;</div><div class="line">upper_tri &lt;- get_upper_tri(cormat = cormat)</div><div class="line">head(upper_tri)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##      mpg  disp    hp  drat    wt  qsec</div><div class="line">## mpg    1 -0.85 -0.78  0.68 -0.87  0.42</div><div class="line">## disp  NA  1.00  0.79 -0.71  0.89 -0.43</div><div class="line">## hp    NA    NA  1.00 -0.45  0.66 -0.71</div><div class="line">## drat  NA    NA    NA  1.00 -0.71  0.09</div><div class="line">## wt    NA    NA    NA    NA  1.00 -0.17</div><div class="line">## qsec  NA    NA    NA    NA    NA  1.00</div></pre></td></tr></table></figure>
<p>绘制相关矩阵图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#数据重铸</div><div class="line">upper_tri_melt &lt;- melt(upper_tri, na.rm = TRUE)</div><div class="line">ggplot(data=upper_tri_melt, aes(Var1, y=Var2, fill=value))+</div><div class="line">  geom_tile(color=&quot;white&quot;)+</div><div class="line">  scale_fill_gradient2(low = &quot;blue&quot;, high = &quot;red&quot;, mid = &quot;white&quot;, midpoint = 0, limit=c(-1, 1), space = &quot;Lab&quot;, name=&quot;Person\nCorrelation&quot;)+</div><div class="line">  theme_minimal()+</div><div class="line">  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 12, hjust = 1))+</div><div class="line">  coord_fixed()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/LL96JDbLi4.png?imageslim" alt="mark"></p>
<blockquote>
<p>上图中蓝色代表互相关，红色代表正相关，至于coord_fixed()保证x，y轴比例为1</p>
</blockquote>
<p>可以看出上图顺序有点乱，我们可以对相关矩阵进行排序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#构造函数</div><div class="line">reorder_cormat &lt;- function(cormat)&#123;</div><div class="line">  dd &lt;- as.dist((1-cormat)/2)</div><div class="line">  hc &lt;- hclust(dd)</div><div class="line">  cormat &lt;- cormat[hc$order, hc$order]</div><div class="line">&#125;</div><div class="line">cormat &lt;- reorder_cormat(cormat)</div><div class="line">lower_tri &lt;- get_lower_tri(cormat)</div><div class="line">lower_tri_melt &lt;- melt(lower_tri, na.rm = TRUE)</div><div class="line">head(lower_tri_melt)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   Var1 Var2 value</div><div class="line">## 1   hp   hp  1.00</div><div class="line">## 2 disp   hp  0.79</div><div class="line">## 3   wt   hp  0.66</div><div class="line">## 4 qsec   hp -0.71</div><div class="line">## 5  mpg   hp -0.78</div><div class="line">## 6 drat   hp -0.45</div></pre></td></tr></table></figure>
<p>绘制图形<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ggheatmap &lt;- ggplot(lower_tri_melt, aes(Var1, Var2, fill=value))+</div><div class="line">  geom_tile(color=&quot;white&quot;)+</div><div class="line">  scale_fill_gradient2(low = &quot;blue&quot;, high = &quot;red&quot;, mid = &quot;white&quot;, midpoint = 0, limit=c(-1, 1), space = &quot;Lab&quot;, name=&quot;Person\nCorrelation&quot;)+</div><div class="line">  theme_minimal()+</div><div class="line"> theme(axis.text.x = element_text(angle = 45, vjust = 1, </div><div class="line">    size = 12, hjust = 1))+</div><div class="line"> coord_fixed()</div><div class="line">print(ggheatmap)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/FDdmmgjJL5.png?imageslim" alt="mark"></p>
<h3 id="图元：多边形、路径、带状、射线（线段）、矩形等"><a href="#图元：多边形、路径、带状、射线（线段）、矩形等" class="headerlink" title="图元：多边形、路径、带状、射线（线段）、矩形等"></a>图元：多边形、路径、带状、射线（线段）、矩形等</h3><p>本节主要讲述的是添加图形元件，将用到一下函数：</p>
<ul>
<li>geom_polygon()：添加多边形</li>
<li>geom_path(): 路径</li>
<li>geom_ribbon(): 带状</li>
<li>geom_segment(): 射线、线段</li>
<li>geom_curve(): 曲线</li>
<li>geom_rect(): 二维矩形</li>
</ul>
<h4 id="添加多边形"><a href="#添加多边形" class="headerlink" title="添加多边形"></a>添加多边形</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(dplyr)</div><div class="line">map_data(&quot;world&quot;)%&gt;%</div><div class="line">  filter(region==c(&quot;China&quot;, &quot;Taiwan&quot;))%&gt;%</div><div class="line">  ggplot(aes(x=long, y=lat, group=group))+</div><div class="line">  geom_polygon(fill=&quot;red&quot;, color=&quot;black&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/Gj3I6E4Kh6.png?imageslim" alt="mark"></p>
<h4 id="添加路径、带状、矩形"><a href="#添加路径、带状、矩形" class="headerlink" title="添加路径、带状、矩形"></a>添加路径、带状、矩形</h4><p>创建图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">h &lt;- ggplot(economics, aes(date, unemploy))</div></pre></td></tr></table></figure></p>
<p>添加路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">h+geom_path()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/hKCeGeja0m.png?imageslim" alt="mark"></p>
<p>添加带状<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">h+geom_ribbon(aes(ymin=unemploy-800, ymax=unemploy+800), fill = &quot;grey70&quot;)+geom_line(aes(y=unemploy))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/FKG84CB8f1.png?imageslim" alt="mark"></p>
<p>添加矩形<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">h+</div><div class="line">  geom_path()+</div><div class="line">  geom_rect(aes(xmin=as.Date(&quot;1980-01-01&quot;), ymin=-Inf, xmax=as.Date(&quot;1985-01-01&quot;), ymax=Inf), fill=&quot;steelblue&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/c5iBDliiKB.png?imageslim" alt="mark"></p>
<h4 id="添加线段"><a href="#添加线段" class="headerlink" title="添加线段"></a>添加线段</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">i &lt;- ggplot(mtcars, aes(wt, mpg))+geom_point()</div><div class="line">#添加线段</div><div class="line">i+geom_segment(aes(x=2, y=15, xend=3, yend=15))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/lF9GiCg023.png?imageslim" alt="mark"></p>
<p>添加箭头<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">i+geom_segment(aes(x=5, y=30, xend=3.5, yend=25), arrow = arrow(length = unit(0.5, &quot;cm&quot;)))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/ebGE0KdHlc.png?imageslim" alt="mark"></p>
<h4 id="添加曲线"><a href="#添加曲线" class="headerlink" title="添加曲线"></a>添加曲线</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">i+geom_curve(aes(x=2, y=15, xend=3, yend=15), color=&quot;red&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/BHJd8191Am.png?imageslim" alt="mark"></p>
<h3 id="图形参数：主标题、坐标轴标签、图例标题"><a href="#图形参数：主标题、坐标轴标签、图例标题" class="headerlink" title="图形参数：主标题、坐标轴标签、图例标题"></a>图形参数：主标题、坐标轴标签、图例标题</h3><p>创建图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ToothGrowth$dose &lt;- as.factor(ToothGrowth$dose)</div><div class="line">p &lt;- ggplot(ToothGrowth, aes(x=dose, y=len))+geom_boxplot()</div></pre></td></tr></table></figure></p>
<p>修改标题以及标签的函数有：</p>
<ul>
<li>ggtitle(“New main title”): 添加主标题</li>
<li>xlab(“New X axis label”): 修改x轴标签</li>
<li>ylab(“New Y axis label”): 修改y轴标签</li>
<li>labs(title = “New main title”, x = “New X axis label”, y = “New Y axis label”): 可同时添加主标题以及坐标轴标签，另外，图例标题也可以用此函数修改</li>
</ul>
<h4 id="修改主标题以及标签"><a href="#修改主标题以及标签" class="headerlink" title="修改主标题以及标签"></a>修改主标题以及标签</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p &lt;- p+labs(title=&quot;Plot of length\nby dose&quot;, x=&quot;Dose (mg)&quot;, y=&quot;teeth length&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/h0dhdgD0H5.png?imageslim" alt="mark"></p>
<h4 id="修改标签属性：颜色、字体、大小等"><a href="#修改标签属性：颜色、字体、大小等" class="headerlink" title="修改标签属性：颜色、字体、大小等"></a>修改标签属性：颜色、字体、大小等</h4><p>使用theme()修改,element_text()可以具体修改图形参数，element_blank()隐藏标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#修改标签</div><div class="line">p+theme(</div><div class="line">plot.title = element_text(color = &quot;red&quot;, size = 14, face = &quot;bold.italic&quot;),</div><div class="line">axis.title.x = element_text(color=&quot;blue&quot;, size = 14, face = &quot;bold&quot;),</div><div class="line">axis.title.y = element_text(color=&quot;#993333&quot;, size = 14, face = &quot;bold&quot;)</div><div class="line">)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/28K0J6j688.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#隐藏标签</div><div class="line">p+theme(</div><div class="line">  plot.title = element_blank(),</div><div class="line">  axis.title.x = element_blank(),</div><div class="line">  axis.title.y = element_blank()</div><div class="line">)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/0Fe5dGADJi.png?imageslim" alt="mark"></p>
<h4 id="修改图例标题"><a href="#修改图例标题" class="headerlink" title="修改图例标题"></a>修改图例标题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggplot(ToothGrowth, aes(x=dose, y=len, fill=dose))+</div><div class="line">  geom_boxplot()</div><div class="line">p</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/Afhm8Dbaa3.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#修改图例标题</div><div class="line">p+labs(fill=&quot;Dose (mg)&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/dLAe8a3a7K.png?imageslim" alt="mark"></p>
<h3 id="图例位置以及外观"><a href="#图例位置以及外观" class="headerlink" title="图例位置以及外观"></a>图例位置以及外观</h3><h4 id="修改图例位置以及外观"><a href="#修改图例位置以及外观" class="headerlink" title="修改图例位置以及外观"></a>修改图例位置以及外观</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#图例位置在最上面，有五个选项：&quot;left&quot;,&quot;top&quot;, &quot;right&quot;, &quot;bottom&quot;, &quot;none&quot;</div><div class="line">p+theme(legend.position = &quot;top&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/52gIJkL4Fj.png?imageslim" alt="mark"></p>
<p>移除图例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+theme(legend.position = &quot;none&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/akg12aak7l.png?imageslim" alt="mark"></p>
<p>修改图例标题以及标签外观<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">p+theme(</div><div class="line">  legend.title = element_text(color=&quot;blue&quot;),</div><div class="line">  legend.text = element_text(color=&quot;red&quot;)</div><div class="line">)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/7AgB3J5C56.png?imageslim" alt="mark"></p>
<p>修改图例背景<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+theme(legend.background = element_rect(fill=&quot;lightblue&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/jB9CJj91hj.png?imageslim" alt="mark"></p>
<h4 id="利用scale-函数自定义图例"><a href="#利用scale-函数自定义图例" class="headerlink" title="利用scale()函数自定义图例"></a>利用scale()函数自定义图例</h4><p>主要两个函数：</p>
<ul>
<li>scale_x_discrete()：修改图例标签顺序</li>
<li>scale_fill_discrete(): 修改图例标题以及标签</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#修改顺序</div><div class="line">p+scale_x_discrete(limits=c(&quot;2&quot;, &quot;0.5&quot;, &quot;1&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/AbFBaAl2a3.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#修改标题以及标签</div><div class="line">p+scale_fill_discrete(name=&quot;Dose&quot;, label=c(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/AcKFcEl5j4.png?imageslim" alt="mark"></p>
<h3 id="自动-手动修改颜色"><a href="#自动-手动修改颜色" class="headerlink" title="自动/手动修改颜色"></a>自动/手动修改颜色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mtcars$cyl &lt;- as.factor(mtcars$cyl)</div></pre></td></tr></table></figure>
<p>创建图层<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># boxplot</div><div class="line">bp &lt;- ggplot(ToothGrowth, aes(x=dose, y=len))</div><div class="line"># scatter plot</div><div class="line">sp &lt;- ggplot(mtcars, aes(x=wt, y=mpg))</div></pre></td></tr></table></figure></p>
<h4 id="修改填充色、轮廓线颜色"><a href="#修改填充色、轮廓线颜色" class="headerlink" title="修改填充色、轮廓线颜色"></a>修改填充色、轮廓线颜色</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bp+geom_boxplot(fill=&quot;steelblue&quot;, color=&quot;red&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/L09ec6fJdi.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sp+geom_point(color=&quot;darkblue&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/dm838FcDID.png?imageslim" alt="mark"></p>
<h4 id="通过映射分组修改颜色"><a href="#通过映射分组修改颜色" class="headerlink" title="通过映射分组修改颜色"></a>通过映射分组修改颜色</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(bp &lt;- bp+geom_boxplot(aes(fill=dose)))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/39aG8c99CA.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(sp &lt;- sp+geom_point(aes(color=cyl)))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/6lAKJH6FcI.png?imageslim" alt="mark"></p>
<h4 id="手动修改颜色"><a href="#手动修改颜色" class="headerlink" title="手动修改颜色"></a>手动修改颜色</h4><p>主要两个函数：</p>
<ul>
<li>scale_fill_manual(): 填充色</li>
<li>scale_color_manual()：轮廓色，如点线</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Box plot</div><div class="line">bp + scale_fill_manual(values=c(&quot;#999999&quot;, &quot;#E69F00&quot;, &quot;#56B4E9&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/5l8CkJeG3b.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Scatter plot</div><div class="line">sp + scale_color_manual(values=c(&quot;#999999&quot;, &quot;#E69F00&quot;, &quot;#56B4E9&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/mlmKH9mDm0.png?imageslim" alt="mark"></p>
<h4 id="使用RColorBrewer调色板"><a href="#使用RColorBrewer调色板" class="headerlink" title="使用RColorBrewer调色板"></a>使用<strong>RColorBrewer</strong>调色板</h4><ul>
<li>scale_fill_brewer(): 填充色</li>
<li>scale_color_brewer()：轮廓色，如点线</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Box plot</div><div class="line">bp + scale_fill_brewer(palette=&quot;Dark2&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/fdgD6lfCLK.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Scatter plot</div><div class="line">sp + scale_color_brewer(palette=&quot;Dark2&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/I4K7c25E00.png?imageslim" alt="mark"></p>
<p><strong>RColorBrewer</strong>包提供以下调色板</p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170917/2mh2le2j13.png?imageslim" alt=""></p>
<p>还专门有一个灰度调色板：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Box plot</div><div class="line">bp + scale_fill_grey() + theme_classic()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/el4C3gckcd.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Scatter plot</div><div class="line">sp + scale_color_grey() + theme_classic()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/5B3cgiFbH6.png?imageslim" alt="mark"></p>
<h4 id="梯度或连续颜色"><a href="#梯度或连续颜色" class="headerlink" title="梯度或连续颜色"></a>梯度或连续颜色</h4><p>有时我们会将某个连续变量映射给颜色，这时修改这种梯度或连续型颜色就可以使用以下函数：</p>
<ul>
<li>scale_color_gradient(), scale_fill_gradient()：两种颜色的连续梯度</li>
<li>scale_color_gradient2(), scale_fill_gradient2()：不同梯度</li>
<li>scale_color_gradientn(), scale_fill_gradientn()：多种颜色梯度</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Color by qsec values</div><div class="line">sp2&lt;-ggplot(mtcars, aes(x=wt, y=mpg)) +</div><div class="line">  geom_point(aes(color = qsec))</div><div class="line">sp2</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/DfKHLjH6mm.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Change the low and high colors</div><div class="line"># Sequential color scheme</div><div class="line">sp2+scale_color_gradient(low=&quot;blue&quot;, high=&quot;red&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/g4mj6HBA2d.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Diverging color scheme</div><div class="line">mid&lt;-mean(mtcars$qsec)</div><div class="line">sp2+scale_color_gradient2(midpoint=mid, low=&quot;blue&quot;, mid=&quot;white&quot;,</div><div class="line">                          high=&quot;red&quot;, space = &quot;Lab&quot; )</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/jemKdg7ai2.png?imageslim" alt="mark"></p>
<h3 id="点颜色、大小、形状"><a href="#点颜色、大小、形状" class="headerlink" title="点颜色、大小、形状"></a>点颜色、大小、形状</h3><p>R提供的点形状是由数字表示的，具体如下：</p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170917/g7gjFCb420.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Basic scatter plot</div><div class="line">ggplot(mtcars, aes(x=wt, y=mpg)) +</div><div class="line">  geom_point(shape = 18, color = &quot;steelblue&quot;, size = 4)</div></pre></td></tr></table></figure>
<p>  <img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/EG65iAcdaI.png?imageslim" alt="mark"></p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Change point shapes and colors by groups</div><div class="line">ggplot(mtcars, aes(x=wt, y=mpg)) +</div><div class="line">  geom_point(aes(shape = cyl, color = cyl))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/mKAb95CAk6.png?imageslim" alt="mark"></p>
<p>可通过以下方法对点的颜色、大小、形状进行修改：</p>
<ul>
<li>scale_shape_manual() : to change point shapes</li>
<li>scale_color_manual() : to change point colors</li>
<li>scale_size_manual() : to change the size of points</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Change colors and shapes manually</div><div class="line">ggplot(mtcars, aes(x=wt, y=mpg, group=cyl)) +</div><div class="line">  geom_point(aes(shape=cyl, color=cyl), size=2)+</div><div class="line">  scale_shape_manual(values=c(3, 16, 17))+</div><div class="line">  scale_color_manual(values=c(&apos;#999999&apos;,&apos;#E69F00&apos;, &apos;#56B4E9&apos;))+</div><div class="line">  theme(legend.position=&quot;top&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/Cj4aedai9j.png?imageslim" alt="mark"></p>
<h3 id="文本注释-1"><a href="#文本注释-1" class="headerlink" title="文本注释"></a>文本注释</h3><p>对图形进行文本注释有以下方法：</p>
<ul>
<li>geom_text(): 文本注释</li>
<li>geom_label(): 文本注释,类似于geom_text(),只是多了个背景框</li>
<li>annotate(): 文本注释</li>
<li>annotation_custom(): 分面时可以在所有的面板进行文本注释</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">set.seed(1234)</div><div class="line">df &lt;- mtcars[sample(1:nrow(mtcars), 10), ]</div><div class="line">df$cyl &lt;- as.factor(df$cyl)</div></pre></td></tr></table></figure>
<p>散点图注释<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Scatter plot</div><div class="line">sp &lt;- ggplot(df, aes(x=wt, y=mpg))+ geom_point() </div><div class="line"># Add text, change colors by groups</div><div class="line">sp + geom_text(aes(label = rownames(df), color = cyl),</div><div class="line">               size = 3, vjust = -1)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/0EAk2aFEJG.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Add text at a particular coordinate</div><div class="line">sp + geom_text(x = 3, y = 30, label = &quot;Scatter plot&quot;,</div><div class="line">              color=&quot;red&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/8A620eJKDl.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># geom_label()进行注释</div><div class="line">sp + geom_label(aes(label=rownames(df)))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/D6ick1LI9i.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># annotation_custom(),需要用到textGrob()</div><div class="line">library(grid)</div><div class="line"># Create a text</div><div class="line">grob &lt;- grobTree(textGrob(&quot;Scatter plot&quot;, x=0.1,  y=0.95, hjust=0,</div><div class="line">  gp=gpar(col=&quot;red&quot;, fontsize=13, fontface=&quot;italic&quot;)))</div><div class="line"># Plot</div><div class="line">sp + annotation_custom(grob)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/80EK39ebBA.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#分面注释</div><div class="line">sp + annotation_custom(grob)+facet_wrap(~cyl, scales=&quot;free&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/cdfK8keKee.png?imageslim" alt="mark"></p>
<h3 id="线型"><a href="#线型" class="headerlink" title="线型"></a>线型</h3><p>R里的线型有七种：“blank”, “solid”, “dashed”, “dotted”, “dotdash”, “longdash”, “twodash”，对应数字0，1，2，3，4，5，6.</p>
<p>具体如下：</p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170917/2gAL9gilee.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Create some data</div><div class="line">df2 &lt;- data.frame(sex = rep(c(&quot;Female&quot;, &quot;Male&quot;), each=3),</div><div class="line">                  time=c(&quot;breakfeast&quot;, &quot;Lunch&quot;, &quot;Dinner&quot;),</div><div class="line">                  bill=c(10, 30, 15, 13, 40, 17) )</div><div class="line">head(df2)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##      sex       time bill</div><div class="line">## 1 Female breakfeast   10</div><div class="line">## 2 Female      Lunch   30</div><div class="line">## 3 Female     Dinner   15</div><div class="line">## 4   Male breakfeast   13</div><div class="line">## 5   Male      Lunch   40</div><div class="line">## 6   Male     Dinner   17</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Line plot with multiple groups</div><div class="line"># Change line types and colors by groups (sex)</div><div class="line">ggplot(df2, aes(x=time, y=bill, group=sex)) +</div><div class="line">  geom_line(aes(linetype = sex, color = sex))+</div><div class="line">  geom_point(aes(color=sex))+</div><div class="line">  theme(legend.position=&quot;top&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/leH2fj5jf7.png?imageslim" alt="mark"></p>
<p>同点一样，线也可以类似修改：</p>
<ul>
<li>scale_linetype_manual() : to change line types</li>
<li>scale_color_manual() : to change line colors</li>
<li>scale_size_manual() : to change the size of lines</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Change line types, colors and sizes</div><div class="line">ggplot(df2, aes(x=time, y=bill, group=sex)) +</div><div class="line">  geom_line(aes(linetype=sex, color=sex, size=sex))+</div><div class="line">  geom_point()+</div><div class="line">  scale_linetype_manual(values=c(&quot;twodash&quot;, &quot;dotted&quot;))+</div><div class="line">  scale_color_manual(values=c(&apos;#999999&apos;,&apos;#E69F00&apos;))+</div><div class="line">  scale_size_manual(values=c(1, 1.5))+</div><div class="line">  theme(legend.position=&quot;top&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/j9EajEBa9b.png?imageslim" alt="mark"></p>
<h3 id="主题与背景颜色"><a href="#主题与背景颜色" class="headerlink" title="主题与背景颜色"></a>主题与背景颜色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Convert the column dose from numeric to factor variable</div><div class="line">ToothGrowth$dose &lt;- as.factor(ToothGrowth$dose)</div></pre></td></tr></table></figure>
<p>创建箱线图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggplot(ToothGrowth, aes(x=dose, y=len))+</div><div class="line">  geom_boxplot()</div></pre></td></tr></table></figure></p>
<p>修改主题<br><strong>ggplot2</strong>提供了好几种主题，另外有一个扩展包<strong>ggthemes</strong>专门提供了一主题，可以安装利用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">install.packages(&quot;ggthemes&quot;)</div></pre></td></tr></table></figure></p>
<ul>
<li>theme_gray(): gray background color and white grid lines</li>
<li>theme_bw() : white background and gray grid lines</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+theme_gray(base_size = 14)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/hj1eIbED8J.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+theme_bw()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/DIL3A3j3H0.png?imageslim" alt="mark"></p>
<ul>
<li>theme_linedraw : black lines around the plot</li>
<li>theme_light : light gray lines and axis (more attention towards the data)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p + theme_linedraw()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/dllCEkgbJd.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p + theme_light()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/HIE1djID57.png?imageslim" alt="mark"></p>
<ul>
<li>theme_minimal: no background annotations</li>
<li>theme_classic : theme with axis lines and no grid lines</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p + theme_minimal()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/DldJFIi1jG.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p + theme_classic()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/kdb786kHb6.png?imageslim" alt="mark"></p>
<p><strong>ggthemes</strong>提供的主题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+ggthemes::theme_economist()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/mhE0cglig4.png?imageslim" alt="mark"></p>
<h4 id="坐标轴：最大最小值"><a href="#坐标轴：最大最小值" class="headerlink" title="坐标轴：最大最小值"></a>坐标轴：最大最小值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggplot(cars, aes(x=speed, y=dist))+geom_point()</div></pre></td></tr></table></figure>
<p>修改坐标轴范围有以下几种方式：<br>1、不删除数据</p>
<ul>
<li>p+coord_cartesian(xlim=c(5, 20), ylim=c(0, 50)):笛卡尔坐标系，这是设定修改不会删除数据</li>
</ul>
<p>2、会删除部分数据：不在此范围内的数据都会被删除,因此在此基础上添加图层时数据是不完整的</p>
<ul>
<li>p+xlim(5, 20)+ylim(0, 50)</li>
<li>p+scale_x_continuous(limits=c(5, 20))+scale_y_continuous(limits=c(0, 50))</li>
</ul>
<p>3、扩展图形范围：expand()函数，扩大范围</p>
<ul>
<li>p+expand_limits(x=0, y=0):设置截距为0，即过原点</li>
<li>p+expand_limits(x=c(5, 50), y=c(0, 150))：扩大坐标轴范围，这样图形显示就小了</li>
</ul>
<p>下面通过图形演示</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/45E5EkIbmH.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#通过coord_cartesian()函数修改坐标轴范围</div><div class="line">p+coord_cartesian(xlim =c (5, 20), ylim = c(0, 50))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/cbia8kk48E.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#通过xlim()和ylim()函数修改</div><div class="line">p+xlim(5, 20)+ylim(0, 50)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/cbia8kk48E.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#expand limits</div><div class="line">p+expand_limits(x=c(5, 50), y=c(0, 150))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/m44Dlla2Cl.png?imageslim" alt="mark"></p>
<h4 id="坐标变换"><a href="#坐标变换" class="headerlink" title="坐标变换"></a>坐标变换</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggplot(cars, aes(x=speed, y=dist))+geom_point()</div></pre></td></tr></table></figure>
<p>坐标变换有以下几种：</p>
<ul>
<li>p+scale_x_log10(),p+scale_y_log10(): 绘图时对x，y取10的对数</li>
<li>p+scale_x_sqrt(),p+scale_x_sqrt(): 开根号</li>
<li>p+scale_x_reverse(),p+scale_x_reverse()：坐标轴反向</li>
<li>p+coord_trans(x =“log10”, y=“log10”): 同上，可以对坐标轴取对数、根号等</li>
<li>p+scale_x_continuous(trans=”log2”),p+scale_x_continuous(trans=”log2”): 同上，取对数的另外一种方法</li>
</ul>
<p>下面实例演示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/90aD77ldKb.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p+scale_x_continuous(trans = &quot;log2&quot;)+</div><div class="line">  scale_y_continuous(trans = &quot;log2&quot;)</div></pre></td></tr></table></figure>
<p>  <img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/mI8LDhgJE9.png?imageslim" alt="mark"></p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#修改坐标刻度标签</div><div class="line">require(scales)</div><div class="line">p+scale_y_continuous(trans=log2_trans(),</div><div class="line">                     breaks = trans_breaks(&quot;log2&quot;, function(x) 2^x),</div><div class="line">                     labels=trans_format(&quot;log2&quot;, math_format(2^.x)))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/F94egDhaID.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#坐标轴反向</div><div class="line">p+scale_y_reverse()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/L68AbbdeH9.png?imageslim" alt="mark"></p>
<h4 id="坐标刻度：刻度线、标签、顺序等"><a href="#坐标刻度：刻度线、标签、顺序等" class="headerlink" title="坐标刻度：刻度线、标签、顺序等"></a>坐标刻度：刻度线、标签、顺序等</h4><p>更改坐标轴刻度线标签等函数：</p>
<ul>
<li>element_text(face, color, size, angle): 修改文本风格</li>
<li>element_blank(): 隐藏文本</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p &lt;- ggplot(ToothGrowth, aes(x=dose, y=len))+geom_boxplot())</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/22F52FHA0H.png?imageslim" alt="mark"></p>
<p>修改刻度标签等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p+theme(axis.text.x = element_text(face = &quot;bold&quot;, color=&quot;#993333&quot;, size=14, angle = 45),</div><div class="line">        axis.text.y = element_text(face = &quot;bold&quot;, size = 14, color = &quot;blue&quot;, angle = 45))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/7k09a4DhDb.png?imageslim" alt="mark"></p>
<p>移除刻度标签等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">p + theme(</div><div class="line">  axis.text.x = element_blank(), # Remove x axis tick labels</div><div class="line">  axis.text.y = element_blank(), # Remove y axis tick labels</div><div class="line">  axis.ticks = element_blank()) # Remove ticks</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/lmmg7BEa1m.png?imageslim" alt="mark"></p>
<p>当然可以自定义坐标轴了</p>
<ul>
<li><p>离散非连续坐标轴</p>
<ul>
<li>scale_x_discrete(name, breaks, labels, limits)</li>
<li>scale_y_discrete(name, breaks, labels, limits)</li>
</ul>
</li>
<li><p>连续型坐标轴</p>
<ul>
<li>scale_x_conyinuous(name, breaks, labels, limits)</li>
<li>scale_y_continuous(name, breaks, labels, limits)</li>
</ul>
</li>
</ul>
<p>详细情况如下：</p>
<ul>
<li>name: x,y轴的标题</li>
<li>breaks: 刻度，分成几段</li>
<li>labels：坐标轴刻度线标签</li>
<li>limits: 坐标轴范围</li>
</ul>
<p>其中scale_xx()函数可以修改坐标轴的如下参数：</p>
<ul>
<li>坐标轴标题</li>
<li>坐标轴范围</li>
<li>刻度标签位置</li>
<li>手动设置刻度标签</li>
</ul>
<p>具体演示：</p>
<ul>
<li>离散坐标轴</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#修改标签以及顺序</div><div class="line">p+scale_x_discrete(name=&quot;Dose (mg)&quot;, limits=c(&quot;2&quot;, &quot;1&quot;, &quot;0.5&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/EFbiHLHg4H.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#修改刻度标签</div><div class="line">p+scale_x_discrete(breaks=c(&quot;0.5&quot;, &quot;1&quot;, &quot;2&quot;),labels=c(&quot;Dose 0.5&quot;, &quot;Dose 1&quot;, &quot;Dose 2&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/7b8a55d8e6.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#修改要显示的项</div><div class="line">p+scale_x_discrete(limits=c(&quot;0.5&quot;, &quot;2&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/KEBgH9eL6A.png?imageslim" alt="mark"></p>
<ul>
<li>连续型坐标轴<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#散点图</div><div class="line">(sp &lt;- ggplot(cars, aes(x=speed, y=dist))+geom_point())</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/6mAgGel8FI.png?imageslim" alt="mark"></p>
<p>修改坐标轴标签以及范围<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">(sp &lt;- sp+scale_x_continuous(name = &quot;Speed of cars&quot;, limits = c(0, 30))+</div><div class="line">  scale_y_continuous(name = &quot;Stopping distance&quot;, limits = c(0, 150)))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/1Gfa1ki6jd.png?imageslim" alt="mark"></p>
<p>更改y轴刻度，间隔50<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sp+scale_y_continuous(breaks = seq(0, 150, 50))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/67LdJdeHJJ.png?imageslim" alt="mark"></p>
<p>修改y轴标签为百分数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">require(scales)</div><div class="line">sp+scale_y_continuous(labels = percent)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/lKBLj42Fmb.png?imageslim" alt="mark"></p>
<h3 id="添加直线：水平线、竖直线、回归线"><a href="#添加直线：水平线、竖直线、回归线" class="headerlink" title="添加直线：水平线、竖直线、回归线"></a>添加直线：水平线、竖直线、回归线</h3><p><strong>ggplot2</strong>提供以下方法为图形添加直线：</p>
<ul>
<li>geom_hline(yintercept, linetype, color, size): 添加水平线</li>
<li>geom_vline(xintercept, linetype, color, size)：添加竖直线</li>
<li>geom_abline(intercept, slope, linetype, color, size)：添加回归线</li>
<li>geom_segment()：添加线段</li>
</ul>
<p>实例演示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sp &lt;- ggplot(data=mtcars, aes(x=wt, y=mpg))+ geom_point()</div></pre></td></tr></table></figure></p>
<p>添加直线：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#在y=20处添加一水平线，并设置颜色等</div><div class="line">sp+geom_hline(yintercept = 20, linetype=&quot;dashed&quot;, color=&apos;red&apos;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/klELKdJ7h2.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#在x=3处添加一竖直线，并设置颜色等</div><div class="line">sp+geom_vline(xintercept = 3, color=&quot;blue&quot;, size=1.5)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/5cIFlhkK0E.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#添加回归线</div><div class="line">sp+geom_abline(intercept = 37, slope = -5, color=&quot;blue&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/Jci00jI819.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#添加水平线段</div><div class="line">sp+geom_segment(aes(x=2, y=15, xend=3, yend=15), color=&quot;red&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/1gAEcm93JF.png?imageslim" alt="mark"></p>
<h3 id="图形旋转：旋转、反向"><a href="#图形旋转：旋转、反向" class="headerlink" title="图形旋转：旋转、反向"></a>图形旋转：旋转、反向</h3><p>主要是下面两个函数：</p>
<ul>
<li>coord_flip()：创建水平方向图</li>
<li>scale_x_reverse(),scale_y_reverse()：坐标轴反向</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">set.seed(1234)</div><div class="line">(hp &lt;- qplot(x=rnorm(200), geom = &quot;histogram&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/CgC7HHLid5.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#水平柱形图</div><div class="line">hp+coord_flip()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/hD4HaiCDJI.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#y轴反向</div><div class="line">hp+scale_y_reverse()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/HCFl1ha75C.png?imageslim" alt="mark"></p>
<h3 id="分面"><a href="#分面" class="headerlink" title="分面"></a>分面</h3><p>分面就是根据一个或多个变量将图形分为几个图形以便于可视化，主要有两个方法实现：</p>
<ul>
<li>facet_grid()</li>
<li>facet_wrap()</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ToothGrowth$dose &lt;- as.factor(ToothGrowth$dose)</div><div class="line">(p &lt;- ggplot(ToothGrowth, aes(x=dose, y=len, group=dose))+</div><div class="line">  geom_boxplot(aes(fill=dose)))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/3AfigK2AIl.png?imageslim" alt="mark"></p>
<p>针对上面图形进行分面：</p>
<ul>
<li>p+facet_grid(supp~.): 按变量supp进行竖直方向分面</li>
<li>p+facet_grid(.~supp): 按变量supp进行水平方向分面</li>
<li>p+facet_wrap(dose~supp)：按双变量supp和dose进行水平竖直方向分面</li>
<li>p+facet_wrap(~fl): 将分成的面板边靠边置于一个矩形框内</li>
</ul>
<p>1、按一个离散变量进行分面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#竖直方向进行分面</div><div class="line">p+facet_grid(supp~.)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/e5hdDE7FE0.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#水平方向分面</div><div class="line">p+facet_grid(.~supp)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/F3BgFeHc3C.png?imageslim" alt="mark"></p>
<p>2、按两个离散变量进行分面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#行按dose分面，列按supp分面</div><div class="line">p+facet_grid(dose~supp)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/9112kbBA9g.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#行按supp，列按dose分面</div><div class="line">p+facet_grid(supp~dose)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/bjm9fk0k79.png?imageslim" alt="mark"></p>
<p>从上面图形可以看出，每个面板的坐标轴比例都是一样的，我们可以通过设置参数scales来控制坐标轴比例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p + facet_grid(dose ~ supp, scales=&apos;free&apos;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/65F4K0ajaI.png?imageslim" alt="mark"></p>
<h3 id="位置调整"><a href="#位置调整" class="headerlink" title="位置调整"></a>位置调整</h3><p>很多图形需要我们调整位置，比如直方图时，由堆叠式、百分式、分离式等，具体的要通过实例说明<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggplot(mpg, aes(fl, fill=drv))</div><div class="line">#直方图边靠边排列，参数position=&quot;dodge&quot;</div><div class="line">p+geom_bar(position = &quot;dodge&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/13Cf1kA3Jc.png?imageslim" alt="mark"></p>
<p>堆叠式position=”stack”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+geom_bar(position = &quot;stack&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/J2bH42IjHA.png?imageslim" alt="mark"></p>
<p>position=”fill”类似玉堆叠图，只不过按百分比排列，所有柱子都被标准化成同样高度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+geom_bar(position = &quot;fill&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/1iblgciCm8.png?imageslim" alt="mark"></p>
<p>position=”jitter”,（主要适用于散点图）增加扰动，避免重叠，前面讲的geom_jitter()就是来源于此<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(mpg, aes(cty, hwy))+</div><div class="line">  geom_point(position = &quot;jitter&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/01D9L4A8Ld.png?imageslim" alt="mark"></p>
<p>上面几个函数有两个重要的参数：heigth、weight。</p>
<ul>
<li>position_dodge(width, height)</li>
<li>position_fill(width, height)</li>
<li>position_stack(width, height)</li>
<li>position_jitter(width, height)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+geom_bar(position = position_dodge(width = 1))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/DaHcfl9dId.png?imageslim" alt="mark"></p>
<h3 id="坐标系"><a href="#坐标系" class="headerlink" title="坐标系"></a>坐标系</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggplot(mpg, aes(fl))+geom_bar()</div></pre></td></tr></table></figure>
<p><strong>ggplot2</strong>中的坐标系主要有：</p>
<ul>
<li>p+coord_cartesian(xlim=NULL, ylim=NULL)：笛卡尔坐标系(默认)</li>
<li>p+coord_fixed(ratio=1, clim=NULL, ylim=NULL)：固定了坐标轴比例的笛卡尔坐标系。默认比例为1</li>
<li>p+coord_flip(…)：旋转笛卡尔坐标系</li>
<li>p+coord_polar(theta=”x”, start=0, direction=1)：极坐标系</li>
<li>p+coord_trans(x,y,limx,limy)：变换笛卡尔坐标系</li>
<li>coord_map()：地图坐标系</li>
</ul>
<p>各个坐标系参数如下：<br>1、笛卡尔坐标系：coord_cartesian(), coord_fixed() and coord_flip()</p>
<ul>
<li>xlim：x轴范围</li>
<li>ylim：y轴范围</li>
<li>ratio：y/x</li>
<li>…：其他参数</li>
</ul>
<p>2、极坐标系：coord_polar()</p>
<ul>
<li>theta：外延坐标，x或y</li>
<li>start：坐标开始的位置，默认为12点钟</li>
<li>direction：方向：顺时针(1),逆时针(-1)</li>
</ul>
<p>3、变换坐标系：coord_trans()</p>
<ul>
<li>x,y：变换的坐标轴</li>
<li>limx,limy：坐标轴范围</li>
</ul>
<p>实例演示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+coord_cartesian(ylim = c(0,200))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/KE5JcFmdhl.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+coord_fixed(ratio = 1/50)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/LHeG17JljH.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+coord_flip()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/8AK62ii9Ib.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+coord_polar(theta = &quot;x&quot;, direction = 1)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/HBF135cLAA.png?imageslim" alt="mark"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+coord_trans(y=&quot;sqrt&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/DhI4Ha1m91.png?imageslim" alt="mark"></p>
<h2 id="ggplot2包资料扩展：包、函数"><a href="#ggplot2包资料扩展：包、函数" class="headerlink" title="ggplot2包资料扩展：包、函数"></a><strong>ggplot2</strong>包资料扩展：包、函数</h2><ul>
<li><strong>ggplot2</strong>有一个官方网站，里面有十分详细的说明，<a href="http://ggplot2.tidyverse.org/reference/" target="_blank" rel="external">点击这里直达</a></li>
<li><strong>ggplot2</strong>还有十分多的扩展包，<a href="https://www.ggplot2-exts.org/" target="_blank" rel="external">点击这里直达</a></li>
</ul>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line"></div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-pc-linux-gnu (64-bit)</div><div class="line">## Running under: Ubuntu 16.04.3 LTS</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0</div><div class="line">## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0</div><div class="line">## </div><div class="line">## locale:</div><div class="line">##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              </div><div class="line">##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    </div><div class="line">##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   </div><div class="line">##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 </div><div class="line">##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            </div><div class="line">## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] grid      stats     graphics  grDevices utils     datasets  methods  </div><div class="line">## [8] base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] scales_0.5.0   bindrcpp_0.2   dplyr_0.7.3    reshape2_1.4.2</div><div class="line">## [5] maps_3.2.0     hexbin_1.27.1  plyr_1.8.4     ggplot2_2.2.1 </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.12        bindr_0.1           compiler_3.4.1     </div><div class="line">##  [4] RColorBrewer_1.1-2  base64enc_0.1-3     tools_3.4.1        </div><div class="line">##  [7] rpart_4.1-11        digest_0.6.12       checkmate_1.8.3    </div><div class="line">## [10] htmlTable_1.9       evaluate_0.10.1     tibble_1.3.4       </div><div class="line">## [13] gtable_0.2.0        lattice_0.20-35     pkgconfig_2.0.1    </div><div class="line">## [16] rlang_0.1.2         Matrix_1.2-11       yaml_2.1.14        </div><div class="line">## [19] gridExtra_2.3       stringr_1.2.0       knitr_1.17         </div><div class="line">## [22] cluster_2.0.6       htmlwidgets_0.9     rprojroot_1.2      </div><div class="line">## [25] nnet_7.3-12         glue_1.1.1          data.table_1.10.4  </div><div class="line">## [28] R6_2.2.2            survival_2.41-3     foreign_0.8-69     </div><div class="line">## [31] rmarkdown_1.6       latticeExtra_0.6-28 Formula_1.2-2      </div><div class="line">## [34] magrittr_1.5        ggthemes_3.4.0      backports_1.1.0    </div><div class="line">## [37] Hmisc_4.0-3         htmltools_0.3.6     MASS_7.3-47        </div><div class="line">## [40] splines_3.4.1       assertthat_0.2.0    colorspace_1.3-2   </div><div class="line">## [43] labeling_0.3        stringi_1.1.5       acepack_1.4.1      </div><div class="line">## [46] lazyeval_0.2.0      munsell_0.4.3</div></pre></td></tr></table></figure>
<hr>
<p>联系方式：</p>
<hr>
<p>wechat: yt056410</p>
<p>Email: tyan@zju.edu.cn</p>
<p>QQ: 1051927088</p>
<p>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></p>
<p>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></p>
<p>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<p>个人简介：</p>
<hr>
<p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）</p>
<p>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170919/emJBf4A306.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本文内容基本是来源于&lt;a href=&quot;http://www.sthda.com/english/wiki/be-awesome-in-ggplot2-a-practical-guide-to-be-highly-effective-r-software-and-data-visualization&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;STHDA&lt;/a&gt;，这是一份十分详细的&lt;strong&gt;ggplot2&lt;/strong&gt;使用指南，因此我将其翻译成中文，一是有助于我自己学习理解，另外其他R语言爱好者或者可视化爱好者可以用来学习。翻译过程肯定不能十全十美，各位读者有建议或改进的话，十分欢迎发&lt;strong&gt;Email&lt;/strong&gt;(tyan@zju.edu.cn)给我。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggplot2" scheme="https://ytlogos.github.io/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>tidyverse实践之绘制简单地图</title>
    <link href="https://ytlogos.github.io/2017/09/16/tidyverse%E5%AE%9E%E8%B7%B5%E4%B9%8B%E7%BB%98%E5%88%B6%E7%AE%80%E5%8D%95%E5%9C%B0%E5%9B%BE/"/>
    <id>https://ytlogos.github.io/2017/09/16/tidyverse实践之绘制简单地图/</id>
    <published>2017-09-16T02:47:05.000Z</published>
    <updated>2017-09-19T04:22:05.904Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/Big70i5b36.jpeg?imageslim" alt=""></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>tidyverse</strong>是一个数据科学的综合包，里面包含了数据分析一系列流程涉及的包，今天主要利用它绘制地图。这并不是它的强项，绘制地图<strong>leaflet</strong>才是利器，本文只是<strong>tidyverse</strong>的一个小练习。<br>目前该包支持有限的几个国家，比如美国，新西兰、意大利等，当然世界地图是支持的。</p>
<a id="more"></a>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">library(tidyverse)</div><div class="line">map_data(&quot;usa&quot;)%&gt;%</div><div class="line">  ggplot(aes(x=long, y=lat, group=group))+</div><div class="line">  geom_polygon()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/i32kBBc1DA.png?imageslim" alt=""></p>
<p>可以绘制美国的不同州，就行我国的省份一样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">map_data(&quot;state&quot;)%&gt;%</div><div class="line">  ggplot(aes(x=long, y=lat, group=group))+</div><div class="line">  geom_polygon(color=&quot;white&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/5haC8L95Fd.png?imageslim" alt=""></p>
<p>另外我们可以只单独绘制几个state<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">map_data(&quot;state&quot;)%&gt;%</div><div class="line">  filter(region%in%c(&quot;california&quot;,&quot;nevada&quot;,&quot;oregon&quot;,&quot;washington&quot;))%&gt;%</div><div class="line">  ggplot(aes(x=long, y=lat, group=group))+</div><div class="line">  geom_polygon(color=&quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/md9HG40mi8.png?imageslim" alt=""></p>
<p>再绘制细一点的地图，相当于市、县等<br><figure class="highlight plain"><figcaption><span>fig.height=6, fig.width=4&#125;</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">map_data(&quot;county&quot;)%&gt;%</div><div class="line">  filter(region %in% c(&quot;california&quot;,&quot;nevada&quot;,&quot;oregon&quot;,&quot;washington&quot;))%&gt;%</div><div class="line">  ggplot(aes(x=long, y=lat, group=group))+</div><div class="line">  geom_polygon(color=&quot;white&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/iEIjLcgIaK.png?imageslim" alt=""></p>
<h2 id="世界地图"><a href="#世界地图" class="headerlink" title="世界地图"></a>世界地图</h2><p>很简单，只需将map_data()里的usa换成world就行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">map_data(&quot;world&quot;)%&gt;%ggplot(aes(x=long, y=lat, group=group))+</div><div class="line">  geom_polygon(color=&quot;white&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/cK0LAl2cmd.png?imageslim" alt=""></p>
<p>在世界地图中标出中国<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">map_data(&quot;world&quot;)%&gt;%</div><div class="line">  filter(region==&quot;China&quot;)%&gt;%</div><div class="line">  ggplot(aes(x=long, y=lat, group=group))+</div><div class="line">  geom_polygon(fill=&quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/f0f3fBgG7F.png?imageslim" alt=""></p>
<p>美帝用心险恶，不承认台湾属于中国,自己添上去就是了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">map_data(&quot;world&quot;)%&gt;%</div><div class="line">  filter(region==c(&quot;China&quot;,&quot;Taiwan&quot;))%&gt;%</div><div class="line">  ggplot(aes(x=long, y=lat, group=group))+</div><div class="line">  geom_polygon(fill=&quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/BDd5BLBmaa.png?imageslim" alt=""></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 15063)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">##  [1] bindrcpp_0.2         maps_3.2.0           dplyr_0.7.2         </div><div class="line">##  [4] purrr_0.2.3          readr_1.1.1          tidyr_0.7.1         </div><div class="line">##  [7] tibble_1.3.4         ggplot2_2.2.1        tidyverse_1.1.1     </div><div class="line">## [10] RevoUtilsMath_10.0.0</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.12     cellranger_1.1.0 compiler_3.4.1   plyr_1.8.4      </div><div class="line">##  [5] bindr_0.1        forcats_0.2.0    tools_3.4.1      digest_0.6.12   </div><div class="line">##  [9] lubridate_1.6.0  jsonlite_1.5     evaluate_0.10.1  nlme_3.1-131    </div><div class="line">## [13] gtable_0.2.0     lattice_0.20-35  pkgconfig_2.0.1  rlang_0.1.2     </div><div class="line">## [17] psych_1.7.8      yaml_2.1.14      parallel_3.4.1   haven_1.1.0     </div><div class="line">## [21] xml2_1.1.1       httr_1.3.1       stringr_1.2.0    knitr_1.17      </div><div class="line">## [25] hms_0.3          RevoUtils_10.0.5 rprojroot_1.2    grid_3.4.1      </div><div class="line">## [29] glue_1.1.1       R6_2.2.2         readxl_1.0.0     foreign_0.8-69  </div><div class="line">## [33] rmarkdown_1.6    modelr_0.1.1     reshape2_1.4.2   magrittr_1.5    </div><div class="line">## [37] backports_1.1.0  scales_0.5.0     htmltools_0.3.6  rvest_0.3.2     </div><div class="line">## [41] assertthat_0.2.0 mnormt_1.5-5     colorspace_1.3-2 labeling_0.3    </div><div class="line">## [45] stringi_1.1.5    lazyeval_0.2.0   munsell_0.4.3    broom_0.4.2</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170916/Big70i5b36.jpeg?imageslim&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;tidyverse&lt;/strong&gt;是一个数据科学的综合包，里面包含了数据分析一系列流程涉及的包，今天主要利用它绘制地图。这并不是它的强项，绘制地图&lt;strong&gt;leaflet&lt;/strong&gt;才是利器，本文只是&lt;strong&gt;tidyverse&lt;/strong&gt;的一个小练习。&lt;br&gt;目前该包支持有限的几个国家，比如美国，新西兰、意大利等，当然世界地图是支持的。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="tidyverse" scheme="https://ytlogos.github.io/tags/tidyverse/"/>
    
      <category term="map" scheme="https://ytlogos.github.io/tags/map/"/>
    
  </entry>
  
  <entry>
    <title>创建及自定义ggplot分面图形参数</title>
    <link href="https://ytlogos.github.io/2017/09/14/%E5%88%9B%E5%BB%BA%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89ggplot%E5%88%86%E9%9D%A2%E5%9B%BE%E5%BD%A2%E5%8F%82%E6%95%B0/"/>
    <id>https://ytlogos.github.io/2017/09/14/创建及自定义ggplot分面图形参数/</id>
    <published>2017-09-13T23:47:05.000Z</published>
    <updated>2017-09-19T00:39:01.453Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://os3hnmzbp.bkt.clouddn.com/5.png" alt=""></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>ggplot2</strong>有一个十分重要的功能就是分面，而今天要讲得R包<strong>ggpubr</strong>中也有一个函数facet()专门用来进行分面操作。</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">install.packages(&quot;ggpubr&quot;)</div><div class="line">#or</div><div class="line">if(!require(devtools)) install.packages(&quot;devtools&quot;)</div><div class="line">devtools::install_github(&quot;kassambara/ggpubr&quot;)</div></pre></td></tr></table></figure>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">library(ggpubr)</div><div class="line">df &lt;- ToothGrowth</div><div class="line">df$dose &lt;- as.factor(df$dose)</div><div class="line">head(df)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##    len supp dose</div><div class="line">## 1  4.2   VC  0.5</div><div class="line">## 2 11.5   VC  0.5</div><div class="line">## 3  7.3   VC  0.5</div><div class="line">## 4  5.8   VC  0.5</div><div class="line">## 5  6.4   VC  0.5</div><div class="line">## 6 10.0   VC  0.5</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggdensity(df, x=&quot;len&quot;, fill = &quot;dose&quot;, palette = &quot;jco&quot;, ggtheme = theme_light(), legend=&quot;top&quot;)</div><div class="line">p</div></pre></td></tr></table></figure>
<p><img src="http://os3hnmzbp.bkt.clouddn.com/1.png" alt=""></p>
<h2 id="分面"><a href="#分面" class="headerlink" title="分面"></a>分面</h2><h3 id="水平方向分面"><a href="#水平方向分面" class="headerlink" title="水平方向分面"></a>水平方向分面</h3><p>按照变量<code>supp</code>进行水平方向的分面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">facet(p, facet.by = &quot;supp&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://os3hnmzbp.bkt.clouddn.com/2.png" alt=""></p>
<h3 id="竖直方向分面"><a href="#竖直方向分面" class="headerlink" title="竖直方向分面"></a>竖直方向分面</h3><p>按照变量<code>supp</code>进行竖直方向的分面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">facet(p, facet.by = &quot;supp&quot;, ncol = 1)</div></pre></td></tr></table></figure></p>
<p><img src="http://os3hnmzbp.bkt.clouddn.com/3.png" alt=""></p>
<h3 id="双变量分面"><a href="#双变量分面" class="headerlink" title="双变量分面"></a>双变量分面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#divide with &quot;supp&quot; vertical, &quot;dose&quot; horizontal</div><div class="line">facet(p, facet.by = c(&quot;supp&quot;, &quot;dose&quot;), short.panel.labs = FALSE)</div></pre></td></tr></table></figure>
<p><img src="http://os3hnmzbp.bkt.clouddn.com/4.png" alt=""></p>
<h2 id="修改面板外观"><a href="#修改面板外观" class="headerlink" title="修改面板外观"></a>修改面板外观</h2><p>主要有以下参数进行修改：</p>
<ul>
<li>short.panel.label:默认为TRUE，此时变量名不会显示</li>
<li>panel.label: 通过自定义label来设置面板label,是一个list</li>
<li>panel.labs.background: 控制面板背景，里面参数设置很多</li>
<li>panel.labs.font: 设置字体</li>
</ul>
<p>下面演示一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#divide with &quot;supp&quot; vertical, &quot;sode&quot; horizontal</div><div class="line">facet(p, facet.by = c(&quot;supp&quot;, &quot;dose&quot;),</div><div class="line">      panel.labs = list(</div><div class="line">        supp=c(&quot;Orange Juice&quot;, &quot;Vitamin C&quot;),</div><div class="line">        dose=c(&quot;D0.5&quot;, &quot;D1&quot;, &quot;D2&quot;)),</div><div class="line">      panel.labs.background = list(</div><div class="line">        color=&quot;steelblue&quot;, </div><div class="line">        fill=&quot;steelblue&quot;,</div><div class="line">        size=0.5),</div><div class="line">      panel.labs.font = list(color=&quot;white&quot;),</div><div class="line">      panel.labs.font.x = list(angle=45, color=&quot;white&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://os3hnmzbp.bkt.clouddn.com/5.png" alt=""></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-pc-linux-gnu (64-bit)</div><div class="line">## Running under: Ubuntu 16.04.3 LTS</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0</div><div class="line">## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0</div><div class="line">## </div><div class="line">## locale:</div><div class="line">##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              </div><div class="line">##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    </div><div class="line">##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   </div><div class="line">##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 </div><div class="line">##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            </div><div class="line">## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] ggpubr_0.1.5  magrittr_1.5  ggplot2_2.2.1</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.12     bindr_0.1        knitr_1.17       munsell_0.4.3   </div><div class="line">##  [5] colorspace_1.3-2 R6_2.2.2         rlang_0.1.2      stringr_1.2.0   </div><div class="line">##  [9] plyr_1.8.4       dplyr_0.7.3      tools_3.4.1      grid_3.4.1      </div><div class="line">## [13] gtable_0.2.0     htmltools_0.3.6  yaml_2.1.14      lazyeval_0.2.0  </div><div class="line">## [17] rprojroot_1.2    digest_0.6.12    assertthat_0.2.0 tibble_1.3.4    </div><div class="line">## [21] bindrcpp_0.2     ggsci_2.7        reshape2_1.4.2   purrr_0.2.3     </div><div class="line">## [25] glue_1.1.1       evaluate_0.10.1  rmarkdown_1.6    labeling_0.3    </div><div class="line">## [29] stringi_1.1.5    compiler_3.4.1   scales_0.5.0     backports_1.1.0 </div><div class="line">## [33] pkgconfig_2.0.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://os3hnmzbp.bkt.clouddn.com/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;有一个十分重要的功能就是分面，而今天要讲得R包&lt;strong&gt;ggpubr&lt;/strong&gt;中也有一个函数facet()专门用来进行分面操作。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggpubr" scheme="https://ytlogos.github.io/tags/ggpubr/"/>
    
  </entry>
  
  <entry>
    <title>ggpubr包学习笔记之轻松修改图形参数</title>
    <link href="https://ytlogos.github.io/2017/09/13/ggpubr%E5%8C%85%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%BD%BB%E6%9D%BE%E4%BF%AE%E6%94%B9%E5%9B%BE%E5%BD%A2%E5%8F%82%E6%95%B0/"/>
    <id>https://ytlogos.github.io/2017/09/13/ggpubr包学习笔记之轻松修改图形参数/</id>
    <published>2017-09-13T05:00:55.000Z</published>
    <updated>2017-09-19T00:39:01.449Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/dm80Clb7Eh.png?imageslim" alt="mark"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>越学习包<strong>ggpubr</strong>越感觉其功能强大，本文主要讲解一下如何修改图形参数，我们知道<strong>ggplot2</strong>有着十分强大的绘图功能，但是其参数之复杂足以让人望而却步。<strong>ggpubr</strong>提供的函数ggpar()可以十分轻松地让我们修改图形参数，并且可以无缝对接到ggplot图形中。ggpar()可以修改以下图形参数：<br><a id="more"></a></p>
<ul>
<li>图形标题，包括坐标轴标题以及图例标题</li>
<li>图例的位置以及外观</li>
<li>颜色必需的能修改</li>
<li>坐标轴limits</li>
<li>坐标转换</li>
<li>坐标刻度</li>
<li>主题</li>
<li>翻转等</li>
</ul>
<h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#two ways to isntall the ggpubr package</div><div class="line">install.packages(&quot;ggpubr&quot;)</div><div class="line">#install the packages from the Github</div><div class="line">devtools::install_github(&quot;kassambara/ggpubr&quot;)</div></pre></td></tr></table></figure>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">library(ggpubr)#load ggpubr</div><div class="line">#basic plots</div><div class="line">p &lt;- ggboxplot(ToothGrowth, x=&quot;dose&quot;, y=&quot;len&quot;, color=&quot;dose&quot;)</div><div class="line">p</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/7hKdEb1ehB.png?imageslim" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#add grids by the function grids()</div><div class="line">p+grids(linetype=&quot;dashed&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/f77I1FIlbB.png?imageslim" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#add panel borders lines by the function border()</div><div class="line">p+border(&quot;black&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/cGa2dj6AB8.png?imageslim" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#change background color</div><div class="line">p+bgcolor(&quot;#BFD5E3&quot;)+border(&quot;#BFD5E3&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/jAIc0AjBi8.png?imageslim" alt=""></p>
<h2 id="修改标题以及坐标轴标签"><a href="#修改标题以及坐标轴标签" class="headerlink" title="修改标题以及坐标轴标签"></a>修改标题以及坐标轴标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">p2 &lt;- ggpar(p,</div><div class="line">            title = &quot;Box plot created with ggpubr&quot;,</div><div class="line">            subtitle = &quot;Length by dose&quot;,</div><div class="line">            caption = &quot;Source: ggpubr&quot;,</div><div class="line">            xlab = &quot;Dose (mg)&quot;,</div><div class="line">            ylab = &quot;Teeth length&quot;,</div><div class="line">            legend.title = &quot;Dose (mg)&quot;)</div><div class="line">p2</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/5K7D23dIcC.png?imageslim" alt="mark"></p>
<h2 id="修改标题以及标签的字体"><a href="#修改标题以及标签的字体" class="headerlink" title="修改标题以及标签的字体"></a>修改标题以及标签的字体</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ggpar(p2, </div><div class="line">      font.title = c(14, &quot;bold.italic&quot;, &quot;red&quot;),</div><div class="line">      font.subtitle = c(10, &quot;orange&quot;),</div><div class="line">      font.caption = c(10, &quot;orange&quot;),</div><div class="line">      font.x = c(14, &quot;blue&quot;),</div><div class="line">      font.y = c(14, &quot;#993333&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/dm80Clb7Eh.png?imageslim" alt="mark"></p>
<p>当然也可以直接用函数font()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">p2+</div><div class="line">  font(&quot;title&quot;, size = 14, color = &quot;red&quot;, face = &quot;bold.italic&quot;)+</div><div class="line">  font(&quot;subtitle&quot;, size = 10, color = &quot;orange&quot;)+</div><div class="line">  font(&quot;caption&quot;, size = 10, color = &quot;orange&quot;)+</div><div class="line">  font(&quot;xlab&quot;, size = 12, color = &quot;blue&quot;)+</div><div class="line">  font(&quot;ylab&quot;, size = 12, color = &quot;#993333&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/6EHIKCbjdB.png?imageslim" alt="mark"></p>
<p>从上面可以看出我们可以一次性完成添加标题以及修改字体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggpar(p,</div><div class="line">      title = &quot;Plot of length \n by dose&quot;,</div><div class="line">      xlab = &quot;Dose (mg)&quot;,</div><div class="line">      legend.title = &quot;Dose (mg)&quot;,</div><div class="line">      font.title = c(14, &quot;bold.italic&quot;, &quot;red&quot;),</div><div class="line">      font.x = c(14, &quot;bold&quot;, &quot;#2E9FDF&quot;),</div><div class="line">      font.y = c(14, &quot;bold&quot;, &quot;#E7B800&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/K5Hh142DDJ.png?imageslim" alt="mark"></p>
<h2 id="修改图例位置与外观"><a href="#修改图例位置与外观" class="headerlink" title="修改图例位置与外观"></a>修改图例位置与外观</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggpar(p,</div><div class="line">      legend = &quot;right&quot;, legend.title = &quot;Dose (mg)&quot;)+</div><div class="line">  font(&quot;legend.title&quot;, color=&quot;blue&quot;, face = &quot;bold&quot;)+</div><div class="line">  font(&quot;legend.text&quot;, color = &quot;red&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/66Fl04A1Eg.png?imageslim" alt="mark"></p>
<h2 id="颜色修改"><a href="#颜色修改" class="headerlink" title="颜色修改"></a>颜色修改</h2><p>ggpar()中有一个参数palette，即调色板，除了可以我们自定义颜色外，还可以调用RColorBrewer中的调色板以及包<strong>ggsci</strong>中的专门用于学术杂志的配色。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#use custom color palette</div><div class="line">ggpar(p, palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/j04LBcgCFf.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#use the RColorBrewer palette</div><div class="line">ggpar(p, palette = &quot;Dark2&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/gg16gmeE3D.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggpar(p, palette = &quot;grey&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/3h1K0f5aaK.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#use the ggsci palette</div><div class="line">ggpar(p, palette = &quot;npg&quot;)#nature</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/13fcD9GfDC.png?imageslim" alt="mark"></p>
<p>当然也可以直接用<strong>ggpubr</strong>中的函数color_palette()以及fill_palette()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#jco color palette</div><div class="line">p+color_palette(&quot;jco&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/aD2IK0b75D.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#custom color</div><div class="line">p+color_palette(c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/Jj9BG7J24h.png?imageslim" alt="mark"></p>
<h2 id="颜色梯度"><a href="#颜色梯度" class="headerlink" title="颜色梯度"></a>颜色梯度</h2><p><strong>ggpubr</strong>提供了两个函数用来处理颜色梯度：gradient_color()和gradient_fill()<br>通过一个例子来看如何运作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#first create a scatter plot</div><div class="line">p3 &lt;- ggscatter(mtcars, x=&quot;wt&quot;, y=&quot;mpg&quot;, color=&quot;mpg&quot;, size = 2)</div><div class="line">#change the gradient color</div><div class="line">#use one custom color</div><div class="line">p3+gradient_color(&quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/ah3ed5b1Ai.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#use two colors</div><div class="line">p3+gradient_color(c(&quot;blue&quot;, &quot;red&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/1H7KBAdKLd.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#three colors</div><div class="line">p3+gradient_color(c(&quot;blue&quot;, &quot;white&quot;, &quot;red&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/kCaHdmcG6i.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#use the RColorBrewer palette</div><div class="line">p3+gradient_color(&quot;RdYlBu&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/FHKlGj4H8F.png?imageslim" alt="mark"><br>gradient_fill()用法也一样，不过是填充，这里就不演示了。</p>
<h2 id="修改坐标轴limits、scales"><a href="#修改坐标轴limits、scales" class="headerlink" title="修改坐标轴limits、scales"></a>修改坐标轴limits、scales</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#change y axis limits</div><div class="line">ggpar(p, ylim = c(0, 50))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/CFamb4cglg.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#change y axis cale to log2</div><div class="line">ggpar(p, yscale = &quot;log2&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/Deh1KddGKj.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#format  axis scale</div><div class="line">ggpar(p, yscale = &quot;log2&quot;, format.scale = TRUE)#format.scale=TRUE说明y轴刻度也会scale</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/IgF4D3LFiL.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#也可以直接用yscale()</div><div class="line">p+yscale(&quot;log2&quot;, .format = TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/lfk8D0i00d.png?imageslim" alt="mark"></p>
<h2 id="自定义坐标轴标签及刻度"><a href="#自定义坐标轴标签及刻度" class="headerlink" title="自定义坐标轴标签及刻度"></a>自定义坐标轴标签及刻度</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#change the font of x and y axis texts</div><div class="line">#rotate x and y texts</div><div class="line">p+</div><div class="line">  font(&quot;xy.text&quot;, size = 12, color = &quot;blue&quot;, face = &quot;bold&quot;)+</div><div class="line">  rotate_x_text(45)+</div><div class="line">  rotate_y_text(45)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/DhAlF966Cb.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#remove ticks and axis texts</div><div class="line">p+rremove(&quot;ticks&quot;)+</div><div class="line">  rremove(&quot;axis.text&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/c6cHkJj7Hk.png?imageslim" alt="mark"></p>
<h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><p>默认主题为theme_pubr(),可以调用包<strong>ggthemes</strong>里面的主题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">library(ggthemes)</div><div class="line">p+ggthemes::theme_economist()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/k49JlfLfDg.png?imageslim" alt="mark"></p>
<h2 id="移除ggplot组件"><a href="#移除ggplot组件" class="headerlink" title="移除ggplot组件"></a>移除ggplot组件</h2><p>通过ggpubr::rremove()可以移除组件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggboxplot(ToothGrowth, x=&quot;dose&quot;, y=&quot;len&quot;, ggtheme = theme_igray())</div><div class="line">p</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/G53edij9j4.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+rremove(&quot;grid&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/CciAa0JEhH.png?imageslim" alt="mark"></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-pc-linux-gnu (64-bit)</div><div class="line">## Running under: Ubuntu 16.04.3 LTS</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0</div><div class="line">## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0</div><div class="line">## </div><div class="line">## locale:</div><div class="line">##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              </div><div class="line">##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    </div><div class="line">##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   </div><div class="line">##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 </div><div class="line">##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            </div><div class="line">## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] ggthemes_3.4.0 ggpubr_0.1.5   magrittr_1.5   ggplot2_2.2.1 </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.12       bindr_0.1          knitr_1.17        </div><div class="line">##  [4] munsell_0.4.3      colorspace_1.3-2   R6_2.2.2          </div><div class="line">##  [7] rlang_0.1.2        stringr_1.2.0      plyr_1.8.4        </div><div class="line">## [10] dplyr_0.7.3        tools_3.4.1        grid_3.4.1        </div><div class="line">## [13] gtable_0.2.0       htmltools_0.3.6    yaml_2.1.14       </div><div class="line">## [16] lazyeval_0.2.0     rprojroot_1.2      digest_0.6.12     </div><div class="line">## [19] assertthat_0.2.0   tibble_1.3.4       bindrcpp_0.2      </div><div class="line">## [22] ggsci_2.7          RColorBrewer_1.1-2 purrr_0.2.3       </div><div class="line">## [25] glue_1.1.1         evaluate_0.10.1    rmarkdown_1.6     </div><div class="line">## [28] labeling_0.3       stringi_1.1.5      compiler_3.4.1    </div><div class="line">## [31] scales_0.5.0       backports_1.1.0    pkgconfig_2.0.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/dm80Clb7Eh.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;越学习包&lt;strong&gt;ggpubr&lt;/strong&gt;越感觉其功能强大，本文主要讲解一下如何修改图形参数，我们知道&lt;strong&gt;ggplot2&lt;/strong&gt;有着十分强大的绘图功能，但是其参数之复杂足以让人望而却步。&lt;strong&gt;ggpubr&lt;/strong&gt;提供的函数ggpar()可以十分轻松地让我们修改图形参数，并且可以无缝对接到ggplot图形中。ggpar()可以修改以下图形参数：&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggpubr" scheme="https://ytlogos.github.io/tags/ggpubr/"/>
    
  </entry>
  
  <entry>
    <title>一篇关于国旗与奥运会奖牌的可视化笔记</title>
    <link href="https://ytlogos.github.io/2017/09/12/%E4%B8%80%E7%AF%87%E5%85%B3%E4%BA%8E%E5%9B%BD%E6%97%97%E4%B8%8E%E5%A5%A5%E8%BF%90%E4%BC%9A%E5%A5%96%E7%89%8C%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AC%94%E8%AE%B0/"/>
    <id>https://ytlogos.github.io/2017/09/12/一篇关于国旗与奥运会奖牌的可视化笔记/</id>
    <published>2017-09-11T23:47:05.000Z</published>
    <updated>2017-09-19T00:39:01.445Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170912/k58bFmLk2c.png?imageslim" alt=""></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文主要介绍一个R包<strong>ggflags</strong>，可以用于绘制国旗。安装的话从<a href="https://github.com/baptiste/ggflags" target="_blank" rel="external">Github</a>上利用包<strong>devtools</strong>安装。</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">devtools::install_github(&quot;baptiste/ggflags&quot;)</div></pre></td></tr></table></figure>
<p>下面看个小例子来介绍一下</p>
<h2 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">library(ggflags)#load package</div><div class="line">set.seed(1111)</div><div class="line">#create the dataset</div><div class="line">data &lt;- data.frame(x=rnorm(50), y=rnorm(50),</div><div class="line">                   country=sample(c(&quot;ar&quot;, &quot;us&quot;, &quot;cn&quot;, &quot;fr&quot;, &quot;gb&quot;, &quot;es&quot;), 50 ,replace = TRUE),</div><div class="line">                   stringsAsFactors=FALSE)</div><div class="line">head(data)</div><div class="line">    x	             y	     country</div><div class="line">-0.0865801	-0.7055274	gb</div><div class="line">1.3225244	-0.5910791	fr</div><div class="line">0.6397020	-0.2796410	us</div><div class="line">1.1747866	-1.3209782	cn</div><div class="line">0.1162903	0.5851085	gb</div><div class="line">-2.9308464	0.0198323	ar</div></pre></td></tr></table></figure>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(ggplot2)</div><div class="line">ggplot(data, aes(x=x, y=y, country=country, size=x))+</div><div class="line">  geom_flag()+</div><div class="line">  scale_country()+</div><div class="line">  scale_size(range = c(0, 10))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170912/KB9E0de5H5.png?imageslim" alt=""></p>
<p>国旗的图片是来自于<a href="https://github.com/eosrei/emojione-color-font" target="_blank" rel="external">EmojiOne数据集</a>,有兴趣的可以去看看了解一下。<br>题目有奥运会奖牌，所以接下来就可视化一下索契冬奥运会各国奖牌，本次用国旗与国家联系起来。</p>
<h2 id="爬取数据"><a href="#爬取数据" class="headerlink" title="爬取数据"></a>爬取数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">library(dplyr)</div><div class="line">library(rvest)</div><div class="line">url &lt;- &quot;http://www.nbcolympics.com/medals&quot;</div><div class="line">medals &lt;- read_html(url)%&gt;%</div><div class="line">  html_nodes(&quot;table&quot;)%&gt;%</div><div class="line">  .[[1]]%&gt;%</div><div class="line">  html_table()</div><div class="line">knitr::kable(head(medals))</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Country	      Gold	Silver	Bronze	Total</div><div class="line">Russia	       13	11	9	33</div><div class="line">United States	9	7	12	28</div><div class="line">Norway	       11	5	10	26</div><div class="line">Canada	       10	10	5	25</div><div class="line">Netherlands	8	7	9	24</div><div class="line">Germany	        8	6	5	19</div></pre></td></tr></table></figure>
<p>爬取完数据之后进行清洗</p>
<h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><p>本文重要的一环是将国家与国旗联系起来，因此首先要将国家名缩写弄出来，这就要用到<a href="https://github.com/vincentarelbundock/countrycode" target="_blank" rel="external"><strong>countrycode</strong></a>这个包了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#install the package</div><div class="line">install.packages(&quot;countrycode&quot;)</div></pre></td></tr></table></figure>
<p>数据清洗<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">library(countrycode)</div><div class="line">library(tidyr)</div><div class="line">medals &lt;- medals%&gt;%</div><div class="line">  mutate(code=countrycode(Country, &quot;country.name&quot;, &quot;iso2c&quot;))%&gt;%</div><div class="line">  mutate(code=tolower(code))%&gt;%</div><div class="line">  gather(medal_color, count, Gold, Silver, Bronze)%&gt;%</div><div class="line">  mutate(medal_color=factor(medal_color, levels = c(&quot;Gold&quot;, &quot;Silver&quot;, &quot;Bronze&quot;)))%&gt;%</div><div class="line">  drop_na(Country, code)</div><div class="line">knitr::kable(head(medals))</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Country	      Total	code	medal_color count</div><div class="line">Russia	       33	 ru	   Gold	      13</div><div class="line">United States  28	 us	   Gold	       9</div><div class="line">Norway	       26	 no	   Gold	      11</div><div class="line">Canada	       25	 ca	   Gold       10</div><div class="line">Netherlands    24	 nl	   Gold	       8</div><div class="line">Germany	       19	 de	   Gold	       8</div></pre></td></tr></table></figure>
<h2 id="绘图-1"><a href="#绘图-1" class="headerlink" title="绘图"></a>绘图</h2><p>由于国家数量太多，并且好多国家奖牌数基本为零，因此我们筛选一下：只绘制总奖牌数不小于5的国家。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">medals%&gt;%filter(Total&gt;=5)%&gt;%</div><div class="line">  ggplot(aes(x=reorder(Country, Total), y=count))+</div><div class="line">  geom_bar(stat = &quot;identity&quot;, aes(fill=medal_color))+</div><div class="line">  geom_flag(aes(y=-2,country=code), size=10)+</div><div class="line">  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7, vjust = 0.5))+</div><div class="line">  scale_fill_manual(values = c(</div><div class="line">    &quot;Gold&quot;=&quot;gold&quot;,</div><div class="line">    &quot;Bronze&quot; = &quot;#cd7f32&quot;,</div><div class="line">    &quot;Silver&quot; = &quot;#C0C0C0&quot;</div><div class="line">  ))+</div><div class="line">  scale_y_continuous(expand = c(0.1, 1))+</div><div class="line">  xlab(&quot;Country&quot;)+</div><div class="line">  ylab(&quot;Number of medals&quot;)+</div><div class="line">  theme_bw()+</div><div class="line">  theme(panel.grid = element_blank())+</div><div class="line">  theme(legend.justification = c(1, 0), legend.position = c(1, 0))+</div><div class="line">  theme(legend.title = element_blank())+</div><div class="line">  coord_flip()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170912/k58bFmLk2c.png?imageslim" alt=""></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-pc-linux-gnu (64-bit)</div><div class="line">## Running under: Ubuntu 16.04.3 LTS</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0</div><div class="line">## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0</div><div class="line">## </div><div class="line">## locale:</div><div class="line">##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              </div><div class="line">##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    </div><div class="line">##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   </div><div class="line">##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 </div><div class="line">##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            </div><div class="line">## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] bindrcpp_0.2     tidyr_0.7.1      countrycode_0.19 rvest_0.3.2     </div><div class="line">## [5] xml2_1.1.1       dplyr_0.7.3      ggflags_0.0.1    ggplot2_2.2.1   </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.12     compiler_3.4.1   plyr_1.8.4       highr_0.6       </div><div class="line">##  [5] bindr_0.1        tools_3.4.1      digest_0.6.12    evaluate_0.10.1 </div><div class="line">##  [9] tibble_1.3.4     gtable_0.2.0     pkgconfig_2.0.1  rlang_0.1.2     </div><div class="line">## [13] curl_2.8.1       yaml_2.1.14      stringr_1.2.0    httr_1.3.1      </div><div class="line">## [17] knitr_1.17       tidyselect_0.2.0 rprojroot_1.2    grid_3.4.1      </div><div class="line">## [21] glue_1.1.1       R6_2.2.2         XML_3.98-1.9     rmarkdown_1.6   </div><div class="line">## [25] purrr_0.2.3      selectr_0.3-1    magrittr_1.5     backports_1.1.0 </div><div class="line">## [29] scales_0.5.0     htmltools_0.3.6  assertthat_0.2.0 colorspace_1.3-2</div><div class="line">## [33] labeling_0.3     stringi_1.1.5    lazyeval_0.2.0   munsell_0.4.3</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170912/k58bFmLk2c.png?imageslim&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本文主要介绍一个R包&lt;strong&gt;ggflags&lt;/strong&gt;，可以用于绘制国旗。安装的话从&lt;a href=&quot;https://github.com/baptiste/ggflags&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;上利用包&lt;strong&gt;devtools&lt;/strong&gt;安装。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="ggflags" scheme="https://ytlogos.github.io/tags/ggflags/"/>
    
      <category term="爬虫rvest" scheme="https://ytlogos.github.io/tags/%E7%88%AC%E8%99%ABrvest/"/>
    
  </entry>
  
  <entry>
    <title>利用tximport进行RNA-seq分析</title>
    <link href="https://ytlogos.github.io/2017/09/08/%E5%88%A9%E7%94%A8tximport%E8%BF%9B%E8%A1%8CRNA-seq%E5%88%86%E6%9E%90/"/>
    <id>https://ytlogos.github.io/2017/09/08/利用tximport进行RNA-seq分析/</id>
    <published>2017-09-08T10:31:07.000Z</published>
    <updated>2017-09-19T00:39:01.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>RNA-seq后续分析可以利用R包edgeR、DESeq2以及limma-voom等，而tximport包则可以将RNA-seq上游定量分析软件产生的结果导入到R语言中，进而方便后续的分析。具体的情况可以参考这篇文献：</p>
<blockquote>
<p>Charlotte Soneson, Michael I. Love, Mark D. Robinson (2015): Differential analyses for RNA-seq: transcript-level estimates improve gene-level inferences. F1000Research <a href="http://sci-hub.cc/10.12688/f1000research.7563.1" target="_blank" rel="external">http://sci-hub.cc/10.12688/f1000research.7563.1</a></p>
</blockquote>
<a id="more"></a>
<p>tximport具有以下优点：</p>
<ul>
<li>对于样本之间因基因长度不同导致的差异具有纠正功能</li>
<li>一些上游分析软件(Salmon, Sailfish, kallisto)等的结果可以完美对接到R语言中，这些软件运行速度更快更稳定，且占用更少的内存</li>
<li>更高的灵敏度，因为它可以避免那些比对到多基因的片段的丢失</li>
</ul>
<h2 id="导入转录组数据"><a href="#导入转录组数据" class="headerlink" title="导入转录组数据"></a>导入转录组数据</h2><p>下面我们将使用包tximportData中的数据进行演示，tximport可以处理多种类型的上游定量结果，只需要在参数type中设定就行。 先安装包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">source(&quot;https://bioconductor.org/biocLite.R&quot;)</div><div class="line">options(BioC_mirror=&quot;http://mirrors.ustc.edu.cn/bioc/&quot;)#设置中科大镜像</div><div class="line">biocLite(&quot;tximportData&quot;)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">library(tximportData)</div><div class="line">dir &lt;- system.file(&quot;extdata&quot;, package = &quot;tximportData&quot;)#set directory</div><div class="line">list.files(dir)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">##  [1] &quot;cufflinks&quot;            &quot;kallisto&quot;             &quot;kallisto_boot&quot;       </div><div class="line">##  [4] &quot;rsem&quot;                 &quot;sailfish&quot;             &quot;salmon&quot;              </div><div class="line">##  [7] &quot;salmon_gibbs&quot;         &quot;samples.txt&quot;          &quot;samples_extended.txt&quot;</div><div class="line">## [10] &quot;tx2gene.csv&quot;</div></pre></td></tr></table></figure>
<p>可以看到dir中存在这些文件，接下来我们其中的samples.txt读进来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">samples &lt;- read.table(file.path(dir, &quot;samples.txt&quot;), header = TRUE)</div><div class="line">samples</div><div class="line">##   pop center                assay    sample experiment       run</div><div class="line">## 1 TSI  UNIGE NA20503.1.M_111124_5 ERS185497  ERX163094 ERR188297</div><div class="line">## 2 TSI  UNIGE NA20504.1.M_111124_7 ERS185242  ERX162972 ERR188088</div><div class="line">## 3 TSI  UNIGE NA20505.1.M_111124_6 ERS185048  ERX163009 ERR188329</div><div class="line">## 4 TSI  UNIGE NA20507.1.M_111124_7 ERS185412  ERX163158 ERR188288</div><div class="line">## 5 TSI  UNIGE NA20508.1.M_111124_2 ERS185362  ERX163159 ERR188021</div><div class="line">## 6 TSI  UNIGE NA20514.1.M_111124_4 ERS185217  ERX163062 ERR188356</div></pre></td></tr></table></figure></p>
<p>再将salmon与samples以及quant.sf一起创建每个样本的文件地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">files &lt;- file.path(dir, &quot;salmon&quot;, samples$run, &quot;quant.sf&quot;)</div><div class="line">names(files) &lt;- paste0(&quot;sample&quot;, 1:6)</div><div class="line">all(file.exists(files))</div><div class="line">## [1] TRUE</div></pre></td></tr></table></figure></p>
<p>结果显示TRUE说明运行成功，可以进行下一步，要进行基因表达差异分析，首先要将转录本与基因名关联起来，这就需要我们创建一个两列的名为tx2gene的数据框，最简单的就是通过TxDb创建,再通过AnnotationDbi包里的函数select()进行选取<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">library(TxDb.Hsapiens.UCSC.hg19.knownGene)</div><div class="line">txdb &lt;- TxDb.Hsapiens.UCSC.hg19.knownGene</div><div class="line">k &lt;- keys(txdb, keytype = &quot;GENEID&quot;)</div><div class="line">df &lt;- select(txdb, keys = k, keytype = &quot;GENEID&quot;, columns = &quot;TXNAME&quot;)</div><div class="line">tx2gene &lt;- df[, 2:1]#tx ID在前，gene ID在后</div><div class="line">#这里我们演示就使用现有的tx2gene</div><div class="line">tx2gene &lt;- read.csv(file.path(dir, &quot;tx2gene.csv&quot;))</div><div class="line">head(tx2gene)</div><div class="line">##         TXNAME   GENEID</div><div class="line">## 1    NM_130786     A1BG</div><div class="line">## 2    NR_015380 A1BG-AS1</div><div class="line">## 3 NM_001198818     A1CF</div><div class="line">## 4 NM_001198819     A1CF</div><div class="line">## 5 NM_001198820     A1CF</div><div class="line">## 6    NM_014576     A1CF</div></pre></td></tr></table></figure></p>
<p>最后就是将转录组水平的数据导入就行了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">library(tximport)</div><div class="line">library(readr)</div><div class="line">txi &lt;- tximport(files, type = &quot;salmon&quot;, tx2gene = tx2gene)</div><div class="line">names(txi)</div><div class="line">## [1] &quot;abundance&quot;           &quot;counts&quot;              &quot;length&quot;             </div><div class="line">## [4] &quot;countsFromAbundance&quot;</div><div class="line">head(txi$counts)</div><div class="line">##             sample1   sample2    sample3   sample4   sample5   sample6</div><div class="line">## A1BG     109.232000 316.22400 110.638000 116.00000  86.38430  76.91630</div><div class="line">## A1BG-AS1  83.969700 138.44900 119.274000 151.08300 123.98500 103.25100</div><div class="line">## A1CF       9.030691  10.01847   5.019242  13.01820  25.21914  25.07356</div><div class="line">## A2M       24.000000   2.00000  21.000000   6.00000  38.00000   8.00000</div><div class="line">## A2M-AS1    1.000000   1.00000   1.000000   1.00000   0.00000   0.00000</div><div class="line">## A2ML1      3.047950   1.02987   4.076160   1.04945   3.07761   5.12409</div></pre></td></tr></table></figure></p>
<h2 id="差异分析"><a href="#差异分析" class="headerlink" title="差异分析"></a>差异分析</h2><p>下游分析主要使用Bioconductor包进行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">library(edgeR)</div><div class="line">cts &lt;- txi$counts</div><div class="line">normMat &lt;- txi$length</div><div class="line">normMat &lt;- normMat/exp(rowMeans(log(normMat)))</div><div class="line">o &lt;- log(calcNormFactors(cts/normMat))+log(colSums(cts/normMat))</div><div class="line">y &lt;- DGEList(cts)</div><div class="line">y$offset &lt;- t(t(log(normMat))+o)</div></pre></td></tr></table></figure></p>
<p>接下来的y就可以用来后续的分析</p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 15063)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats4    parallel  stats     graphics  grDevices utils     datasets </div><div class="line">## [8] methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">##  [1] edgeR_3.18.1                           </div><div class="line">##  [2] limma_3.32.5                           </div><div class="line">##  [3] readr_1.1.1                            </div><div class="line">##  [4] tximport_1.4.0                         </div><div class="line">##  [5] TxDb.Hsapiens.UCSC.hg19.knownGene_3.2.2</div><div class="line">##  [6] GenomicFeatures_1.28.4                 </div><div class="line">##  [7] AnnotationDbi_1.38.2                   </div><div class="line">##  [8] Biobase_2.36.2                         </div><div class="line">##  [9] GenomicRanges_1.28.4                   </div><div class="line">## [10] GenomeInfoDb_1.12.2                    </div><div class="line">## [11] IRanges_2.10.3                         </div><div class="line">## [12] S4Vectors_0.14.3                       </div><div class="line">## [13] BiocGenerics_0.22.0                    </div><div class="line">## [14] tximportData_1.4.0                     </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.12               compiler_3.4.1            </div><div class="line">##  [3] XVector_0.16.0             bitops_1.0-6              </div><div class="line">##  [5] tools_3.4.1                zlibbioc_1.22.0           </div><div class="line">##  [7] biomaRt_2.32.1             digest_0.6.12             </div><div class="line">##  [9] bit_1.1-12                 lattice_0.20-35           </div><div class="line">## [11] evaluate_0.10.1            RSQLite_2.0               </div><div class="line">## [13] memoise_1.1.0              tibble_1.3.4              </div><div class="line">## [15] pkgconfig_2.0.1            rlang_0.1.2               </div><div class="line">## [17] Matrix_1.2-11              DelayedArray_0.3.12       </div><div class="line">## [19] DBI_0.7                    yaml_2.1.14               </div><div class="line">## [21] GenomeInfoDbData_0.99.0    rtracklayer_1.36.4        </div><div class="line">## [23] stringr_1.2.0              knitr_1.17                </div><div class="line">## [25] hms_0.3                    Biostrings_2.44.2         </div><div class="line">## [27] locfit_1.5-9.1             grid_3.4.1                </div><div class="line">## [29] rprojroot_1.2              bit64_0.9-7               </div><div class="line">## [31] R6_2.2.2                   XML_3.98-1.9              </div><div class="line">## [33] BiocParallel_1.10.1        rmarkdown_1.6             </div><div class="line">## [35] blob_1.1.0                 magrittr_1.5              </div><div class="line">## [37] matrixStats_0.52.2         GenomicAlignments_1.12.2  </div><div class="line">## [39] backports_1.1.0            Rsamtools_1.28.0          </div><div class="line">## [41] htmltools_0.3.6            SummarizedExperiment_1.6.3</div><div class="line">## [43] stringi_1.1.5              RCurl_1.95-4.8            </div><div class="line">## [45] rjson_0.2.15</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;RNA-seq后续分析可以利用R包edgeR、DESeq2以及limma-voom等，而tximport包则可以将RNA-seq上游定量分析软件产生的结果导入到R语言中，进而方便后续的分析。具体的情况可以参考这篇文献：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Charlotte Soneson, Michael I. Love, Mark D. Robinson (2015): Differential analyses for RNA-seq: transcript-level estimates improve gene-level inferences. F1000Research &lt;a href=&quot;http://sci-hub.cc/10.12688/f1000research.7563.1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sci-hub.cc/10.12688/f1000research.7563.1&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="RNA-seq" scheme="https://ytlogos.github.io/categories/RNA-seq/"/>
    
    
      <category term="RNA-seq" scheme="https://ytlogos.github.io/tags/RNA-seq/"/>
    
  </entry>
  
  <entry>
    <title>A brief introduction of salmon</title>
    <link href="https://ytlogos.github.io/2017/09/06/A-brief-introduction-of-salmon/"/>
    <id>https://ytlogos.github.io/2017/09/06/A-brief-introduction-of-salmon/</id>
    <published>2017-09-06T10:31:06.000Z</published>
    <updated>2017-09-19T00:39:01.436Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Salmon是一款定量分析RNA-seq的软件，号称Fast、accurate、bias-aware and Don’t count…quantify定量分析转录本。本文主要简要的介绍一下Salmon。具体的情况可移步<a href="https://combine-lab.github.io/salmon/" target="_blank" rel="external">Salmon官网</a></p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>可以去<a href="https://github.com/COMBINE-lab/salmon" target="_blank" rel="external">Github</a>里下载Salmon进行安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir Salmon &amp;&amp; cd Salmon</div><div class="line">$ wget  https://github.com/COMBINE-lab/salmon/releases/download/v0.8.2/Salmon-0.8.2_linux_x86_64.tar.gz</div><div class="line">$ tar zxvf Salmon-0.8.2_linux_x86_64.tar.gz</div></pre></td></tr></table></figure></p>
<p>至于路径则根据自己电脑进行配置，这里不讲，安装成功的话则可以用<code>salmon -h</code>查看帮助文件。应该可以看到如下输出：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ salmon -h</div><div class="line">Salmon v0.8.1</div><div class="line"></div><div class="line">Usage:  salmon -h|--help or</div><div class="line">        salmon -v|--version or</div><div class="line">        salmon -c|--cite or</div><div class="line">        salmon [--no-version-check] &lt;COMMAND&gt; [-h | options]</div><div class="line"></div><div class="line">Commands:</div><div class="line">     cite  Show salmon citation information</div><div class="line">     index Create a salmon index</div><div class="line">     quant Quantify a sample</div><div class="line">     swim  Perform super-secret operation</div></pre></td></tr></table></figure>
<p>也可以利用conda安装，这样就可以省去很多麻烦。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ conda install salmon</div></pre></td></tr></table></figure></p>
<h2 id="获取转录组"><a href="#获取转录组" class="headerlink" title="获取转录组"></a>获取转录组</h2><p>Salmon是直接将原始序列map到转录组上而不是全基因组上(这是很重要的一点，千万不要搞混了，这也是作者一直在强调的)，这里我们就以拟南芥为例下载其转录组。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#Creat a directory </div><div class="line">$ mkdir RNA-seq_test cd RNA-seq_test</div><div class="line">$ wget ftp://ftp.ensemblgenomes.org/pub/plants/release-28/fasta/arabidopsis_thaliana/cdna/Arabidopsis_thaliana.TAIR10.28.cdna.all.fa.gz -o athal.fa.gz</div></pre></td></tr></table></figure>
<p>好了，现在转录组已下载好，接下来就是建立索引了</p>
<h2 id="建立索引"><a href="#建立索引" class="headerlink" title="建立索引"></a>建立索引</h2><p>利用Salmon建立索引十分简单，一行命令就搞定<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ salmon index -t athal.fa.gz -i athal_index</div><div class="line">```</div></pre></td></tr></table></figure></p>
<p>这里解释一下几个参数：</p>
<ul>
<li>-t: 表示需要用到的转录组，这里是拟南芥的，我们刚下载好的athal.fa.gz</li>
<li>-i: 表示我们建立的索引的名称，它是一个文件夹</li>
</ul>
<p>更多的参数设置可以<a href="http://salmon.readthedocs.io/en/latest/" target="_blank" rel="external">参考说明</a></p>
<h2 id="获取序列数据"><a href="#获取序列数据" class="headerlink" title="获取序列数据"></a>获取序列数据</h2><p>一次试验数据往往很多，我们可以写一个脚本进行下载，这里简单示例一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">mkdir data</div><div class="line">cd data</div><div class="line">for i in &apos;seq 25 40&apos;;</div><div class="line">do</div><div class="line">  madir DRR0161$&#123;i&#125;;</div><div class="line">  cd DRR0161$&#123;i&#125;;</div><div class="line">  wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/DRR016/DRR0161$&#123;i&#125;/DRR0161$&#123;i&#125;_1.fastq.gz; </div><div class="line">  wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/DRR016/DRR0161$&#123;i&#125;/DRR0161$&#123;i&#125;_2.fastq.gz; </div><div class="line">  cd ..; </div><div class="line">done</div><div class="line">cd ..</div></pre></td></tr></table></figure></p>
<p>将其保存为obtain_reads.sh,将其运行只需以下命令就行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ bash obtain_reads.sh</div></pre></td></tr></table></figure></p>
<h2 id="定量样本"><a href="#定量样本" class="headerlink" title="定量样本"></a>定量样本</h2><p>这次也写一个简单脚本进行定量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">for fn in data/DRR0161&#123;25..40&#125;;</div><div class="line">do</div><div class="line">samp=`basename $&#123;fn&#125;`</div><div class="line">echo &quot;Processing sample $&#123;samp&#125;&quot;</div><div class="line">salmon quant -i athal_index -l A \</div><div class="line">         -1 $&#123;fn&#125;/$&#123;samp&#125;_1.fastq.gz \</div><div class="line">         -2 $&#123;fn&#125;/$&#123;samp&#125;_2.fastq.gz \</div><div class="line">         -p 8 -o quants/$&#123;samp&#125;_quant</div><div class="line">done</div></pre></td></tr></table></figure></p>
<p>这里简单说明一下几个参数：</p>
<ul>
<li>-i: 用来告诉salmon哪里寻找索引index</li>
<li>-l A: 告诉salmon自行决定是何种类型的序列数据</li>
<li>-1，-2：就是两端测序的两个序列了</li>
<li>-p 8: 8线程</li>
<li>-o: 输出文件，这里是所有输出文件都保存至quants，并且文件命名为sample_quant</li>
</ul>
<p>更多参数选择及说明可以参考<a href="http://salmon.readthedocs.io/en/latest/" target="_blank" rel="external">说明文件</a><br>这里每个样品文件里都含有一个主文件quant.sf。在后续的差异分析中有重要作用，后续再讲。<br>定量之后接下来就是进行具体分析了，一般来说都在R里面进行，R&amp;Bioconductor有大量的包进行下游的分析，比如<a href="https://bioconductor.org/packages/DESeq2" target="_blank" rel="external">DESeq2</a>、<a href="https://bioconductor.org/packages/edgeR" target="_blank" rel="external">edgeR</a>、<a href="https://bioconductor.org/packages/limma" target="_blank" rel="external">limma</a>以及<a href="http://pachterlab.github.io/sleuth/" target="_blank" rel="external">sleuth</a>等，后续文章我会讲解如何通过 <a href="http://bioconductor.org/packages/tximport" target="_blank" rel="external"><code>tximport</code></a>将定量化的转录组数据导入到R语言中进行差异分析。</p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Salmon是一款定量分析RNA-seq的软件，号称Fast、accurate、bias-aware and Don’t count…quantify定量分析转录本。本文主要简要的介绍一下Salmon。具体的情况可移步&lt;a href=&quot;https://combine-lab.github.io/salmon/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Salmon官网&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="RNA-seq" scheme="https://ytlogos.github.io/categories/RNA-seq/"/>
    
    
      <category term="RNA-seq" scheme="https://ytlogos.github.io/tags/RNA-seq/"/>
    
  </entry>
  
  <entry>
    <title>图像处理R包magick学习笔记</title>
    <link href="https://ytlogos.github.io/2017/09/03/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86R%E5%8C%85magick%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ytlogos.github.io/2017/09/03/图像处理R包magick学习笔记/</id>
    <published>2017-09-03T10:29:46.000Z</published>
    <updated>2017-09-19T00:39:01.433Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/a2jGAc87jB.gif" alt=""></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文主要简单介绍一下magick包，主要用于图像处理</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#安装的话就直接从CRAN安装进行</div><div class="line">install.packages(&quot;magick&quot;)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#Load the package</div><div class="line">library(magick)</div><div class="line">#查看支持哪些格式</div><div class="line">str(magick_config())</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">## List of 21</div><div class="line">##  $ version           :Class &apos;numeric_version&apos;  hidden list of 1</div><div class="line">##   ..$ : int [1:4] 6 9 9 9</div><div class="line">##  $ modules           : logi FALSE</div><div class="line">##  $ cairo             : logi TRUE</div><div class="line">##  $ fontconfig        : logi FALSE</div><div class="line">##  $ freetype          : logi TRUE</div><div class="line">##  $ fftw              : logi TRUE</div><div class="line">##  $ ghostscript       : logi TRUE</div><div class="line">##  $ jpeg              : logi TRUE</div><div class="line">##  $ lcms              : logi TRUE</div><div class="line">##  $ libopenjp2        : logi FALSE</div><div class="line">##  $ lzma              : logi TRUE</div><div class="line">##  $ pangocairo        : logi TRUE</div><div class="line">##  $ pango             : logi TRUE</div><div class="line">##  $ png               : logi TRUE</div><div class="line">##  $ rsvg              : logi TRUE</div><div class="line">##  $ tiff              : logi TRUE</div><div class="line">##  $ webp              : logi TRUE</div><div class="line">##  $ wmf               : logi FALSE</div><div class="line">##  $ x11               : logi FALSE</div><div class="line">##  $ xml               : logi TRUE</div><div class="line">##  $ zero-configuration: logi FALSE</div></pre></td></tr></table></figure>
<p>可以看出大部分格式都是支持的</p>
<h2 id="读取图像"><a href="#读取图像" class="headerlink" title="读取图像"></a>读取图像</h2><p>读取的话可以直接从本地读取，也可以读取URL格式的图片，主要通过image_read()来读取，image_info()则可以显示图像的一些属性数据。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#读取网上随便选的图片</div><div class="line">night_king &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/ha6Cchfk38.jpg?imageslim&quot;)</div><div class="line">image_info(night_king)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">##   format width height colorspace filesize</div><div class="line">## 1   JPEG   189    267       sRGB     6449</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#通过image_write()可以讲图片以任何格式输出，比如将刚读取的图片以png格式输出。</div><div class="line">image_write(night_king, path = &quot;night_king.png&quot;, format = &quot;png&quot;)</div></pre></td></tr></table></figure>
<h2 id="转换格式"><a href="#转换格式" class="headerlink" title="转换格式"></a>转换格式</h2><p>通过image_convert()可以将图片转换为我们需要的格式，比如这里我们可以将night_king的格式转换为png格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">night_king.png &lt;- image_convert(night_king, &quot;png&quot;)</div><div class="line">image_info(night_king.png)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">##   format width height colorspace filesize</div><div class="line">## 1    PNG   189    267       sRGB        0</div></pre></td></tr></table></figure>
<p>可以看到这里的filesize为0，直到被渲染（这里涉及到ImageMagick方面，我不是很懂）。</p>
<h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>在RStudio中可以查看我们读取的图片</p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/1kEj0h191l.png?imageslim" alt=""></p>
<h2 id="转换-transformations"><a href="#转换-transformations" class="headerlink" title="转换(transformations)"></a>转换(transformations)</h2><p>magick提供一系列函数对图片进行裁剪以及编辑，主要有以下函数：</p>
<ul>
<li>image_crop(image, “100x150+50”):裁剪</li>
<li>image_scale(image, “200”):按宽比例进行放大缩小</li>
<li>image_scale(image, “x200”):按高比例进行放大缩小</li>
<li>image_fill(image, “blue”, “+100+200”):对特定部位着色</li>
<li>image_border(image, “red”, “20x10”):添加边框</li>
</ul>
<p>下面我们来试试这些函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#Example image</div><div class="line">wolf &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/4h96Df21AI.png?imageslim&quot;)</div><div class="line">print(wolf)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/4h96Df21AI.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Add 20px left/right and 10px top/bottom</div><div class="line">image_border(image_background(wolf, &quot;hotpink&quot;), &quot;#000080&quot;, &quot;20x10&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/6LE8j4jECf.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#trim margins</div><div class="line">image_trim(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/HB0lELbmhE.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#裁剪</div><div class="line">image_crop(wolf, &quot;500x300+50&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/f05HDcIG4d.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Resize</div><div class="line">image_scale(wolf, &quot;300&quot;)#width:300px</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/KjfE0bhl7H.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Resize</div><div class="line">image_scale(wolf, &quot;x300&quot;)#heigth:300px</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/0me686bm2e.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Rotate or mirror</div><div class="line">image_rotate(wolf, 45)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/1H6D4bjKbm.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Flip</div><div class="line">image_flip(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/4CGL43f8AK.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Flop</div><div class="line">image_flop(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/Cg4hL5Hi72.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Paint </div><div class="line">image_fill(wolf, &quot;red&quot;, point = &quot;+190+100&quot;, fuzz = 4000)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/fd7IfD0m2a.png?imageslim" alt=""></p>
<p>这个函数最难掌握，我本来是想将wolf的眼睛渲染成红色，但是不断调整point以及fuzz都没弄成，感兴趣的可以自己捣鼓捣鼓。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Add randomness</div><div class="line">image_blur(wolf, 10, 5)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/k5EF1DA9Lk.png?imageslim" alt=""></p>
<p>可以通过调整参数来设置模糊度</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">image_noise(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/D92FH0I3G1.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Silly filters</div><div class="line">image_charcoal(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/KAEA3gIIF0.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">image_oilpaint(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/ACD0Fg5675.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">image_negate(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/kILkaEe9kl.png?imageslim" alt=""></p>
<h2 id="文字注释"><a href="#文字注释" class="headerlink" title="文字注释"></a>文字注释</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Add some text on the image</div><div class="line">image_annotate(wolf, &quot;I am the King of wolf&quot;, size=25, gravity = &quot;southeast&quot;, color=&quot;gold&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/dfc3iB0E3D.png?imageslim" alt=""></p>
<p>当然也可以自定义text</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#customize the text</div><div class="line">image_annotate(wolf, &quot;I am the King&quot;, size=30, color=&quot;red&quot;, boxcolor = &quot;pink&quot;, degrees = 45, location = &quot;+30+30&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/59CEEa0gm0.png?imageslim" alt=""></p>
<p>还可以设置字体</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Set the font times-new-roman</div><div class="line">image_annotate(wolf, &quot;I am the King&quot;, size=30, color=&quot;red&quot;, boxcolor = &quot;pink&quot;, degrees = 45, location = &quot;+30+30&quot;, font = &apos;times-new-roman&apos;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/BIbiF712bE.png?imageslim" alt=""></p>
<h2 id="管道操作"><a href="#管道操作" class="headerlink" title="管道操作"></a>管道操作</h2><p>你没看错，magick支持管道操作，下面试试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">library(magrittr)</div><div class="line">wolf%&gt;%</div><div class="line">  image_rotate(270)%&gt;%</div><div class="line">  image_background(&quot;white&quot;, flatten = TRUE)%&gt;%</div><div class="line">  image_border(&quot;red&quot;, &quot;10x10&quot;)%&gt;%</div><div class="line">  image_annotate(&quot;I am the King&quot;, color=&apos;red&apos;, size = 25, location = &quot;+100+300&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/mEG1lL005b.png?imageslim" alt=""></p>
<h2 id="图片向量"><a href="#图片向量" class="headerlink" title="图片向量"></a>图片向量</h2><p>magick除了支持管道操作外，还支持图层叠加、拼图以及动图处理，来个经典的动态地球<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">earth &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/a9CjAEGiC5.gif&quot;)</div><div class="line">length(earth)</div><div class="line">print(earth)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/a9CjAEGiC5.gif" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rev(earth) %&gt;% </div><div class="line">  image_flip() %&gt;% </div><div class="line">  image_annotate(&quot;This is the Earth&quot;, size = 20, color = &quot;white&quot;)</div></pre></td></tr></table></figure>
<p>不知什么鬼，图片竟然显示出来乱的，电脑渣的话还是别搞动画</p>
<h2 id="图层"><a href="#图层" class="headerlink" title="图层"></a>图层</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">bigdata &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/JclK3efbB3.jpg?imageslim&quot;)</div><div class="line">logo &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/JdjdB88CLm.png?imageslim&quot;)</div><div class="line">frink &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/E5fbmb1FIb.png?imageslim&quot;)</div><div class="line">img &lt;- c(bigdata, logo, frink)</div><div class="line">img &lt;- image_scale(img, &quot;300x300&quot;)</div><div class="line">image_mosaic(img)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/EE0CEL1K57.jpeg?imageslim" alt=""></p>
<h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">image_animate(image_scale(img, &quot;200x200&quot;), fps = 1, dispose = &quot;previous&quot;)#fps控制放映速度</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/0Bi5fCJBE5.gif" alt=""></p>
<h2 id="静图-动图"><a href="#静图-动图" class="headerlink" title="静图+动图"></a>静图+动图</h2><p>静图就用我以前绘制过的，具体可看<a href="https://ytlogos.github.io/2017/08/24/ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%BE%E5%BD%A2%E6%8E%92%E5%88%97/">博客</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">image1 &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/kLeL888DbI.png?imageslim&quot;)</div><div class="line">dance_man &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/86iEDe36lf.gif&quot;)</div><div class="line">dance_man &lt;- image_scale(dance_man, &quot;200&quot;)</div><div class="line">#Background image</div><div class="line">background &lt;- image_background(image_scale(image1, &quot;800&quot;), &quot;white&quot;, flatten = TRUE)</div><div class="line">#Combine and flatten frames</div><div class="line">frames &lt;- image_apply(dance_man, function(frame)&#123;</div><div class="line">  image_composite(background, frame, offset = &quot;+500+270&quot;)</div><div class="line">&#125;)</div><div class="line">#Turn frames into animation</div><div class="line">animation &lt;- image_animate(frames, fps = 10)</div><div class="line">print(animation)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/a2jGAc87jB.gif" alt=""></p>
<p>还有一些有趣的功能这里我就不讲了，有兴趣的可以试试，还是很好玩的。</p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line"></div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 15063)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] magrittr_1.5 magick_1.2  </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] compiler_3.4.1  backports_1.1.0 rprojroot_1.2   tools_3.4.1    </div><div class="line">##  [5] htmltools_0.3.6 curl_2.8.1      yaml_2.1.14     Rcpp_0.12.12   </div><div class="line">##  [9] stringi_1.1.5   rmarkdown_1.6   knitr_1.17      stringr_1.2.0  </div><div class="line">## [13] digest_0.6.12   evaluate_0.10.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/a2jGAc87jB.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本文主要简单介绍一下magick包，主要用于图像处理&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="magick" scheme="https://ytlogos.github.io/tags/magick/"/>
    
  </entry>
  
</feed>
