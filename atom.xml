<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Logos</title>
  <subtitle>Stay hungry,Stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ytlogos.github.io/"/>
  <updated>2018-02-01T03:30:29.055Z</updated>
  <id>https://ytlogos.github.io/</id>
  
  <author>
    <name>TaoYan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于如何修改坐标轴表达式以及分面图例的一个例子</title>
    <link href="https://ytlogos.github.io/2018/01/31/%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%9D%90%E6%A0%87%E8%BD%B4%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%BB%A5%E5%8F%8A%E5%88%86%E9%9D%A2%E5%9B%BE%E4%BE%8B%E7%9A%84%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90/"/>
    <id>https://ytlogos.github.io/2018/01/31/关于如何修改坐标轴表达式以及分面图例的一个例子/</id>
    <published>2018-01-31T11:43:11.000Z</published>
    <updated>2018-02-01T03:30:29.055Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180201/ElKca96m2c.png?imageslim" alt="mark"></p>
<p><strong>ggplot2</strong>绘制的图形如果需要修改细节的话，没有对<strong>ggplot2</strong>有一定的了解的话是十分困难的，毕竟连创建这个包的作者<strong>Hadley Wickham</strong>都自称自己使用<strong>ggplot2</strong>的时候都需要查文档。在对<strong>ggplot2</strong>有一定了解的基础上如果需要修改ggplot图的话稍微查查文档基本能解决。</p>
<a id="more"></a>
<h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p>这两天有人问我如何修改她的图形，她绘制的图如下：</p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180201/5fA4FDKGJB.png?imageslim" alt="mark"></p>
<p>她希望修改三点：</p>
<ul>
<li>各个分面的图例比如DK、NL等是否可以修改，使得大一点</li>
<li>Y轴标题中的-1如何变成上标</li>
<li>平均值虚线如何针对不同物种画相对应的虚线平均值</li>
</ul>
<p>她是使用<strong>ggpubr</strong>包绘制的，这个包就是对一些<strong>ggplot2</strong>函数的一些封装及继承，本质上来说是可以通过<strong>ggplot2</strong>来修改参数的。我参考了一部分的官方文档之后解决了这三个问题，所以写了这篇博客。</p>
<h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(tidyverse)</div><div class="line">library(ggpubr)</div><div class="line">ICP&lt;-read.csv(&quot;C:/Users/taoyan/Desktop/element.csv&quot;)</div><div class="line">ICP$Order &lt;- factor(ICP$Species, levels = c(&quot;DK&quot;, &quot;NL&quot;, &quot;RO&quot;, &quot;IT&quot;, &quot;TL&quot;, &quot;AP&quot;, &quot;AD&quot;))</div><div class="line">head(ICP)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   Species Treatment       Na       Ca        P</div><div class="line">## 1      DK         A 268.4234 3021.933 1791.317</div><div class="line">## 2      DK         A 301.9390 3314.308 1595.479</div><div class="line">## 3      DK         A 261.1024 3417.643 1547.596</div><div class="line">## 4      DK         A 229.1169 3069.978 1735.703</div><div class="line">## 5      DK         A 265.1454 3205.965 1667.524</div><div class="line">## 6      DK         B 330.7135 4028.279 1638.113</div></pre></td></tr></table></figure>
<h2 id="构造数据"><a href="#构造数据" class="headerlink" title="构造数据"></a>构造数据</h2><p>由于后面需要用到平均值，所以需要构造含有平均值的数据集<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">meanvalue &lt;- ICP%&gt;%group_by(Species)%&gt;%summarise(mean=mean(Na))</div><div class="line">data &lt;- left_join(ICP,meanvalue,by=c(&apos;Species&apos;=&apos;Species&apos;))</div><div class="line">head(data[,c(1:4,13)])</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   Species Treatment       Na       Ca     mean</div><div class="line">## 1      DK         A 268.4234 3021.933 426.6542</div><div class="line">## 2      DK         A 301.9390 3314.308 426.6542</div><div class="line">## 3      DK         A 261.1024 3417.643 426.6542</div><div class="line">## 4      DK         A 229.1169 3069.978 426.6542</div><div class="line">## 5      DK         A 265.1454 3205.965 426.6542</div><div class="line">## 6      DK         B 330.7135 4028.279 426.6542</div></pre></td></tr></table></figure>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggboxplot(ICP, x=&quot;Treatment&quot;, y=&quot;Na&quot;,group=&quot;Species&quot;, color=&quot;Treatment&quot;,</div><div class="line">add=&quot;mean_se&quot;,facet.by = &quot;Order&quot;,ncol=4, legend=&quot;none&quot;)+</div><div class="line">geom_hline(aes(yintercept=mean),data,linetype=2)+ #由于要在不同的分面里绘制水平线，这里要mapping</div><div class="line">stat_compare_means(method=&quot;anova&quot;,label=&quot;p.format&quot;,label.y=3500,size=8)+</div><div class="line">stat_compare_means(label=&quot;p.signif&quot;,size=8,method=&quot;wilcox.test&quot;,ref.group=&quot;.all.&quot;,hide.ns=TRUE)</div><div class="line">ggpar(p,palette = &quot;npg&quot;,font.tickslab = c(18,&quot;bold&quot;))+</div><div class="line">  theme(strip.text = element_text(size=15,face = &quot;bold&quot;))+ #调整分面legend</div><div class="line">  labs(x=&quot;Treatment&quot;, y=expression(bold(paste(&quot;Na (  &quot;, &apos;mg Kg&apos;^&#123;-1&#125;,&quot;)&quot;,&apos; DM&apos;))))+</div><div class="line">  theme(axis.title = element_text(face = &quot;bold&quot;, size=18))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180201/ElKca96m2c.png?imageslim" alt="mark"></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo()"></a>SessionInfo()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">## R version 3.4.3 (2017-11-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 16299)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">##  [1] bindrcpp_0.2       ggpubr_0.1.6       magrittr_1.5      </div><div class="line">##  [4] forcats_0.2.0      stringr_1.2.0      dplyr_0.7.4       </div><div class="line">##  [7] purrr_0.2.4        readr_1.1.1        tidyr_0.7.2       </div><div class="line">## [10] tibble_1.4.2       ggplot2_2.2.1.9000 tidyverse_1.2.1   </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] tidyselect_0.2.3  reshape2_1.4.3    haven_1.1.1      </div><div class="line">##  [4] lattice_0.20-35   colorspace_1.3-2  htmltools_0.3.6  </div><div class="line">##  [7] yaml_2.1.16       rlang_0.1.6       pillar_1.1.0     </div><div class="line">## [10] foreign_0.8-69    glue_1.2.0        modelr_0.1.1     </div><div class="line">## [13] readxl_1.0.0      bindr_0.1         plyr_1.8.4       </div><div class="line">## [16] munsell_0.4.3     gtable_0.2.0      cellranger_1.1.0 </div><div class="line">## [19] rvest_0.3.2       ggsci_2.8         psych_1.7.8      </div><div class="line">## [22] evaluate_0.10.1   labeling_0.3      knitr_1.18       </div><div class="line">## [25] parallel_3.4.3    broom_0.4.3       Rcpp_0.12.15     </div><div class="line">## [28] scales_0.5.0.9000 backports_1.1.2   jsonlite_1.5     </div><div class="line">## [31] mnormt_1.5-5      hms_0.4.1         digest_0.6.14    </div><div class="line">## [34] stringi_1.1.6     grid_3.4.3        rprojroot_1.3-2  </div><div class="line">## [37] cli_1.0.0         tools_3.4.3       lazyeval_0.2.1   </div><div class="line">## [40] crayon_1.3.4      pkgconfig_2.0.1   xml2_1.2.0       </div><div class="line">## [43] lubridate_1.7.1   assertthat_0.2.0  rmarkdown_1.8    </div><div class="line">## [46] httr_1.3.1        rstudioapi_0.7    R6_2.2.2         </div><div class="line">## [49] nlme_3.1-131      compiler_3.4.3</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410</p>
<p>Email: tyan@zju.edu.cn</p>
<p>QQ: 1051927088</p>
<p>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></p>
<p>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></p>
<p>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛</p>
<p>浙江大学作物遗传育种在读研究生（生物信息学方向）</p>
<p>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/180201/ElKca96m2c.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;绘制的图形如果需要修改细节的话，没有对&lt;strong&gt;ggplot2&lt;/strong&gt;有一定的了解的话是十分困难的，毕竟连创建这个包的作者&lt;strong&gt;Hadley Wickham&lt;/strong&gt;都自称自己使用&lt;strong&gt;ggplot2&lt;/strong&gt;的时候都需要查文档。在对&lt;strong&gt;ggplot2&lt;/strong&gt;有一定了解的基础上如果需要修改ggplot图的话稍微查查文档基本能解决。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggplot2" scheme="https://ytlogos.github.io/tags/ggplot2/"/>
    
      <category term="ggpubr" scheme="https://ytlogos.github.io/tags/ggpubr/"/>
    
  </entry>
  
  <entry>
    <title>Lesson 01 for Plotting in R for Biologists</title>
    <link href="https://ytlogos.github.io/2018/01/20/%20Lesson%2002&amp;03%20for%20Plotting%20in%20R%20for%20Biologists/"/>
    <id>https://ytlogos.github.io/2018/01/20/ Lesson 02&amp;03 for Plotting in R for Biologists/</id>
    <published>2018-01-20T04:19:05.000Z</published>
    <updated>2018-02-01T12:24:53.016Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180201/dBhf13K3Ge.png?imageslim" alt="mark"></p>
<p>Lesson02主要讲了如何从Excel导入数据以及如何从UCSC、ENSEMBL和RENCODE上下载数据，因此我就将Lesson02并入Lesson03一起讲了。</p>
<a id="more"></a>
<h2 id="从ECXEl中导入数据"><a href="#从ECXEl中导入数据" class="headerlink" title="从ECXEl中导入数据"></a>从ECXEl中导入数据</h2><p>数据来源于文献<a href="https://www.nature.com/articles/1209254" target="_blank" rel="external">“Gene expression profiling of breast cell lines identifies potential new basal markers”</a>的补充数据集Supplementary Table 1。将之下载到工作目录区。数据读取的话只需要用<code>read.csv()</code>即可，指定<code>sep</code>。<strong>gtf</strong>、<strong>bed</strong>文件都可以通过<code>read.csv()</code>读取。即使是没有后缀的文件，只要知道其分隔符，就可以通过设置<code>sep</code>来读取数据。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">my_data &lt;- read.csv(&quot;micro_array_results_table1.txt&quot;, sep = &apos;\t&apos;, header = TRUE)</div><div class="line">head(my_data[,c(1:6)])</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   Probe.Set.ID Gene.Symbol Type  X184B5 BrCa.MZ.01   BT.20</div><div class="line">## 1    1007_s_at        DDR1 gene 1113.91     815.53 1564.76</div><div class="line">## 2      1053_at        RFC2 gene  159.02     253.24  320.22</div><div class="line">## 3       117_at       HSPA6 gene   60.76      33.91   26.39</div><div class="line">## 4       121_at        PAX8 gene  197.76     121.33  122.81</div><div class="line">## 5    1255_g_at      GUCA1A gene    6.73       7.88    6.28</div><div class="line">## 6      1294_at       UBE1L gene  118.82      57.24  432.24</div></pre></td></tr></table></figure>
<p>试试读取<strong>gtf</strong>文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Brassica_gtf &lt;- read.csv(&quot;E:/Brassica napus database/Brassica_napus.annotation_v5.gtf&quot;, sep = &quot;\t&quot;, header = FALSE)</div><div class="line">head(Brassica_gtf)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##       V1     V2   V3   V4   V5   V6 V7 V8                           V9</div><div class="line">## 1 chrA01 GazeA2 exon  831 1437 7.80  +  . transcript_id BnaA01g00010D;</div><div class="line">## 2 chrA01 GazeA2  CDS 1070 1345    .  +  0 transcript_id BnaA01g00010D;</div><div class="line">## 3 chrA01 GazeA2 exon 1487 2124 2.15  -  . transcript_id BnaA01g00020D;</div><div class="line">## 4 chrA01 GazeA2 exon 2256 2436 3.19  -  . transcript_id BnaA01g00020D;</div><div class="line">## 5 chrA01 GazeA2  CDS 1645 2124    .  -  0 transcript_id BnaA01g00020D;</div><div class="line">## 6 chrA01 GazeA2  CDS 2256 2282    .  -  0 transcript_id BnaA01g00020D;</div></pre></td></tr></table></figure>
<p>其他格式文件我这里就不试了，有兴趣的话可以自己去尝试。</p>
<p>** 数据探索<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">library(tidyverse)</div><div class="line">#读取数据</div><div class="line">my_data &lt;- read.csv(&quot;Encode_HMM_data.txt&quot;, sep = &quot;\t&quot;, header = FALSE)</div><div class="line">dim(my_data)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">## [1] 571339      9</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">head(my_data[, c(1:6)])</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##     V1    V2    V3                V4 V5 V6</div><div class="line">## 1 chr1 10000 10600 15_Repetitive/CNV  0  .</div><div class="line">## 2 chr1 10600 11137 13_Heterochrom/lo  0  .</div><div class="line">## 3 chr1 11137 11737       8_Insulator  0  .</div><div class="line">## 4 chr1 11737 11937       11_Weak_Txn  0  .</div><div class="line">## 5 chr1 11937 12137   7_Weak_Enhancer  0  .</div><div class="line">## 6 chr1 12137 14537       11_Weak_Txn  0  .</div></pre></td></tr></table></figure>
<p>对数据部分列进行重命名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">names(my_data)[1:4] &lt;- c(&quot;chrom&quot;, &quot;start&quot;, &quot;stop&quot;, &quot;type&quot;)</div></pre></td></tr></table></figure></p>
<h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><p>先初步看一下不同染色体上的type类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(my_data, aes(x=chrom, fill=type))+geom_bar()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180201/dBhf13K3Ge.png?imageslim" alt="mark"></p>
<p>从这个图中可以看到还有很多缺陷</p>
<ul>
<li>染色体顺序错乱，前缀chr在坐标轴上排列乱</li>
<li>类型太多了，我们只需要可视化我们感兴趣的type</li>
<li>类型的名字乱</li>
</ul>
<p>这几个问题将在Lesson04解决</p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo()"></a>SessionInfo()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">## R version 3.4.3 (2017-11-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 16299)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] forcats_0.2.0      stringr_1.2.0      dplyr_0.7.4       </div><div class="line">## [4] purrr_0.2.4        readr_1.1.1        tidyr_0.7.2       </div><div class="line">## [7] tibble_1.4.2       ggplot2_2.2.1.9000 tidyverse_1.2.1   </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.15      cellranger_1.1.0  pillar_1.1.0     </div><div class="line">##  [4] compiler_3.4.3    plyr_1.8.4        bindr_0.1        </div><div class="line">##  [7] tools_3.4.3       digest_0.6.14     lubridate_1.7.1  </div><div class="line">## [10] jsonlite_1.5      evaluate_0.10.1   nlme_3.1-131     </div><div class="line">## [13] gtable_0.2.0      lattice_0.20-35   pkgconfig_2.0.1  </div><div class="line">## [16] rlang_0.1.6       psych_1.7.8       cli_1.0.0        </div><div class="line">## [19] rstudioapi_0.7    yaml_2.1.16       parallel_3.4.3   </div><div class="line">## [22] haven_1.1.1       bindrcpp_0.2      xml2_1.2.0       </div><div class="line">## [25] httr_1.3.1        knitr_1.18        hms_0.4.1        </div><div class="line">## [28] rprojroot_1.3-2   grid_3.4.3        glue_1.2.0       </div><div class="line">## [31] R6_2.2.2          readxl_1.0.0      foreign_0.8-69   </div><div class="line">## [34] rmarkdown_1.8     modelr_0.1.1      reshape2_1.4.3   </div><div class="line">## [37] magrittr_1.5      backports_1.1.2   scales_0.5.0.9000</div><div class="line">## [40] htmltools_0.3.6   rvest_0.3.2       assertthat_0.2.0 </div><div class="line">## [43] mnormt_1.5-5      colorspace_1.3-2  labeling_0.3     </div><div class="line">## [46] stringi_1.1.6     lazyeval_0.2.1    munsell_0.4.3    </div><div class="line">## [49] broom_0.4.3       crayon_1.3.4</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/180201/dBhf13K3Ge.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;p&gt;Lesson02主要讲了如何从Excel导入数据以及如何从UCSC、ENSEMBL和RENCODE上下载数据，因此我就将Lesson02并入Lesson03一起讲了。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="Biologists" scheme="https://ytlogos.github.io/tags/Biologists/"/>
    
  </entry>
  
  <entry>
    <title>Lesson 01 for Plotting in R for Biologists</title>
    <link href="https://ytlogos.github.io/2018/01/15/%20Lesson%2001%20for%20Plotting%20in%20R%20for%20Biologists/"/>
    <id>https://ytlogos.github.io/2018/01/15/ Lesson 01 for Plotting in R for Biologists/</id>
    <published>2018-01-15T04:19:05.000Z</published>
    <updated>2018-02-01T02:40:18.262Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180201/f6L6BHLm15.png?imageslim" alt="mark"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>老早之前就知道了这门课<a href="http://omgenomics.com/plotting-in-r-for-biologists/" target="_blank" rel="external"><strong>Plotting in R for Biologists</strong></a>,一直没有去学习一下，最近花时间看了一遍videos，发现讲的很不错，虽然有一节有一知识点讲的不是很清楚。学了一遍之后记点笔记，这是lesson1的学习笔记。这一节主要讲了数据读取、快速绘图以及图形保存。</p>
<a id="more"></a>
<h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(ggplot2)</div><div class="line">filename &lt;- &quot;/home/taoyan/Plotting in R for Biologists/Lesson-01/Encode_HMM_data.txt&quot;</div><div class="line">my_data &lt;- read.csv(filename, sep=&quot;\t&quot;, header=FALSE)</div><div class="line"># 查看一下数据</div><div class="line">head(my_data)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##     V1    V2    V3                V4 V5 V6    V7    V8          V9</div><div class="line">## 1 chr1 10000 10600 15_Repetitive/CNV  0  . 10000 10600 245,245,245</div><div class="line">## 2 chr1 10600 11137 13_Heterochrom/lo  0  . 10600 11137 245,245,245</div><div class="line">## 3 chr1 11137 11737       8_Insulator  0  . 11137 11737  10,190,254</div><div class="line">## 4 chr1 11737 11937       11_Weak_Txn  0  . 11737 11937 153,255,102</div><div class="line">## 5 chr1 11937 12137   7_Weak_Enhancer  0  . 11937 12137   255,252,4</div><div class="line">## 6 chr1 12137 14537       11_Weak_Txn  0  . 12137 14537 153,255,102</div></pre></td></tr></table></figure>
<p>对数据列名重命名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">names(my_data)[1:4] &lt;- c(&quot;chrom&quot;,&quot;start&quot;,&quot;end&quot;,&quot;type&quot;)</div><div class="line">head(my_data)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   chrom start   end              type V5 V6    V7    V8          V9</div><div class="line">## 1  chr1 10000 10600 15_Repetitive/CNV  0  . 10000 10600 245,245,245</div><div class="line">## 2  chr1 10600 11137 13_Heterochrom/lo  0  . 10600 11137 245,245,245</div><div class="line">## 3  chr1 11137 11737       8_Insulator  0  . 11137 11737  10,190,254</div><div class="line">## 4  chr1 11737 11937       11_Weak_Txn  0  . 11737 11937 153,255,102</div><div class="line">## 5  chr1 11937 12137   7_Weak_Enhancer  0  . 11937 12137   255,252,4</div><div class="line">## 6  chr1 12137 14537       11_Weak_Txn  0  . 12137 14537 153,255,102</div></pre></td></tr></table></figure>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><p>对不同染色体上的不同type绘制柱形图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data = my_data, aes(x= chrom, fill= type))+geom_bar()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180201/A6geh7Hf22.png?imageslim" alt="mark"></p>
<h2 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h2><p>如果想直接保存图片到文件中，可以用<code>dev.off</code>，R语言支持多种图形类型</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">png(&quot;Lesson-01/plot.png&quot;)</div><div class="line">ggplot(my_data,aes(x=chrom,fill=type)) + geom_bar()</div><div class="line">dev.off()</div><div class="line"></div><div class="line">tiff(&quot;Lesson-01/plot.tiff&quot;)</div><div class="line">ggplot(my_data,aes(x=chrom,fill=type)) + geom_bar()</div><div class="line">dev.off()</div><div class="line"></div><div class="line">jpeg(&quot;Lesson-01/plot.jpg&quot;)</div><div class="line">ggplot(my_data,aes(x=chrom,fill=type)) + geom_bar()</div><div class="line">dev.off()</div><div class="line"></div><div class="line">pdf(&quot;Lesson-01/plot.pdf&quot;)</div><div class="line">ggplot(my_data,aes(x=chrom,fill=type)) + geom_bar()</div><div class="line">dev.off()</div><div class="line"></div><div class="line"># 设置清晰度</div><div class="line">png(&quot;Lesson-01/plot_hi_res.png&quot;,1000,1000)</div><div class="line">ggplot(my_data,aes(x=chrom,fill=type)) + geom_bar()</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
<p>这节课比较简单，没什么知识点，当然如果R语言没入门的话读个数据都困难重重，所以如果基础不太好的可以直接去youtube看视频，讲的很详细。</p>
<p>##SessionInfo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">## R version 3.4.3 (2017-11-30)</div><div class="line">## Platform: x86_64-pc-linux-gnu (64-bit)</div><div class="line">## Running under: Ubuntu 17.10</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## BLAS: /usr/lib/x86_64-linux-gnu/atlas/libblas.so.3.10.3</div><div class="line">## LAPACK: /usr/lib/x86_64-linux-gnu/atlas/liblapack.so.3.10.3</div><div class="line">## </div><div class="line">## locale:</div><div class="line">##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              </div><div class="line">##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    </div><div class="line">##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   </div><div class="line">##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 </div><div class="line">##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            </div><div class="line">## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] ggplot2_2.2.1</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.14     digest_0.6.14    rprojroot_1.3-2  plyr_1.8.4      </div><div class="line">##  [5] grid_3.4.3       gtable_0.2.0     backports_1.1.2  magrittr_1.5    </div><div class="line">##  [9] evaluate_0.10.1  scales_0.5.0     pillar_1.1.0     rlang_0.1.6     </div><div class="line">## [13] stringi_1.1.6    lazyeval_0.2.1   rmarkdown_1.8    labeling_0.3    </div><div class="line">## [17] tools_3.4.3      stringr_1.2.0    munsell_0.4.3    yaml_2.1.16     </div><div class="line">## [21] compiler_3.4.3   colorspace_1.3-2 htmltools_0.3.6  knitr_1.18      </div><div class="line">## [25] tibble_1.4.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/180201/f6L6BHLm15.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;老早之前就知道了这门课&lt;a href=&quot;http://omgenomics.com/plotting-in-r-for-biologists/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Plotting in R for Biologists&lt;/strong&gt;&lt;/a&gt;,一直没有去学习一下，最近花时间看了一遍videos，发现讲的很不错，虽然有一节有一知识点讲的不是很清楚。学了一遍之后记点笔记，这是lesson1的学习笔记。这一节主要讲了数据读取、快速绘图以及图形保存。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="Biologists" scheme="https://ytlogos.github.io/tags/Biologists/"/>
    
  </entry>
  
  <entry>
    <title>一步步教你如何绘制GWAS中的曼哈顿图以及QQ图</title>
    <link href="https://ytlogos.github.io/2018/01/11/%E4%B8%80%E6%AD%A5%E6%AD%A5%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E7%BB%98%E5%88%B6GWAS%E4%B8%AD%E7%9A%84%E6%9B%BC%E5%93%88%E9%A1%BF%E5%9B%BE%E4%BB%A5%E5%8F%8AQQ%E5%9B%BE/"/>
    <id>https://ytlogos.github.io/2018/01/11/一步步教你如何绘制GWAS中的曼哈顿图以及QQ图/</id>
    <published>2018-01-11T04:19:05.000Z</published>
    <updated>2018-01-11T04:22:08.954Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/EE3ce1m2L2.png?imageslim" alt="mark"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>GWAS研究中的曼哈顿图以及QQ图可以说是标配了，至于具体如何理解这两个图，可以参考我以前的博客。上周我利用自己的数据跑了个GWAS，我是利用<strong>GAPIT</strong>跑的，出的图感觉真心丑，大家可以看看：<br><a id="more"></a></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/iAm97eG6FD.png?imageslim" alt="Manhattan plot"><br><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/im6b1iJ7FE.png?imageslim" alt="QQ plot"></p>
<p>所以我利用<strong>GAPIT</strong>出来的数据重新画了图，用的就是包<strong>qqman</strong>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Github主页上提供了三种安装方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Install the stable release from CRAn</div><div class="line">install.packages(&quot;qqman&quot;)</div><div class="line"># 直接从Github上安装</div><div class="line">devtools::install_github(&quot;stephenturner/qqman&quot;)</div><div class="line"># 从Github上安装最新的开发版</div><div class="line">devtools::install_github(&quot;stephenturner/qqman&quot;,ref=&quot;dev&quot;)</div></pre></td></tr></table></figure></p>
<h2 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h2><p><strong>qqman</strong>里内置了一套数据集<code>gwasResults</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">library(qqman)</div><div class="line">dim(gwasResults)</div><div class="line">## [1] 16470     4</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">head(gwasResults)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   SNP CHR BP         P</div><div class="line">## 1 rs1   1  1 0.9148060</div><div class="line">## 2 rs2   1  2 0.9370754</div><div class="line">## 3 rs3   1  3 0.2861395</div><div class="line">## 4 rs4   1  4 0.8304476</div><div class="line">## 5 rs5   1  5 0.6417455</div><div class="line">## 6 rs6   1  6 0.5190959</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">str(gwasResults)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">## &apos;data.frame&apos;:    16470 obs. of  4 variables:</div><div class="line">##  $ SNP: chr  &quot;rs1&quot; &quot;rs2&quot; &quot;rs3&quot; &quot;rs4&quot; ...</div><div class="line">##  $ CHR: int  1 1 1 1 1 1 1 1 1 1 ...</div><div class="line">##  $ BP : int  1 2 3 4 5 6 7 8 9 10 ...</div><div class="line">##  $ P  : num  0.915 0.937 0.286 0.83 0.642 ...</div></pre></td></tr></table></figure>
<p>可以看到该数据集共有16470行，4列，分别为SNP名、染色体、SNP位置以及P值。<br>该数据集不大，SNP标记十分少，通过每条染色体上的SNP标记可以看出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">as.data.frame(table(gwasResults$CHR))</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">##    Var1 Freq</div><div class="line">## 1     1 1500</div><div class="line">## 2     2 1191</div><div class="line">## 3     3 1040</div><div class="line">## 4     4  945</div><div class="line">## 5     5  877</div><div class="line">## 6     6  825</div><div class="line">## 7     7  784</div><div class="line">## 8     8  750</div><div class="line">## 9     9  721</div><div class="line">## 10   10  696</div><div class="line">## 11   11  674</div><div class="line">## 12   12  655</div><div class="line">## 13   13  638</div><div class="line">## 14   14  622</div><div class="line">## 15   15  608</div><div class="line">## 16   16  595</div><div class="line">## 17   17  583</div><div class="line">## 18   18  572</div><div class="line">## 19   19  562</div><div class="line">## 20   20  553</div><div class="line">## 21   21  544</div><div class="line">## 22   22  535</div></pre></td></tr></table></figure>
<h2 id="Manhattan-plot"><a href="#Manhattan-plot" class="headerlink" title="Manhattan plot"></a>Manhattan plot</h2><p><strong>qqman</strong>提供了一个绘制Manhattan plot的函数<code>manhattan()</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">manhattan(gwasResults)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/h6dGbBmlkI.png?imageslim" alt="mark"></p>
<p><code>manhattan()</code>提供了大量的参数设置：标题(main=)、y轴范围(ylim=)、控制点的大小(cex=)、x轴坐标轴标签的字体大小(cex.axis=)、颜色(col=)、阈值参考线控制(suggestiveline=, genomewideline=)、以及添加注释信息等。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">manhattan(gwasResults, main=&quot;Manhattan plot&quot;, ylim=c(0, 10), cex=0.6, cex.axis=0.9, col = c(&quot;blue&quot;,&quot;orange&quot;), suggestiveline = F, genomewideline = F, chrlabs = c(1:20, &quot;P&quot;,&quot;Q&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/LHmie5lJJI.png?imageslim" alt="mark"></p>
<p>还提供针对一条染色体数据进行绘图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">manhattan(subset(gwasResults, CHR==3))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/a7062c4K9L.png?imageslim" alt="mark"></p>
<p>对有显著性影响的SNP进行高亮(没有的话会忽略掉)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">manhattan(gwasResults, highlight = snpsOfInterest)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/e3lD9c1706.png?imageslim" alt="mark"></p>
<p>针对特定染色体以及特定区间进行高亮<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">manhattan(subset(gwasResults, CHR==3), highlight=snpsOfInterest, xlim=c(200, 500), main=&quot;Chr 3&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/el9mh4j8mJ.png?imageslim" alt="mark"></p>
<p><code>manhattan</code>注释的时候默认注释每条染色体中P值最小且超过我们设定的p值阈值的SNP点，默认的P值阈值为0.01<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">manhattan(gwasResults, annotatePval = 0.01)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/36G2LmhlCm.png?imageslim" alt="mark"></p>
<p>我们可以通过自行设定参数注释所有超过P值阈值的SNP点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">manhattan(gwasResults, annotatePval = 0.001, annotateTop = FALSE)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/0f84LHbID9.png?imageslim" alt="mark"></p>
<p><code>manhattan</code>可以绘制任意的value值，不限于p-value，只需要在设置中指定value值就行了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gwasResults &lt;- transform(gwasResults, zscore=qnorm(P/2, lower.tail = FALSE))</div><div class="line">head(gwasResults)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   SNP CHR BP         P    zscore</div><div class="line">## 1 rs1   1  1 0.9148060 0.1069785</div><div class="line">## 2 rs2   1  2 0.9370754 0.0789462</div><div class="line">## 3 rs3   1  3 0.2861395 1.0666287</div><div class="line">## 4 rs4   1  4 0.8304476 0.2141275</div><div class="line">## 5 rs5   1  5 0.6417455 0.4652597</div><div class="line">## 6 rs6   1  6 0.5190959 0.6447396</div></pre></td></tr></table></figure>
<p>接下来利用value值zscore来绘制图形<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">manhattan(gwasResults, p = &quot;zscore&quot;, logp = FALSE, ylab=&quot;Z-score&quot;, genomewideline = FALSE, suggestiveline = FALSE, main=&quot;Manhattan plot of Z-scores&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/d5K199L3lh.png?imageslim" alt="mark"></p>
<p>需要注意的几点：</p>
<ul>
<li>数据集列名默认是SNP、CHR、BP和P，因此如何自己的数据集列名与此不一致的话，要么转为一致，要么绘图时指定chr=、bp=、p=和snp=。具体情况可见help(manhattan)。</li>
<li>染色体编号那一列必须是数值型，如果数据集中有”X”、”Y”以及”MT”等染色体，想要转为数值型编号再在绘图时指定坐标名</li>
<li><code>manhattan</code>只提供了修改snp点的颜色参数，如果要修改阈值线、高亮、注释等的颜色，需要修改源码。</li>
</ul>
<h2 id="QQ图"><a href="#QQ图" class="headerlink" title="QQ图"></a>QQ图</h2><p><strong>qqman</strong>提供了绘制QQ图的函数<code>qq()</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qq(gwasResults)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/25aI37Ld3g.png?imageslim" alt="mark"></p>
<p>通过参数设置可以指定点的类型、大小、颜色等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qq(gwasResults$P, main=&quot;Q-Q plot of GWAS p-value&quot;, xlim=c(0,7), ylim=c(0,12), pch=18, col = &quot;blue4&quot;, cex=1.5, las=1)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/9hlig1ajam.png?imageslim" alt="mark"></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">## R version 3.4.3 (2017-11-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 16299)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] qqman_0.1.3</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] compiler_3.4.3  backports_1.1.2 magrittr_1.5    rprojroot_1.3-2</div><div class="line">##  [5] tools_3.4.3     htmltools_0.3.6 yaml_2.1.16     Rcpp_0.12.14   </div><div class="line">##  [9] calibrate_1.7.2 stringi_1.1.6   rmarkdown_1.8   knitr_1.18     </div><div class="line">## [13] stringr_1.2.0   digest_0.6.13   evaluate_0.10.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/180111/EE3ce1m2L2.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;GWAS研究中的曼哈顿图以及QQ图可以说是标配了，至于具体如何理解这两个图，可以参考我以前的博客。上周我利用自己的数据跑了个GWAS，我是利用&lt;strong&gt;GAPIT&lt;/strong&gt;跑的，出的图感觉真心丑，大家可以看看：&lt;br&gt;
    
    </summary>
    
      <category term="GWAS" scheme="https://ytlogos.github.io/categories/GWAS/"/>
    
    
      <category term="GWAS" scheme="https://ytlogos.github.io/tags/GWAS/"/>
    
      <category term="QQ Plot" scheme="https://ytlogos.github.io/tags/QQ-Plot/"/>
    
      <category term="Manhattan Plot" scheme="https://ytlogos.github.io/tags/Manhattan-Plot/"/>
    
  </entry>
  
  <entry>
    <title>生物信息学学习笔记（七）</title>
    <link href="https://ytlogos.github.io/2018/01/07/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2018/01/07/生物信息学学习笔记（七）/</id>
    <published>2018-01-07T13:19:05.000Z</published>
    <updated>2018-01-07T12:44:02.414Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180107/2574kmE80m.png?imageslim" alt="mark"></p>
<ul>
<li><p>Polycomb group(PcG)蛋白是一组通过染色质修饰调控靶基因的抑制子，从生化和功能上可以分为两个主要的核心蛋白复合体PRC1(Polycomb repressive complex 1)和PRC2(Polycomb repressive complex 2)。PcG蛋白家族是一类在进化上极为保守的转录抑制因子。</p>
</li>
<li><p>Pericentrometric区域是接近端粒的DNA序列，它们含有大量的重复片段即其进行拷贝的常染色质起源位置(euchromatic ancestral loci)非常相似的大量DNA序列，是基因组结构中迅速改变的区域。</p>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>曼哈顿图p值不是很大的位点从图上看要尽量压缩到下面，而p值显著的位点突出在上面才是一个好的曼哈顿图，不然数据质控有问题。QQ图只在尾巴上翘起，显示显著性位点，如果从开始就偏离了，数据质控就有问题了。</p>
</li>
<li><p>基因组重测序中除了ACGT之外的其他字母含义：</p>
<ul>
<li>R =&gt; AG</li>
<li>Y =&gt; CT</li>
<li>M =&gt; AC</li>
<li>K =&gt; GT</li>
<li>S =&gt; CG</li>
<li>W =&gt; AT</li>
</ul>
</li>
<li><p>关于GWAS数据过滤的问题（摘自微信公众号：解螺旋的矿工）</p>
</li>
</ul>
<blockquote>
<p>现在较难定义常规GWAS，现在的GWAS方向已经从基于芯片数据的关联分析往基因组重测序数据关联分析偏转。如果完全基于genotype进行关联分析，数据过滤通常包括：genotype missing rate &lt; 90%，chi-square test of HWE &gt; 1e-06，minor allele frequency &gt; 0.01等，这个过程可以使用plink或者自己造轮子完成过滤。当然过滤的阈值与样本量及最终结果有关，一般需要个性化调试。功效更加大的做法是基于imputed genotype probability进行关联分析，此时需要在GWAS之前先做imputation，imputation过程会产生info score,过滤标准一般是info score &gt; 0.4,chi-square test of HWE &gt; 1e-06，minor allele frequency &gt; 0.01等，当然有时也需要进行个性化调试。GWAS只要inflation控制的好（GC lambda接近1，控制的要素是covariates的设定来解决population stratification），不需要太关心过滤的问题，甚至可以不过滤直接画曼哈顿图看是否有关联信号。大多数情况过滤不是影响能否获得有生物学意义位点的关键因素。</p>
</blockquote>
<ul>
<li><p>QQ图可以用来估计我们GWAS所用的模型能够多大程度地显示群体结构和群体相关性。由于大部分的SNP与性状是不相关联的，因此大部分的点应该是落在对角线上，偏离对角线表明伪关联性，主要是由于群体结构以及群体之间的相关性导致的。我们期望得到的是对角线上方的偏离，这往往意味着这些SNP与我们所研究的性状是可能关联的。</p>
</li>
<li><p>高水平的杂合率意味着低质量，在近交系snp中超过50%的杂合率说哦名数据是有问题的，不是很适合用来接下来的GWAS分析。</p>
</li>
</ul>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/180107/2574kmE80m.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Polycomb group(PcG)蛋白是一组通过染色质修饰调控靶基因的抑制子，从生化和功能上可以分为两个主要的核心蛋白复合体PRC1(Polycomb repressive complex 1)和PRC2(Polycomb repressive complex 2)。PcG蛋白家族是一类在进化上极为保守的转录抑制因子。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pericentrometric区域是接近端粒的DNA序列，它们含有大量的重复片段即其进行拷贝的常染色质起源位置(euchromatic ancestral loci)非常相似的大量DNA序列，是基因组结构中迅速改变的区域。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="bioinformatics" scheme="https://ytlogos.github.io/categories/bioinformatics/"/>
    
    
      <category term="GWAS" scheme="https://ytlogos.github.io/tags/GWAS/"/>
    
  </entry>
  
  <entry>
    <title>利用ggmap绘制简单地图</title>
    <link href="https://ytlogos.github.io/2018/01/03/%E5%88%A9%E7%94%A8ggmap%E7%BB%98%E5%88%B6%E7%AE%80%E5%8D%95%E5%9C%B0%E5%9B%BE/"/>
    <id>https://ytlogos.github.io/2018/01/03/利用ggmap绘制简单地图/</id>
    <published>2018-01-03T00:47:05.000Z</published>
    <updated>2018-01-03T00:45:42.506Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180103/BDJF5FajDc.png?imageslim" alt="mark"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="http://stat405.had.co.nz/ggmap.pdf" target="_blank" rel="external"><strong>ggmap</strong></a>允许用户从Google地图下载并绘制地图。并且<strong>ggmap</strong>完美契合<strong>ggplot2</strong>，因此经<strong>ggmap</strong>绘制的图形可以作为<strong>ggplot2</strong>的图层，进而在此基础上不断添加图形元素形成十分复杂的图形。<strong>ggplot2</strong>+<strong>ggmap</strong>是地理可视化的利器。<br><a id="more"></a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装方法有两种：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># From CRAN</div><div class="line">install.packages(&quot;ggmap&quot;)</div><div class="line"># From Github,必须先安装devtools</div><div class="line">devtools::install_github(&quot;dkahle/ggmap&quot;)</div></pre></td></tr></table></figure></p>
<h2 id="绘制"><a href="#绘制" class="headerlink" title="绘制"></a>绘制</h2><p>先画个杭州的地图，由于调用的是Google地图，可能需要翻墙，同时速度有点慢（访问的是Google地图数据库，由于网络限制数据抓取可能不完整）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">library(tidyverse)</div><div class="line">library(ggmap)</div><div class="line">map.hangzhou &lt;- get_map(&quot;Hangzhou&quot;)</div><div class="line">ggmap(map.hangzhou)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180103/j1EhiFDl3B.png?imageslim" alt="mark"></p>
<p>这里我们只使用了两个函数，分别是<code>get_map()从Google</code>中检索并下载地图，之后使用函数<code>ggmap()</code>绘制地图。同时<strong>ggmap</strong>支持管道操作(%&gt;%)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">get_map(&quot;Hangzhou&quot;)%&gt;%ggmap()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180103/1kf8fI3KH7.png?imageslim" alt="mark"></p>
<p>现在我们绘制中国地图</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">get_map(&quot;China&quot;)%&gt;%ggmap()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180103/jICh8268jb.png?imageslim" alt="mark"></p>
<p>可以看出画出来的图形十分不美观，加上<code>zoom</code>参数之后好看一点。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">get_map(&quot;China&quot;, zoom=4)%&gt;%ggmap()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180103/kImdmk2DEm.png?imageslim" alt="mark"></p>
<p>我们再来看一下天安门<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">get_map(&quot;Tiananmen&quot;,zoom=18)%&gt;%ggmap()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180103/DL0JHKhK20.png?imageslim" alt="mark"></p>
<p>应该足够清晰了<br>再来看看浙江大学的情形,这里默认显示的是玉泉校区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">get_map(&quot;ZheJiang University Zijingang Campus&quot;, zoom = 17)%&gt;%ggmap()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180103/KIIH9be09L.png?imageslim" alt="mark"></p>
<p>接下来我们将浙江大学在杭州的几个校区标识出来，分别是紫金港、玉泉、华家池、西溪、之江<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># 首先创建含有校区名字的数据集</div><div class="line">df.zjucampus_locations &lt;- tibble(location=c(&quot;Zhejiang university Zijingang Campus,Hangzhou,China&quot;,&quot;Zhejiang university Yuquan Campus,Hangzhou,China&quot;,&quot;Zhejiang university Zhijiang Campus,Hangzhou,China&quot;,&quot;Zhejiang university Huajiachi Campus,Hangzhou,China&quot;,&quot;Zhejiang university Xixi Campus,Hangzhou,China&quot;))</div><div class="line"># 获取经纬度</div><div class="line">geo.zjucampus_locations &lt;- geocode(df.zjucampus_locations$location)</div><div class="line"># 合并数据集</div><div class="line">df.zjucampus_locations &lt;- cbind(df.zjucampus_locations,geo.zjucampus_locations)</div><div class="line"># 绘制图形，在地图上将几个校区标识出来</div><div class="line">get_map(&quot;Hangzhou&quot;, zoom = 11)%&gt;%ggmap()+</div><div class="line">  geom_point(data=df.zjucampus_locations, aes(x=lon, y=lat), color=&quot;red&quot;, size=5)+</div><div class="line">  geom_text(data = df.zjucampus_locations,aes(lon, lat, label=c(&quot;Zhejiang university Zijingang Campus&quot;,&quot;Zhejiang university Yuquan Campus&quot;,&quot;Zhejiang university Zhijiang Campus&quot;,&quot;Zhejiang university Huajiachi Campus&quot;,&quot;Zhejiang university Xixi Campus&quot;)), size=3, color=&quot;blue&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/180103/hkgfJKdEeH.png?imageslim" alt="mark"></p>
<p>由于网络限制就不调整了，这次能出图已经不容易了。可以看到玉泉校区与华家池校区竟然重叠在一起，通过它们的经纬度数据也发现相同，可能Google地图数据库对于国内来说还不是很好用，但是没办法调用百度地图只能很好的获取国内地图数据，一遇到国外的就歇菜了！</p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">R version 3.4.3 (2017-11-30)</div><div class="line">Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">Running under: Windows &gt;= 8 x64 (build 9200)</div><div class="line"></div><div class="line">Matrix products: default</div><div class="line"></div><div class="line">locale:</div><div class="line">[1] LC_COLLATE=Chinese (Simplified)_China.936  LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">[3] LC_MONETARY=Chinese (Simplified)_China.936 LC_NUMERIC=C                              </div><div class="line">[5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line"></div><div class="line">attached base packages:</div><div class="line">[1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line"></div><div class="line">other attached packages:</div><div class="line"> [1] ggmap_2.6.1        forcats_0.2.0      stringr_1.2.0      dplyr_0.7.4        purrr_0.2.4       </div><div class="line"> [6] readr_1.1.1        tidyr_0.7.2        tibble_1.4.1       ggplot2_2.2.1.9000 tidyverse_1.2.1   </div><div class="line"></div><div class="line">loaded via a namespace (and not attached):</div><div class="line"> [1] reshape2_1.4.3    haven_1.1.0       lattice_0.20-35   colorspace_1.3-2  yaml_2.1.16      </div><div class="line"> [6] rlang_0.1.6       pillar_1.0.1      foreign_0.8-69    glue_1.2.0        sp_1.2-5         </div><div class="line">[11] modelr_0.1.1      readxl_1.0.0      bindrcpp_0.2      jpeg_0.1-8        bindr_0.1        </div><div class="line">[16] plyr_1.8.4        munsell_0.4.3     gtable_0.2.0      cellranger_1.1.0  rvest_0.3.2      </div><div class="line">[21] RgoogleMaps_1.4.1 mapproj_1.2-5     psych_1.7.8       knitr_1.18        parallel_3.4.3   </div><div class="line">[26] proto_1.0.0       broom_0.4.3       Rcpp_0.12.14      geosphere_1.5-7   scales_0.5.0.9000</div><div class="line">[31] jsonlite_1.5      mnormt_1.5-5      rjson_0.2.15      hms_0.4.0         png_0.1-7        </div><div class="line">[36] stringi_1.1.6     grid_3.4.3        cli_1.0.0         tools_3.4.3       maps_3.2.0       </div><div class="line">[41] magrittr_1.5      lazyeval_0.2.1    crayon_1.3.4      pkgconfig_2.0.1   xml2_1.1.1       </div><div class="line">[46] lubridate_1.7.1   assertthat_0.2.0  httr_1.3.1        rstudioapi_0.7    R6_2.2.2         </div><div class="line">[51] nlme_3.1-131      compiler_3.4.3</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/180103/BDJF5FajDc.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://stat405.had.co.nz/ggmap.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;ggmap&lt;/strong&gt;&lt;/a&gt;允许用户从Google地图下载并绘制地图。并且&lt;strong&gt;ggmap&lt;/strong&gt;完美契合&lt;strong&gt;ggplot2&lt;/strong&gt;，因此经&lt;strong&gt;ggmap&lt;/strong&gt;绘制的图形可以作为&lt;strong&gt;ggplot2&lt;/strong&gt;的图层，进而在此基础上不断添加图形元素形成十分复杂的图形。&lt;strong&gt;ggplot2&lt;/strong&gt;+&lt;strong&gt;ggmap&lt;/strong&gt;是地理可视化的利器。&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="地图" scheme="https://ytlogos.github.io/tags/%E5%9C%B0%E5%9B%BE/"/>
    
      <category term="ggmap" scheme="https://ytlogos.github.io/tags/ggmap/"/>
    
  </entry>
  
  <entry>
    <title>机器学习概念及算法类型</title>
    <link href="https://ytlogos.github.io/2017/12/25/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9A%E4%B9%89%E4%BB%A5%E5%8F%8A%E7%AE%97%E6%B3%95%E7%B1%BB%E5%9E%8B%E5%88%9D%E6%8E%A2/"/>
    <id>https://ytlogos.github.io/2017/12/25/机器学习定义以及算法类型初探/</id>
    <published>2017-12-25T12:19:05.000Z</published>
    <updated>2017-12-25T12:56:28.672Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171225/929l1BKmhH.png?imageslim" alt="mark"></p>
<h2 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h2><p>机器学习是什么？Arthur Samuel在1959年将机器学习定义为在特定编程的情况下，给予计算机学习能力的领域。他编写了一个西洋棋程序让计算机自己不断下棋进而进行学习，最后棋艺大涨，远远超过了Samuel自己的水平。<br>来自卡内基梅隆大学的Tom Mitchell在1998年将机器学习定义为：一个程序被认为能够从经验E中学习，解决了任务T，达到性能度量值P，当且仅当有了经验E后经过P评判，程序在处理T时的性能有所提升。E也就是计算机自己不断学习，学会了如何解决问题T，并且达到了一定的成功率P。<br><a id="more"></a></p>
<p>目前存在几种不同类型的学习算法，主要的两种类型为监督学习(Supervised learning)以及无监督学习(Unsuoervised learning)。</p>
<h2 id="监督学习"><a href="#监督学习" class="headerlink" title="监督学习"></a>监督学习</h2><p>监督学习又叫回归问题，意指要预测一个连续值的输出，也可以用于分类问题预测，在监督学习中，数据集中的每个例子，算法将预测得到例子的“正确答案”，比如预测房价、肿瘤类型等。监督学习实际运用中我们需合理判断出我们要解决的问题是回归问题还是分类问题。</p>
<h2 id="无监督学习"><a href="#无监督学习" class="headerlink" title="无监督学习"></a>无监督学习</h2><p>监督学习中的数据集我们知道每一个数据代表的意思，比如房子多大对应房价多少，肿瘤多大对应是恶性肿瘤。但是在无监督学习中只有数据集，我们对这个数据集完全不了解，数据集中的数据没有属性或标签这一概念。也就是说数据集中的数据都是一样的没有区别。<br><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171225/IIla4J06b4.png?imageslim" alt="mark"></p>
<h2 id="比如上图中我们看到所有的数据都是一样的，没有属性与标签的区别，计算机通过无监督学习可能会将数据分成两类，也就是聚类。"><a href="#比如上图中我们看到所有的数据都是一样的，没有属性与标签的区别，计算机通过无监督学习可能会将数据分成两类，也就是聚类。" class="headerlink" title="比如上图中我们看到所有的数据都是一样的，没有属性与标签的区别，计算机通过无监督学习可能会将数据分成两类，也就是聚类。"></a>比如上图中我们看到所有的数据都是一样的，没有属性与标签的区别，计算机通过无监督学习可能会将数据分成两类，也就是聚类。</h2><h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171225/929l1BKmhH.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;机器学习&quot;&gt;&lt;a href=&quot;#机器学习&quot; class=&quot;headerlink&quot; title=&quot;机器学习&quot;&gt;&lt;/a&gt;机器学习&lt;/h2&gt;&lt;p&gt;机器学习是什么？Arthur Samuel在1959年将机器学习定义为在特定编程的情况下，给予计算机学习能力的领域。他编写了一个西洋棋程序让计算机自己不断下棋进而进行学习，最后棋艺大涨，远远超过了Samuel自己的水平。&lt;br&gt;来自卡内基梅隆大学的Tom Mitchell在1998年将机器学习定义为：一个程序被认为能够从经验E中学习，解决了任务T，达到性能度量值P，当且仅当有了经验E后经过P评判，程序在处理T时的性能有所提升。E也就是计算机自己不断学习，学会了如何解决问题T，并且达到了一定的成功率P。&lt;br&gt;
    
    </summary>
    
      <category term="machine learning" scheme="https://ytlogos.github.io/categories/machine-learning/"/>
    
    
      <category term="机器学习" scheme="https://ytlogos.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>生物信息学学习笔记（六）</title>
    <link href="https://ytlogos.github.io/2017/12/24/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/12/24/生物信息学学习笔记（六）/</id>
    <published>2017-12-24T13:19:05.000Z</published>
    <updated>2017-12-25T11:15:14.542Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171210/JBeFfJL8KD.png?imageslim" alt="mark"></p>
<h2 id="Tajima’s-D值检验"><a href="#Tajima’s-D值检验" class="headerlink" title="Tajima’s D值检验"></a>Tajima’s D值检验</h2><p>Tajima’s D值检验的目的是鉴定目标DNA序列在进化过程中是否遵循中性进化模型。当Tajima’s D显著大于0时，可用于推断瓶颈效应和平衡选择，当Tajima’s D显著小于0时，可用于推断群体规模放大和定向选择。由于平衡选择和定向选择均属于正选择的范畴，因此只要D值显著背离0，就可能是自然选择的结果，当D值不显著背离0时，中性假说则不能被排除。<br>连锁不平衡程度高的染色体可能是由于在现代育种和栽培过程中那些与重要农艺性状相关的QTLs或基因被人工或自然选择保留下来，进而使得这些染色体受到强选择增强了其LD程度。另外LD的衰减距离也决定了关联分析所需要的标记密度和作图精度，LD衰减越快关联分析所需要的标记就越多，作图精度也越高。<br><a id="more"></a></p>
<h2 id="遗传渗透分析"><a href="#遗传渗透分析" class="headerlink" title="遗传渗透分析"></a>遗传渗透分析</h2><p>亚洲栽培油菜(主要是中国半冬性油菜)从欧洲引入亚洲之后导入了油菜亲本之一白菜的遗传成分，这样拓宽了半冬性油菜A亚基因组的遗传多样性，导致半冬性油菜在A亚基因组上的遗传距离增加，LD衰减加快。半冬性油菜在上世纪30-40年代从欧洲直接或间接通过日本引进中国之后正在经历群体扩张，而且这种扩张还在继续。甘蓝和油菜杂交是不亲和的，油菜在栽培驯化中A、C亚基因组间存在很强的基因流渗透现象。</p>
<h2 id="选择性消除分析"><a href="#选择性消除分析" class="headerlink" title="选择性消除分析"></a>选择性消除分析</h2><p>选择性消除(Selective sweep)是由于某一位点受到强选择后，其周围的位点的多态性因受该位点牵连而发生多态性降低的现象。也可以认为某个位点发生突变，突变后的位点因对物种在特定的情况下有利或者受到了人为选择，那么该突变位点在群体中的频率必然提高，但是其附近和它处在同一单体型或者block的其它位点同样跟着受到了选择，频率发生了提高，也就是单体型内的其它多态位点的某一多态形式比率大大提高，从而降低了整个周围区域的多态性。</p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171210/JBeFfJL8KD.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Tajima’s-D值检验&quot;&gt;&lt;a href=&quot;#Tajima’s-D值检验&quot; class=&quot;headerlink&quot; title=&quot;Tajima’s D值检验&quot;&gt;&lt;/a&gt;Tajima’s D值检验&lt;/h2&gt;&lt;p&gt;Tajima’s D值检验的目的是鉴定目标DNA序列在进化过程中是否遵循中性进化模型。当Tajima’s D显著大于0时，可用于推断瓶颈效应和平衡选择，当Tajima’s D显著小于0时，可用于推断群体规模放大和定向选择。由于平衡选择和定向选择均属于正选择的范畴，因此只要D值显著背离0，就可能是自然选择的结果，当D值不显著背离0时，中性假说则不能被排除。&lt;br&gt;连锁不平衡程度高的染色体可能是由于在现代育种和栽培过程中那些与重要农艺性状相关的QTLs或基因被人工或自然选择保留下来，进而使得这些染色体受到强选择增强了其LD程度。另外LD的衰减距离也决定了关联分析所需要的标记密度和作图精度，LD衰减越快关联分析所需要的标记就越多，作图精度也越高。&lt;br&gt;
    
    </summary>
    
      <category term="bioinformatics" scheme="https://ytlogos.github.io/categories/bioinformatics/"/>
    
    
      <category term="evolution" scheme="https://ytlogos.github.io/tags/evolution/"/>
    
  </entry>
  
  <entry>
    <title>图形组合R包patchwork</title>
    <link href="https://ytlogos.github.io/2017/12/18/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8B%E5%9B%BE%E5%BD%A2%E7%BB%84%E5%90%88R%E5%8C%85patchwork/"/>
    <id>https://ytlogos.github.io/2017/12/18/R语言可视化之图形组合R包patchwork/</id>
    <published>2017-12-18T08:47:05.000Z</published>
    <updated>2017-12-18T10:41:24.688Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171218/9dEjEbJ8kI.png?imageslim" alt="mark"></p>
<p>平常我们绘制图形的时候常常要将几幅图形组合在一起，有很多R包可以用于图形组合，经典的是<strong>gridExtra</strong>，还有<strong>egg</strong>。今天介绍一个新包<a href="https://github.com/thomasp85/patchwork" target="_blank" rel="external"><strong>patchwork</strong></a><br><a id="more"></a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># install.packages(&quot;devtools&quot;)</div><div class="line">devtools::install_github(&quot;thomasp85/patchwork&quot;)</div></pre></td></tr></table></figure>
<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p><strong>patchwork</strong>的使用非常简单，就是利用<strong>+</strong>将图形组合起来。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">library(ggplot2)</div><div class="line">library(patchwork)</div><div class="line">p1 &lt;- ggplot(mtcars)+geom_point(aes(mpg, disp))</div><div class="line">p2 &lt;- ggplot(mtcars)+geom_boxplot(aes(gear, disp, group=gear))</div><div class="line"># Combine these two plots together</div><div class="line">p1+p2</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171218/7Dd5CG5fgB.png?imageslim" alt="mark"></p>
<h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p><strong>patchwork</strong>提供了一个专门用于图形布局的函数<code>plot_layout()</code>，这样我们就可以自定义布局的行列数了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p1+p2+plot_layout(ncol = 1, heights = c(3,1))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171218/aa0KGc5l3f.png?imageslim" alt="mark"></p>
<p>如果需要在组合的图形之间留点空间，使用<code>plot_spacer()</code>就行了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p1+plot_spacer()+p2</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171218/H2hD8BcCk4.png?imageslim" alt="mark"></p>
<p>还可以将不同图形用{}封装，这样可以实现双重布局<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">p3 &lt;- ggplot(mtcars)+geom_smooth(aes(disp, qsec))</div><div class="line">p4 &lt;- ggplot(mtcars)+geom_bar(aes(carb))</div><div class="line"># nested plots layout</div><div class="line">p4+&#123;</div><div class="line">  p1+&#123;</div><div class="line">    p2+</div><div class="line">      p3+</div><div class="line">      plot_layout(ncol = 1)</div><div class="line">  &#125;</div><div class="line">&#125;+</div><div class="line">  plot_layout(ncol = 1)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171218/cG64Jhh0IB.png?imageslim" alt="mark"></p>
<h2 id="高级参数"><a href="#高级参数" class="headerlink" title="高级参数"></a>高级参数</h2><p><strong>patchwork</strong>还提供了一些高级参数，比如<code>/</code>,<code>/</code>类似于操作符<code>+</code>，但是它可以将不同plots至于同一个nesting水平，具体如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># first we use + to add plots and layout</div><div class="line">(p1+p2)+p3+plot_layout(ncol = 1)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171218/EKbJdE82IK.png?imageslim" alt="mark"></p>
<p>可以看出p1+p2组合之后并没有处于同一nesting水平<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># then we use /</div><div class="line">(p1+p2)/p3 + plot_layout(ncol = 1)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171218/7HL49dJ1EI.png?imageslim" alt="mark"><br>此时p1+p2先组合在同一水平再与p3组合</p>
<p>另外再介绍两个操作符：<code>*</code>和<code>^</code><br>这两个有点类似于正则表达式里的通配符了，主要是为了减轻代码量。比如如果我们需要修改所有plots的背景，就没必要每个plot都修改一遍了。这两个操作符的主要区别是<code>*</code>只改变处于当前nesting水平的所有plots，<code>^</code>则修改所有plots，具体如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p1+(p2+p3)+p4+plot_layout(ncol = 1))*theme_bw()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171218/KCjBgd0KHg.png?imageslim" alt="mark"></p>
<p>可以看到这里只修改了p1和p4的背景主题，(p2+p3)没有修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p1+(p2+p3)+p4+plot_layout(ncol = 1))^theme_bw()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171218/CFGBjB6GLK.png?imageslim" alt="mark"></p>
<p>这里所有的plots的主题背景都被修改了。<br>目前这个包还处于开发阶段，将来还有很多功能会被加进去，我们拭目以待吧</p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.3 (2017-11-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 16299)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] patchwork_0.0.1    ggplot2_2.2.1.9000</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.14      digest_0.6.13     rprojroot_1.2    </div><div class="line">##  [4] plyr_1.8.4        grid_3.4.3        gtable_0.2.0     </div><div class="line">##  [7] backports_1.1.2   magrittr_1.5      evaluate_0.10.1  </div><div class="line">## [10] scales_0.5.0.9000 rlang_0.1.4       stringi_1.1.6    </div><div class="line">## [13] lazyeval_0.2.1    rmarkdown_1.8     labeling_0.3     </div><div class="line">## [16] tools_3.4.3       stringr_1.2.0     munsell_0.4.3    </div><div class="line">## [19] yaml_2.1.16       compiler_3.4.3    colorspace_1.3-2 </div><div class="line">## [22] htmltools_0.3.6   knitr_1.17        tibble_1.3.4</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171218/9dEjEbJ8kI.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;p&gt;平常我们绘制图形的时候常常要将几幅图形组合在一起，有很多R包可以用于图形组合，经典的是&lt;strong&gt;gridExtra&lt;/strong&gt;，还有&lt;strong&gt;egg&lt;/strong&gt;。今天介绍一个新包&lt;a href=&quot;https://github.com/thomasp85/patchwork&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;patchwork&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="图形组合" scheme="https://ytlogos.github.io/tags/%E5%9B%BE%E5%BD%A2%E7%BB%84%E5%90%88/"/>
    
      <category term="patchwork" scheme="https://ytlogos.github.io/tags/patchwork/"/>
    
  </entry>
  
  <entry>
    <title>生物信息学学习笔记（五）</title>
    <link href="https://ytlogos.github.io/2017/12/09/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/12/09/生物信息学学习笔记（五）/</id>
    <published>2017-12-09T13:19:05.000Z</published>
    <updated>2017-12-09T14:02:17.491Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171208/mLaH1fIKh6.png?imageslim" alt="mark"></p>
<h2 id="全基因组水平的连锁不平衡-LD-和遗传结构分析"><a href="#全基因组水平的连锁不平衡-LD-和遗传结构分析" class="headerlink" title="全基因组水平的连锁不平衡(LD)和遗传结构分析"></a>全基因组水平的连锁不平衡(LD)和遗传结构分析</h2><p>当r<sup>2</sup>=0.1时，A亚基因组的衰退距离为0.35-0.4Mb，而C亚基因组的衰退距离为3.5-4Mb，说明甘蓝型油菜A亚基因组发生了更多的重组，使得衰退距离显著小于C亚基因组。重组的发生会打破LD，将那些容易发生重组，LD相对较低的区域称为LD热点，反之称为LD冷点。通过全基因水平的LD热点和冷点研究发现，78.16%的LD热点分布在A亚基因组而72.59%的LD冷点分布在C亚基因组。另外LD热点区间的基因密度是冷点区间的2倍多，GC含量也多于冷点区间，但是冷点区间内含有更多的转座子，这和LD反映的结果一致，说明了甘蓝型油菜A亚基因组的遗传变异更加丰富。<br><a id="more"></a></p>
<h2 id="关联分析的基础——连锁不平衡"><a href="#关联分析的基础——连锁不平衡" class="headerlink" title="关联分析的基础——连锁不平衡"></a>关联分析的基础——连锁不平衡</h2><p>生物在进化过程中，对于某一特定基因座，在自然和人工选择、重组与突变、遗传漂变、群体扩张和瓶颈效应等因素的影响下，某一“有利”变异（或等位基因）在正向选择的过程中被保留下来，与该基因座紧密连锁的两侧一定范围内的序列也会随着该“有利”等位基因的固定而被大量保留下来，从而使其遗传多样性大大降低，遗传学上将这种个别基因的正向选择致使其侧翼遗传多样性降低的现象称为选择牵连效应或者选择性消除。由于基因座间的选择牵连效应，使群体内个体在不同位点、基因间发生非随机性关联，即连锁不平衡，又称等位基因关联。它包括染色体内和染色体间的连锁不平衡，前者是关联分析的基础，具体指当位于同一染色体的两对等位基因同时存在的概率大于群体内因随机分布而同时出现的概率时，就称这两个位点处于LD状态。<br>连锁不平衡并不等同于遗传连锁，它们之间相辅相成，连锁不平衡是指在两个或者多个位点上的非随机关联性，这些位点既可能在同一条染色体上，也可以在不同染色体上，只要两个位点同时出现的概率大于群体随机组合的概率就说明这两个位点处于连锁不平衡状态，而遗传连锁主要考虑的是重组率，连锁的基因在染色体上的位点相距越远，他们之间发生交换的几率就越大，重组率就越高，连锁就越弱。当然两个位点处于完全连锁状态其等位基因间也存在较强的连锁不平衡。</p>
<h2 id="LD的原理及度量"><a href="#LD的原理及度量" class="headerlink" title="LD的原理及度量"></a>LD的原理及度量</h2><p>LD的统计是实际观测到的单倍型的频率与随机分离时期单倍型的频率之间的差异(D)。LD的度量一般是对D进行归一化后，用LD系数D’和r<sup>2</sup>进行检验，其中D’(AB)=D(AB)/(fA*fB),r<sup>2</sup>(AB)=D<sup>2</sup>(AB)/(fA*fa*fB*fb)，这里D’和r<sup>2</sup>的变化范围都是从0到1。LD反映样本的重组史，敏感度更高，适合小样本的研究，而r<sup>2</sup>除了能反映样本的重组史还能反映突变史，所以r<sup>2</sup>更能客观地反映不同基因间的连锁不平衡关系</p>
<h2 id="LD的影响因素"><a href="#LD的影响因素" class="headerlink" title="LD的影响因素"></a>LD的影响因素</h2><p>LD是由突变或重组造成的，在染色体某一SNP附近有新的突变发生时则LD出现。LD强度与2个SNP间的距离有关，距离越小则发生重组的机会越小，LD就越强。所以LD重度与重组率和突变率均呈反比；另外遗传漂变(群体较小，导致群体中基因频率随机波动的现象)和奠基者效应(是一种剧烈的漂变，指一个小群体从一个大群体中分离出来并逐渐发展壮大的现象)都会增强LD，基因突变可导致野生等位基因之间LD水平的降低，也可导致突变等位基因之间LD水平的提高。<br>LD的衰减指位点之间由连锁不平衡到连锁平衡的演变过程，能够很好的反映LD程度。自花授粉植物的重组率要普遍低于异花授粉植物，所以异花授粉植物的LD衰减距离就要大些，常染色质组成的着丝粒区域的LD的衰减速度快于由异染色质组成的各个染色体臂，基因富集的区域的LD衰减比较快。</p>
<ul>
<li>植物中影响LD的因素</li>
</ul>
<table>
<thead>
<tr>
<th>因素</th>
<th>对LD的影响</th>
</tr>
</thead>
<tbody>
<tr>
<td>授粉方式</td>
<td>自交植物有效重组数少于异交植物，LD衰减慢</td>
</tr>
<tr>
<td>染色体位置</td>
<td>异染色质区交换少于常染色质区，LD衰减慢</td>
</tr>
<tr>
<td>基因区</td>
<td>基因富集区，LD衰减快</td>
</tr>
<tr>
<td>瓶颈效应</td>
<td>有效群体数目减少，增加LD</td>
</tr>
<tr>
<td>遗传漂变</td>
<td>增加LD</td>
</tr>
<tr>
<td>奠基者效应</td>
<td>增加LD</td>
</tr>
<tr>
<td>群体分化</td>
<td>增加LD</td>
</tr>
<tr>
<td>群体大小</td>
<td>小群体，增加LD</td>
</tr>
<tr>
<td>选择</td>
<td>增加受选择区段的LD</td>
</tr>
<tr>
<td>突变</td>
<td>造成LD总体水平的降低，但新产生突变的染色体位置LD水平升高</td>
</tr>
<tr>
<td>基因转换</td>
<td>降低LD</td>
</tr>
<tr>
<td>等位基因频率</td>
<td>最小等位基因频率增加，增加LD</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171208/mLaH1fIKh6.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;全基因组水平的连锁不平衡-LD-和遗传结构分析&quot;&gt;&lt;a href=&quot;#全基因组水平的连锁不平衡-LD-和遗传结构分析&quot; class=&quot;headerlink&quot; title=&quot;全基因组水平的连锁不平衡(LD)和遗传结构分析&quot;&gt;&lt;/a&gt;全基因组水平的连锁不平衡(LD)和遗传结构分析&lt;/h2&gt;&lt;p&gt;当r&lt;sup&gt;2&lt;/sup&gt;=0.1时，A亚基因组的衰退距离为0.35-0.4Mb，而C亚基因组的衰退距离为3.5-4Mb，说明甘蓝型油菜A亚基因组发生了更多的重组，使得衰退距离显著小于C亚基因组。重组的发生会打破LD，将那些容易发生重组，LD相对较低的区域称为LD热点，反之称为LD冷点。通过全基因水平的LD热点和冷点研究发现，78.16%的LD热点分布在A亚基因组而72.59%的LD冷点分布在C亚基因组。另外LD热点区间的基因密度是冷点区间的2倍多，GC含量也多于冷点区间，但是冷点区间内含有更多的转座子，这和LD反映的结果一致，说明了甘蓝型油菜A亚基因组的遗传变异更加丰富。&lt;br&gt;
    
    </summary>
    
      <category term="bioinformatics" scheme="https://ytlogos.github.io/categories/bioinformatics/"/>
    
    
      <category term="LD" scheme="https://ytlogos.github.io/tags/LD/"/>
    
  </entry>
  
  <entry>
    <title>生物信息学学习笔记（四）</title>
    <link href="https://ytlogos.github.io/2017/12/06/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/12/06/生物信息学学习笔记（四）/</id>
    <published>2017-12-06T13:19:05.000Z</published>
    <updated>2017-12-06T14:06:51.094Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171204/lGak1jll4j.png?imageslim" alt="mark"></p>
<p>最近看了华中农业大学张献龙老师发在<strong>Nature Genetics</strong>上的文章<a href="https://www.nature.com/articles/ng.3807" target="_blank" rel="external">Asymmetric subgenome selection and cis-regulatory divergence during cotton domestication</a>以及第一作者王茂军博士的博士毕业论文，十分精彩，故学习之并做适当笔记。<br><a id="more"></a></p>
<ul>
<li>通过分析四倍体棉花At和Dt亚组同源基因甲基化和表达量之间的关系，推测不同亚组基因的表观修饰差异可能是基因偏向性表达的原因之一</li>
<li><p>部分名词解释：</p>
<ul>
<li>H3K27me3：组蛋白H3上第27位赖氨酸三甲基化</li>
<li>H3K4me1：组蛋白H3上第4位赖氨酸一甲基化</li>
<li>H3K4me3：组蛋白H3上第4位赖氨酸三甲基化</li>
<li>H3K9me2：组蛋白H3上第9位赖氨酸二甲基化</li>
</ul>
</li>
<li><p>不同作物基因组大小差异非常大，这主要是由于重复序列和转座子的插入与丢失造成的。对于二倍体来说，不同作物基因数量与基因组大小并不显著相关，基因数量一般在3万到4万之间</p>
</li>
<li>不同作物生物学特性与其对应的基因的扩增与丢失，基因表达的差异有关</li>
<li>同一作物的不同材料之间基因组序列变异非常大，因此需要测序群体基因组去研究</li>
<li>DNA甲基化是一种重要的表观调控机制。在植物中发生在胞嘧啶上的DNA甲基化主要存在三种形式：对称形式的CG，CHG和非对称形式的CHH(H=A,T或者C)</li>
<li>植物种DNA甲基化主要发生在转座子区域和其他高度重复序列区域</li>
<li>组蛋白修饰是另外一种非常重要的表观遗传修饰，参与异染色质区域转座子的失活调控，同时调控植物发育和环境响应相关途径。组蛋白甲基化存在于赖氨酸和精氨酸上，通过依赖组蛋白赖氨酸甲基转移酶和精氨酸甲基转移酶建立，这些酶都被称为写入器，组蛋白甲基化之后能够被特定蛋白识别，然后参与不同生物学过程的调控，这些识别蛋白被称为阅读器。组蛋白甲基化的存在是动态的，可以被一些蛋白清除，这些蛋白被称为清除器</li>
<li>DNA甲基化和组蛋白修饰在基因上的分布和对基因表达的影响<br><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171205/Cbb3BIfc95.png?imageslim" alt="mark"></li>
<li>利用DNase Ⅰ酶切染色质并收集酶切片段进行测序(DNase-Seq),可以高通量鉴定顺式调控元件。DNase-Seq可以用于鉴定DNase Ⅰ酶切超敏感位点，这些位点通常对应顺式调控元件。DNase Ⅰ酶切位点不是均匀的，被转录因子结合的位点会阻止酶切，这些位点的酶切效率很低。通过分析DNase Ⅰ酶切足迹，可以在单核苷酸水平鉴定转录因子结合位点</li>
<li>顺式作用元件调控基因转录的模式图</li>
</ul>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171205/643Bk42CEm.png?imageslim" alt="mark"></p>
<p>除了启动子区域外，增强子是另外一种重要的顺势调控元件。DNase-Seq鉴定的DHS包含大量增强子区域，增强子能够招募装录因子，从而促进靶标基因的表达，这种作用常常以细胞特异或组织特异的形式存在。增强子的作用与靶标基因的物理位置和方向关系较小，因此增强子元件可以位于基因组的不同位置。</p>
<ul>
<li>基因表达的可变剪接是在pri-mRNA水平进行的能增强蛋白多样性的一种机制。可变剪接事件可以分为五种基本类型，包含内含子保留(IR)，外显子跳跃(ES),可变供体(AD)，可变受体(AA)和可变位置(AP)，其中IR在植物中占据绝大部分</li>
<li>祖先染色体构建</li>
</ul>
<p>为了分析驯化选择在不同亚基因祖上的差异性，构建棉花的At和Dt亚组的祖先染色体。因为两个亚组的基因组大小差异巨大，在构建祖先染色体的时候，只使用了共线性区段的基因对。共线性区段是通过MCScanX软件鉴定出来的，规定最小共线性区段必须包括5个基因。同时将两个亚组的基因做相互blastp分析，保留最好的匹配结果。结合共线性区段和blastp的结果，得到最终的亚组之间的同源基因。这些同源基因必须同时被这两种方法检测。提取这些同源基因上下游2kb的区段与基因区域一起构建祖先染色体。祖先染色体上的基因顺序依据于Dt亚基因祖上的基因排列顺序</p>
<ul>
<li>可以通过DNase-Seq测序鉴定棉花基因组上的顺式调控元件主要是根据顺式调控元件通常位于开放的染色质区域，很容易被核酸酶切</li>
</ul>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171204/lGak1jll4j.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近看了华中农业大学张献龙老师发在&lt;strong&gt;Nature Genetics&lt;/strong&gt;上的文章&lt;a href=&quot;https://www.nature.com/articles/ng.3807&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Asymmetric subgenome selection and cis-regulatory divergence during cotton domestication&lt;/a&gt;以及第一作者王茂军博士的博士毕业论文，十分精彩，故学习之并做适当笔记。&lt;br&gt;
    
    </summary>
    
      <category term="bioinformatics" scheme="https://ytlogos.github.io/categories/bioinformatics/"/>
    
    
      <category term="Hi-C" scheme="https://ytlogos.github.io/tags/Hi-C/"/>
    
      <category term="DHSs" scheme="https://ytlogos.github.io/tags/DHSs/"/>
    
  </entry>
  
  <entry>
    <title>生物信息学学习笔记（三）</title>
    <link href="https://ytlogos.github.io/2017/12/04/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/12/04/生物信息学学习笔记（三）/</id>
    <published>2017-12-04T13:19:05.000Z</published>
    <updated>2017-12-04T11:23:45.031Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171203/eeCi4f49Ag.png?imageslim" alt="mark"></p>
<ul>
<li>CpG位点(CpG sites，CG位点)：指DNA的某个区域，其上的碱基序列以胞嘧啶接着鸟嘌呤出现。CpG是“—C—磷酸—G—”的缩写，指磷酸二脂键连接了胞嘧啶和鸟嘌呤，其中C位于5’端而G位于3’端。在CpG位点中的胞嘧啶可以被甲基化为5-甲基胞嘧啶，基因内CpG位点的甲基化会改变基因的表达<a id="more"></a>
</li>
</ul>
<h2 id="顺式调控元件"><a href="#顺式调控元件" class="headerlink" title="顺式调控元件"></a>顺式调控元件</h2><ul>
<li>启动子(promoter)：指导RNA聚合酶并起始DNA转录的一段DNA序列，该序列往往位于编码基因的上游，可以调控目标基因表达的程度、时间和组织等。通常核心启动子都具有一些特征序列，这些特征序列称为基序(motif),常见的基序有TATA盒(TATA box)等。</li>
<li>增强子和沉默子：指DNA分子上可以与特定蛋白相结合从而正向或负向调控基因表达的顺式作用元件。其中增强子与蛋白结合之后，基因的转录水平会增强，其位置可以位于启动子上游、基因内、基因下游或基因区间，甚至于被调控基因不在同一条染色体上，这是由于增强子主要依靠空间作用来调控基因表达。</li>
<li><p>绝缘子：绝缘子是一种长程调控元件，主要有两类。第一类主要功能是阻遏邻近的调控元件如增强子。绝缘子发挥功能时具有方向性，其可以阻断增强子与启动子的作用，从而导致增强子的目标基因表达下调。第二类是异染色质的边界原件。由于异染色质包装折叠较常染色体显得更加紧密，异染色质中的基因很少表达，而第二类绝缘子可以在异染色质的边界阻断异染色质结构的延伸，保证边界另一侧的基因表达不受影响。<br><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171130/j7HbHF03CH.png?imageslim" alt="顺式作用元件"></p>
</li>
<li><p>转录水平的调控是真核基因表达调控的关键环节，染色质对DNase Ⅰ的敏感性与基因转录有关。基因活化使其染色质一呈开放的疏松型构象，更易被DNase Ⅰ降解，形成DNase Ⅰ超敏感位点(DNase Ⅰ hypersensitive site，DHSs).DHSs不仅与染色质的开放度相关，还与启动子、增强子、绝缘子以及沉默子等元件相偶联，并且染色质上具有调控功能的DNA序列、调控蛋白结合位点也与DHSs重叠</p>
</li>
<li>DHSs是一段跨度为数百碱基对，甲基化程度较低，对DNase Ⅰ具有高度敏感性的染色质区域，可富集转录因子和重要酶类，具有转录调控功能</li>
<li>染色质由一系列盘绕着DNA的核小体组成，转录因子在与基因结合时，取代了核小体的位置，baoluchuDNA，使其对DNase Ⅰ的切割更为敏感，在此基础上，利用染色质对DNase Ⅰ的敏感性鉴定活化的调控序列</li>
<li>DNase-seq方案包括用DNase Ⅰ优先切割核小体被取代的DNA序列，对生成的短片段进行测序并将其定位到基因组上以鉴定对敏感酶的“染色质开放”区域。一些转录因子的结合位点显示出高度特异性的DNase Ⅰ剪切模式。这种“Dnase 足迹”常被用来检测特定转录因子的结合</li>
<li>ATAC-seq(assay for transposase-accesiible chromatin using sequencing)：通过Tn5转座酶优先标记和测序核小体之间的DNA。类似于DNase-seq，但是步骤更为简单，所需细胞也更少</li>
<li>对DNase-seq片段进行双端测序，发现短片段主要源自于核小体之间的区域，而长片段跨越了核小体。研究指出短片段对鉴定转录因子的结合更有用，长片段可以提供核小体的间隔信息</li>
<li>研究人员发现由于DNase Ⅰ和Tn5的切割偏好性，之前许多Dnase印记分析反映的更多是切割偏好而不是转录因子的真实结合情况。</li>
</ul>
<h2 id="3D基因组"><a href="#3D基因组" class="headerlink" title="3D基因组"></a>3D基因组</h2><ul>
<li>不同染色质在细胞核内的分布不是杂乱无章的，而是被限定在特定的“疆域”内，基因相对密集的染色质通常分布在远离核膜的位置，而基因稀疏的染色质则分布在靠近核膜的位置。在基因组上分离的染色质区段在空间上可能被拉到一起共同被转录，形成“转录工厂”</li>
<li>基因组区室是指存在于染色质上的相互间隔的连续区域，通常这些区域大小为1~10Mb，每个区域内的点具有相似的全基因组交互模式，根据交互模式的差异，这些区域可以分为两类：A类区室和B类区室。相同类型的区室具有相似的全基因组交互模式，其交互频率要显著高于不同类型区室之间的交互。A类区室往往代表基因富集的常染色质区域，B类区室则对应着基因稀疏的异染色质区域</li>
<li>拓扑相关结构域(TAD)则是位于高等动物染色质的更精细的结构单元，TAD被定义为这样一块块连续的染色质区域，区域内部互作强度要显著强于区域之间的互作。每个TAD通常只有200Kb~1Mb。</li>
<li>染色质位点的相互作用存在某种固有的模式，而这些模式与特定生物学过程/功能是无关的</li>
</ul>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171203/eeCi4f49Ag.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CpG位点(CpG sites，CG位点)：指DNA的某个区域，其上的碱基序列以胞嘧啶接着鸟嘌呤出现。CpG是“—C—磷酸—G—”的缩写，指磷酸二脂键连接了胞嘧啶和鸟嘌呤，其中C位于5’端而G位于3’端。在CpG位点中的胞嘧啶可以被甲基化为5-甲基胞嘧啶，基因内CpG位点的甲基化会改变基因的表达
    
    </summary>
    
      <category term="bioinformatics" scheme="https://ytlogos.github.io/categories/bioinformatics/"/>
    
    
      <category term="Hi-C" scheme="https://ytlogos.github.io/tags/Hi-C/"/>
    
      <category term="DHSs" scheme="https://ytlogos.github.io/tags/DHSs/"/>
    
  </entry>
  
  <entry>
    <title>生物信息学学习笔记（二）</title>
    <link href="https://ytlogos.github.io/2017/11/29/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/29/生物信息学学习笔记（二）/</id>
    <published>2017-11-29T13:19:05.000Z</published>
    <updated>2017-11-29T12:05:48.985Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171129/dlGEdblL4H.png?imageslim" alt="mark"></p>
<h2 id="Hi-C"><a href="#Hi-C" class="headerlink" title="Hi-C"></a>Hi-C</h2><ul>
<li>拓扑相关结构域(TAD)是基因组上空间上分隔的一些DNA序列，TAD平均长度在1M左右，其中包含一个或数个基因以及基因的调控元件——增强子(enhancer)。增强子不仅控制基因的表达时间还控制基因在不同细胞中的选择性表达。TAD由边界原件(boundary elements，也称为绝缘子)相互隔离，因此TAD内部的基因活性独立于其它TAD</li>
</ul>
<a id="more"></a>
<h2 id="群体进化"><a href="#群体进化" class="headerlink" title="群体进化"></a>群体进化</h2><p>今天逛<a href="http://biotrainee.com/forum.php/" target="_blank" rel="external">生信技能树</a>的时候发现了<strong>ydchen</strong>写的一篇关于群体进化名词解释的<a href="http://www.biotrainee.com:8080/thread-321-1-1.html" target="_blank" rel="external">帖子</a>，写的很不错，所以我这里就copy一下了。要想生信学得好，还得多逛<a href="http://biotrainee.com/forum.php/" target="_blank" rel="external">生信技能树</a></p>
<ul>
<li>等位基因频率：在一个群体中某类等位基因占该基因位点上全部等位基因数的比率</li>
<li>基因型频率：群体中某一基因型个体占群体总个数的比例。可以反映某一基因型个体在群体中的相对数量</li>
<li>群体：指生活在一定空间范围内，能够互相交配并生育具有正常生殖能力后代的同种个体群</li>
<li>遗传平衡定律(又称为哈迪·温伯格定律)：一个不发生突变、迁移和选择的无限大的相互交配的群体中，群体的基因频率和基因型频率将逐代保持不变</li>
<li>适合度：指一个个体能够生存并将基因传给下一代的能力，可用相同环境中不同个体的相对生育率来衡量</li>
<li>突变压力：一定条件下，一个群体的突变率可明显增加形成突变压力，使某个基因频率增高</li>
<li>选择压力：受某种环境条件的影响，某些突变型被选择所作用，使突变基因的频率降低</li>
<li>选择系数：指在选择作用下降低的适合度</li>
<li>群体分层：指群体内存在亚群的现象，亚群内部个体间的相互关系大于整个群体内部个体间的平均亲缘关系</li>
<li>核苷酸多态性(π)：衡量特定群体多态性高低的参数，是指在同一群体中随机挑选的两条DNA序列在各个核苷酸位点上变异的均值。π值越大说明其对应的亚群多态性越高</li>
<li>群体间固定指数(Fst)：衡量群体中等位基因频率是否偏离遗传平衡论比例的指标，用来研究不同群体间的分化程度。其取值为0到1，0代表两个群体未分化，其成员间是完全随机交配的；1代表两个群体完全分化，形成物种隔离，且无共同的多样性存在</li>
<li>θw：Watterson’s 多态性估值，从理论上讲，在中性条件下应当有θw=4Neμ的平衡状态，Ne表示有效群体大小，μ表示每一代的序列突变率</li>
<li>连锁不平衡：相邻位点间的非随机关联，当一个位点上的某一等位基因与另一位点上的某一等位基因共同出现的概率大于随机组合的概率，则这两个位点存在连锁不平衡</li>
<li>瓶颈效应：由于环境骤变(如火灾、地震、洪水等)或者人类活动(如人工选择、驯化)，使得某一生物种群的规模迅速较少，仅有一小部分个体能够顺利通过瓶颈事件，在之后的恢复期内产生大量后代</li>
<li>随机遗传漂变：当一个种群中的生物个体的数量较少时，下一代的个体容易因为有的个体没有产生后代，或是有的等位基因没有传给后代，而和上一代有不同的等位基因频率。一个等位基因可能(在经过一个以上的世代后)因此在这个群体中消失或者固定成为唯一的等位基因。这种现象就是随机遗传漂变</li>
<li>奠基者效应：有少数个体的基因频率决定了他们后代中的基因频率的效应，是一种极端的遗传漂变作用</li>
<li>迁移压力(又称为基因流)：由于某种原因，具有某一基因频率的群体的一部分移入基因频率与其不同的群体中并杂交定居，就会引起迁入群体的基因频率发生改变</li>
<li>有效群体大小：指与实际群体具有相同的基因频率方差或相同杂合度衰减率的理想群体大小，它反映了群体平均近交系数增量的大小以及群体遗传结构中基因的平均纯度</li>
<li>中性学说：认为分子水平上的大多数突变是中性的或近中性的，自然选择对它们不起作用，这些突变靠一代又一代的随机漂变而被保存或趋于消失，从而形成分子水平上的进化性变化或种内变异</li>
<li>Tajima’s D值检验：在原有的平衡状态中θT=θW=4Neμ，所以D值为0，但是如果群体中存在许多低频率的等位基因(稀有等位基因)，使θT&lt;θW，则D<0。相反，当群体中是中等频率的等位基因占主导时，θt>θW，D&gt;0。Tajima把过多低频率等位基因的存在归咎为定向选择时，选择性消除会削弱原有等位基因在群体中的频率，而是新等位基因以低频率补充进来成为稀有等位基因。相反，如果中等频率等位基因占主导，则可能是平衡选择的结果，或者是种群大小在经历瓶颈效应时使稀有等位基因丢失。因此当Tajima’s D显著大于0时，可用于推断瓶颈效应和平衡选择；Tajima’s D显著小于0时，可用于推断群体规模放大和定向选择。由于平衡选择和正向选择都属于正选择的范畴，因此只要D值显著偏离0就可能是自然选择的结果，而当D值不显著偏离0时则中性零假说不能被排除</0。相反，当群体中是中等频率的等位基因占主导时，θt></li>
<li>正选择：自然选择“选留”一些稀少的等位基因，拥有这些等位基因的个体能繁殖更多的后代，这样的突变基因往往具有与原来基因不同的功能，而且该功能使得拥有它的生物更能适应环境</li>
<li>负选择：自然选择淘汰一些稀少的等位基因，拥有这些等位基因的个体不能繁殖或者繁殖很少的后代，这些基因往往丧失了功能</li>
<li>平衡选择：是一种关于自然选择保持种群内遗传多态性的假说，是在一些等位基因上杂合的基因型的系列，这些等位基因的纯合体仅在正常的杂交群体中少量个体中存在，并且在适合度上低于杂合体，然后将会出现有利于在许多座位上发展复等位基因系列的选择压力</li>
<li>正向选择：是指生存环境中的方向性选择(自然选择)或品种的人工定向选择</li>
<li>选择性消除：指由于最近较强的正向自然选择，一个突变位点相邻DNA上的核苷酸之间的差异性下降或消除</li>
<li>微进化：群体在世代过程中等位基因频率的变化，成为微进化即发生在物种内的遗传变化</li>
<li>大进化：从现有物种中产生新物种的过程，是微进化扩展、累积的结果</li>
<li>趋同进化：在突变和选择的作用下，不同物种间具有趋同进化的趋势，这种现象称为趋同进化</li>
<li>遗传负荷：如果一个群体的突变不断积累，并且这些突变是有害的，就会出现适合度下降。这种现象称为遗传负荷</li>
</ul>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>JianShu: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>Blog: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171129/dlGEdblL4H.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hi-C&quot;&gt;&lt;a href=&quot;#Hi-C&quot; class=&quot;headerlink&quot; title=&quot;Hi-C&quot;&gt;&lt;/a&gt;Hi-C&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;拓扑相关结构域(TAD)是基因组上空间上分隔的一些DNA序列，TAD平均长度在1M左右，其中包含一个或数个基因以及基因的调控元件——增强子(enhancer)。增强子不仅控制基因的表达时间还控制基因在不同细胞中的选择性表达。TAD由边界原件(boundary elements，也称为绝缘子)相互隔离，因此TAD内部的基因活性独立于其它TAD&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="bioinformatics" scheme="https://ytlogos.github.io/categories/bioinformatics/"/>
    
    
      <category term="evolution" scheme="https://ytlogos.github.io/tags/evolution/"/>
    
      <category term="Hi-C" scheme="https://ytlogos.github.io/tags/Hi-C/"/>
    
  </entry>
  
  <entry>
    <title>生物信息学学习笔记（一）</title>
    <link href="https://ytlogos.github.io/2017/11/28/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/28/生物信息学学习笔记（一）/</id>
    <published>2017-11-28T13:19:05.000Z</published>
    <updated>2017-11-28T13:31:46.880Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171128/D6l28BlfFI.png?imageslim" alt="mark"></p>
<p>生物信息学学习笔记主要是我平常看文献以及一些资料时总结的一些东西，相对来说有点杂，所以我专门开辟出一个新的系列，以便后面可以持续更新。</p>
<a id="more"></a>
<ul>
<li><p>sequence logos方法利用每个位置的高度来表示其保守程度，这样特征高度就反映了相对的变化频率，比如说一个consensus sequence位置上可能是C或者T，sequence logos上C的高度代表了其出现的频率。</p>
</li>
<li><p>改良品种中LD显著增加，这是驯化正向选择的结果，栽培品种的π值、w值相比于野生种明显降低</p>
</li>
<li><p>顺式(cis-)指的是“分子内”，也就是说顺式作用就是自己作用于自己，就像顺式作用元件就是一段DNA序列作用于自己的临近序列，调节它的表达，比如我们常说的增强子、沉默子等。反式(tran-)指的是“分子间”的作用，所以反式作用因子就是一个蛋白质分子，是由A基因编码的，但是可以作用于B基因，调节B基因的表达。但是也存在少量的“顺式作用因子”。因子(factor)在分子生物学中就是特指DNA片段产生的物质，换句话说就是特指蛋白质，比如调节因子、转录因子等。元件(element)指的是DNA或者RNA具有某种特定功能的序列，换句话说就是DNA或者RNA的一片段。</p>
</li>
</ul>
<h2 id="染色质开放性"><a href="#染色质开放性" class="headerlink" title="染色质开放性"></a>染色质开放性</h2><ul>
<li>染色质开放性(chromatin accessibility)是指真核生物染色质DNA在核小体或转录因子等蛋白与其结合后，对其它蛋白能否再结合的开放程度。这一特征反映了染色质转录活跃程度，结合其他DNA修饰(如甲基化)信息，特定条件下的染色质开放性变化可以提供大量的基因表达调控信息，为各种蛋白质结合新位点的发现指明方向。</li>
</ul>
<blockquote>
<p>有趣的是染色质开放性变化往往是各种应激反应(stimulus response)、抗逆反应(stress response)或者发育阶段过渡(transition)发生时非常早期的细胞学事件。在癌症早期诊断和治疗、农作物逆境胁迫的早期防治等方面，染色质结构研究可以提供非常上游的宝贵信息。</p>
</blockquote>
<p>检测染色质开放性的手段主要是足迹法(footprinting)，即利用外来蛋白(如核酸酶、修饰酶等)处理细胞核，再利用酶切、电泳、测序等手段衡量这些蛋白与DNA的结合程度，以此来体现染色质开放性。<br>用于足迹法的外来蛋白主要是核酸酶，最开始简单除暴用的是Dnase Ⅰ，价格低廉，但需要大量的实验材料。DNase Ⅰ主要切割核小体未占据的DNA区域，生成的片段测序之后获得的就是染色质开放区域。后来又出现了MNase Ⅰ，其为外切酶，消化了开放区域之后，测序获得的就是当前状态下核小体或者转录因子等占据的封闭区域。因此二者互为补充。<br>得益于二代测序技术的发展，ATAC-seq(Assay for transposase Accessible Chromatin with sequencing)是其中具备高灵敏度的一种方法。ATAC-seq使用Tn5转座酶，在开放区域跳转，边切割边加上接头，利用PCR技术富集开放区域片段，因此灵敏度高，甚至可以做单细胞测序。<br>所有以核酸酶为基础的DNA足迹法都有一个致命的缺陷：核酸酶切割的偏好性(Bias)。有研究指出DNase Ⅰ切割无核小体和转录因子结合的“裸”DNA时展现出强烈的偏好性，之前许多DNase Ⅰ印记更多地反映是切割的偏好性而非真实的蛋白质结合情况，再加上植物材料由于其细胞结构的特殊性(主要是细胞壁的存在以及丰富的纤维素和多糖)，获取细胞核用于足迹法分析本身就是一个挑战。<br>MAPit(methyltransferase accessibility protocol for individual templates)技术的出现解决了上述部分难题，MAPit利用外源DNA甲基化转移酶处理细胞核，染色质开放区域中的特定“C”位点可被甲基化，封闭区域中的相应“C”位点则不被甲基化，之后进行甲基化测序(Bisulfite sequencing)，从而精确显示染色质的开放程度。该技术利用DNA甲基化组来显示染色质开放性，避免了核酸酶的偏好性问题，且结果同时提供了DNA甲基化组和染色质开放性的信息，配合转录组测序(RNA-seq)，可一次性组合出特定状态下全基因组的甲基化修饰、蛋白结合以及基因表达调控的复杂网络，是功能强大的组合型分析。</p>
<ul>
<li><p>单体型是指位于一条染色体特定区域的一组相互关联，并倾向于以整体遗传给后代的单核苷酸多态性的组合。简单地说就是同源染色体上同一位点的杂合SNP，如在某一位置同源染色体中一条为G，另一条染色体为A。单体型图谱能够将来自于亲本的遗传信息区分开，研究遗传变异。</p>
</li>
<li><p>Hi-C技术是染色体构象捕获(Chromosome Confirmation Capture,3C)的一种衍生技术，是指基于高通量进行染色体构象的捕获，它能够在全基因组范围内捕捉不同基因座位之间的空间交互，研究三维空间中调控基因的DNA元件。</p>
</li>
</ul>
<h2 id="Hi-C技术流程"><a href="#Hi-C技术流程" class="headerlink" title="Hi-C技术流程"></a>Hi-C技术流程</h2><ul>
<li>用甲醛对细胞进行交联固定，使DNA与蛋白、蛋白与蛋白之间进行交联，这样会导致相互作用的DNA片段被交联在一起。</li>
<li>进行酶切(如Hind Ⅲ等限制性内切酶)，使交联两侧产生粘性末端，加入过量限制性内切酶将未交联的DNA与交联的DNA相互分离。限制酶的选择取决于需要分析的基因座位的情况，限制序列较短(4bp)的内切酶切点密集，用于研究较短的座位(10~20kp),而限制序列较长(6bp)的内切酶用于研究较长的座位。</li>
<li>末端修复，引入生物素标记，连接</li>
<li>解交联，使DNA和蛋白、蛋白与蛋白分开，提取DNA，打断，捕获带有生物素标记的片段，进行建库</li>
<li>测序</li>
</ul>
<hr>
<ul>
<li><p>影响基因表达的染色质相互作用的例子之一是：染色体区域可以折叠将增强子以及相关转录因子带到基因附近。</p>
</li>
<li><p>拓扑关联结构域(TAD)是利用Hi-C map分析研究染色质构象信息时获取的一种图形现象，也是染色质局部相互作用较为强烈的一个作用单元，与基因转录表达调控有着密切关系。</p>
</li>
</ul>
<blockquote>
<p>2012年四个独立的研究小组利用Hi-C技术分析不同物种染色质构象信息时均发现了一种高度自我相互作用的基因组单元，并称之为拓扑关联结构域(TAD)，具有保守性</p>
</blockquote>
<ul>
<li>染色质环(chromatin loop)是染色质物理结构的特性之一。染色质中的调控元件一般都相距较远，比如启动子、增强子等距离调控基因位点均有一定间隔。随着3C技术和一些分子研究技术的证实，这些调控元件在三维空间上的距离要比它们之间的插入序列更近一些，因此形成了染色质环。染色质环通过控制启动子、增强子这些顺式调控元件来调控基因转录表达</li>
</ul>
<blockquote>
<p>拓扑关联结构域更像是染色质环在全基因组所有作用位点进行图谱分析时表现出来的一种现象</p>
</blockquote>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171128/D6l28BlfFI.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;p&gt;生物信息学学习笔记主要是我平常看文献以及一些资料时总结的一些东西，相对来说有点杂，所以我专门开辟出一个新的系列，以便后面可以持续更新。&lt;/p&gt;
    
    </summary>
    
      <category term="bioinformatics" scheme="https://ytlogos.github.io/categories/bioinformatics/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（九）</title>
    <link href="https://ytlogos.github.io/2017/11/26/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/26/Linux学习笔记（九）/</id>
    <published>2017-11-26T13:19:05.000Z</published>
    <updated>2017-11-26T13:32:19.595Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171120/B6jBAEJ3k8.png?imageslim" alt="mark"></p>
<h2 id="sed实例讲解"><a href="#sed实例讲解" class="headerlink" title="sed实例讲解"></a>sed实例讲解</h2><p>上篇<a href="https://ytlogos.github.io/2017/11/20/Linux学习笔记（八）/">博客</a>已经讲解了sed的基本命令及其使用方法，sed有两种方式进行调用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sed [-n] [-e] &apos;command(s)&apos; files</div><div class="line">sed [-n] -f scriptfile files</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="sed各个选项"><a href="#sed各个选项" class="headerlink" title="sed各个选项"></a>sed各个选项</h2><h3 id="替换命令：s命令"><a href="#替换命令：s命令" class="headerlink" title="替换命令：s命令"></a>替换命令：s命令</h3><p>sed的替换命令语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">s/pattern/replacement/</div></pre></td></tr></table></figure></p>
<p>现在有一个包含3列10行的数据集chroms.txt：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ head -n 3 chroms.txt</div><div class="line">chrom1  3214482 3216968</div><div class="line">chrom1  3216025 3216968</div><div class="line">chrom1  3216022 3216024</div></pre></td></tr></table></figure></p>
<p>我们要将chrom替换成chr：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;s/chrom/chr/&apos; chroms.txt |head -n 3</div><div class="line">chr1    3214482 3216968</div><div class="line">chr1    3216025 3216968</div><div class="line">chr1    3216022 3216024</div></pre></td></tr></table></figure></p>
<blockquote>
<p>不管是pattern还是replacement都是被两个斜杠/包围，叫做定界符，定界符不仅仅只有/，还有：|等<br>sed有部分命令会直接修改原文件，所以使用过程中最后将结果redirect到一个新的文件</p>
</blockquote>
<h4 id="n选项和p命令一起使用表示只打印那些发生替换的行"><a href="#n选项和p命令一起使用表示只打印那些发生替换的行" class="headerlink" title="-n选项和p命令一起使用表示只打印那些发生替换的行"></a>-n选项和p命令一起使用表示只打印那些发生替换的行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ cat company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div><div class="line">$ sed -n &apos;s/u/U/p&apos; company.txt</div><div class="line">baidU 100 5000</div><div class="line">sohU 100 4500</div><div class="line">gUge 50 3000</div></pre></td></tr></table></figure>
<h4 id="选项-i会匹配文件中每一行的第一个匹配"><a href="#选项-i会匹配文件中每一行的第一个匹配" class="headerlink" title="选项-i会匹配文件中每一行的第一个匹配"></a>选项-i会匹配文件中每一行的第一个匹配</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ cat company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div><div class="line">$ sed -i &apos;s/g/G/&apos; company.txt</div><div class="line">$ cat company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">Google 110 5000</div><div class="line">Guge 50 3000</div></pre></td></tr></table></figure>
<h4 id="全面替换标记g"><a href="#全面替换标记g" class="headerlink" title="全面替换标记g"></a>全面替换标记g</h4><p>使用后缀/g标记会替换每一行中的所有匹配<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;s/g/G/g&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">GooGle 110 5000</div><div class="line">GuGe 50 3000</div></pre></td></tr></table></figure></p>
<h4 id="从第n个匹配处开始匹配标记ng"><a href="#从第n个匹配处开始匹配标记ng" class="headerlink" title="从第n个匹配处开始匹配标记ng"></a>从第n个匹配处开始匹配标记ng</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;s/g/G/2g&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">gooGle 110 5000</div><div class="line">guGe 50 3000</div></pre></td></tr></table></figure>
<p>上面是从第二个匹配处开始替换，所以第一个g没有发生替换</p>
<h4 id="E选项调用扩展正则表达式"><a href="#E选项调用扩展正则表达式" class="headerlink" title="-E选项调用扩展正则表达式"></a>-E选项调用扩展正则表达式</h4><p>sed默认使用的时POSIX的基本正则表达式（BRE），通过选项-E我们可以使用扩展版的正则表达式（ERE），举个例子，假设我们有一个字符串：chr1:28427874-28425431,分别代表染色体（chr）、start position以及end position，我们要将这三者分离开来形成3列：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo &apos;chr1:28427874-28425431&apos;|sed -E &apos;s/^(chr[^:]+):([0-9]+)-([0-9]+)/\1\t\2\t\3/&apos;</div><div class="line">chr1    28427874        28425431</div></pre></td></tr></table></figure></p>
<p>看起来有点复杂，主要是涉及到正则表达式，拆开来看的话也不复杂，第一部分^(chr[^:]+):,首先匹配一行的开始，接着匹配（）里面的一切。总结起来就是该部分匹配以chr开头以及至少一个非:的字符，一次匹配到:就结束了。第二部分和第三部分都是匹配至少一个数字。最后将匹配到的三部分形成三列。<br>要实现这一功能还有sed很多方法，比如我们只需要将:和-替换成一个制表符就行了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo &apos;chr1:28427874-28425431&apos;|sed &apos;s/[:-]/\t/g&apos;</div><div class="line">chr1    28427874        28425431</div></pre></td></tr></table></figure></p>
<p>还可以拆成多个命令完成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo &apos;chr1:28427874-28425431&apos;|sed &apos;s/:/\t/g&apos; | sed &apos;s/-/\t/g&apos;</div><div class="line">chr1    28427874        28425431</div></pre></td></tr></table></figure></p>
<p>还可以通过-e选项来添加多个命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo &apos;chr1:28427874-28425431&apos;|sed -e &apos;s/:/\t/g&apos; -e &apos;s/-/\t/g&apos;</div><div class="line">chr1    28427874        28425431</div></pre></td></tr></table></figure></p>
<h4 id="打印特定的几行"><a href="#打印特定的几行" class="headerlink" title="打印特定的几行"></a>打印特定的几行</h4><p>这个类似于head，如果我们需要打印第m到n行，使用’m,np’进行匹配<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sed -n &apos;2,5p&apos; chroms.txt</div><div class="line">chrom1  3216025 3216968</div><div class="line">chrom1  3216022 3216024</div><div class="line">chrom1  3671349 3671498</div><div class="line">chrom1  3214482 3216021</div></pre></td></tr></table></figure></p>
<h3 id="删除命令：d命令"><a href="#删除命令：d命令" class="headerlink" title="删除命令：d命令"></a>删除命令：d命令</h3><h4 id="删除空白行"><a href="#删除空白行" class="headerlink" title="删除空白行"></a>删除空白行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;/^$/d&apos; file</div></pre></td></tr></table></figure>
<h4 id="指定删除第几行"><a href="#指定删除第几行" class="headerlink" title="指定删除第几行"></a>指定删除第几行</h4><p>比如删除第二行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ cat company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div><div class="line">$ sed &apos;2d&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure></p>
<h4 id="删除指定的第几行以及后面所有行"><a href="#删除指定的第几行以及后面所有行" class="headerlink" title="删除指定的第几行以及后面所有行"></a>删除指定的第几行以及后面所有行</h4><p>比如删除第二行及其后面所有行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;2,$d&apos; company.txt</div><div class="line">baidu 100 5000</div></pre></td></tr></table></figure></p>
<p>从上面很容易知道$d表示最后一行，同时删除第m行到第n行也很容易实现了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#删除最后一行</div><div class="line">$ sed &apos;$d&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div><div class="line">#删除第2到3行</div><div class="line">$ sed &apos;2,3d&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure></p>
<h4 id="匹配删除"><a href="#匹配删除" class="headerlink" title="匹配删除"></a>匹配删除</h4><p>比如我们需要删除所有开头是g的行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;/^g/&apos;d company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div></pre></td></tr></table></figure></p>
<blockquote>
<p>注意这里之间匹配用’’围住，d则不用</p>
</blockquote>
<h3 id="已匹配字符串标记-amp"><a href="#已匹配字符串标记-amp" class="headerlink" title="已匹配字符串标记&amp;"></a>已匹配字符串标记&amp;</h3><p>啥意思呢，就是&amp;代表已匹配的项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;s/\w\+/[&amp;]/g&apos; company.txt</div><div class="line">[baidu] [100] [5000]</div><div class="line">[sohu] [100] [4500]</div><div class="line">[google] [110] [5000]</div><div class="line">[guge] [50] [3000]</div></pre></td></tr></table></figure></p>
<p>正则表达式\w\+匹配每一个单词，使用[&amp;]替换它，&amp;对应于之前匹配到的每个单词</p>
<h3 id="子串匹配标记-1"><a href="#子串匹配标记-1" class="headerlink" title="子串匹配标记\1"></a>子串匹配标记\1</h3><p>即匹配给定样式的其中一部分,对于匹配到的第一个子串就标记为\1，以此类推匹配到的第二个子串就是\2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo this is digit 7 in a number|sed &apos;s/digit \([0-9]\)/\1/&apos;</div><div class="line">this is 7 in a number</div></pre></td></tr></table></figure></p>
<p>\(..\)用于匹配子串数字，上述命令中digit 7被匹配到的是子串是7<br>再举个例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ echo aaa BBB |sed &apos;s/\([a-z]\+\) \([A-Z]\+\)/\2 \1/&apos;</div><div class="line">BBB aaa</div></pre></td></tr></table></figure></p>
<p>上述命令中匹配到的子串分别是aaa、BBB，\2表示BBB，\1表示aaa。</p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>sed表达式可以使用单引号来引用，但是如果表达式内部包含变量字符串，就需要使用双引号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">test=hello </div><div class="line">echo hello WORLD | sed &quot;s/$test/HELLO&quot; </div><div class="line">HELLO WORLD</div></pre></td></tr></table></figure></p>
<h3 id="下一个：n命令"><a href="#下一个：n命令" class="headerlink" title="下一个：n命令"></a>下一个：n命令</h3><p>如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行然后继续<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;/test/&#123; n; s/aa/bb/; &#125;&apos; file</div></pre></td></tr></table></figure></p>
<h3 id="变形：y命令"><a href="#变形：y命令" class="headerlink" title="变形：y命令"></a>变形：y命令</h3><p>把1~10行内所有的abcde转为大写，注意正则表达式元字符不能使用该命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;1,10y/abcde/ABCDE/&apos; file</div></pre></td></tr></table></figure></p>
<h3 id="退出：q命令"><a href="#退出：q命令" class="headerlink" title="退出：q命令"></a>退出：q命令</h3><p>打印完第10行后退出sed<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sed &apos;10q&apos; file</div></pre></td></tr></table></figure></p>
<h3 id="打印奇数行或者偶数行"><a href="#打印奇数行或者偶数行" class="headerlink" title="打印奇数行或者偶数行"></a>打印奇数行或者偶数行</h3><p>有两种方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#奇数行</div><div class="line">$ $ sed -n &apos;p;n&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">#偶数行</div><div class="line">$ sed -n &apos;n;p&apos; company.txt</div><div class="line">sohu 100 4500</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure></p>
<p>另一种方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#奇数行</div><div class="line">$ sed -n &apos;1~2p&apos; company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">#偶数行</div><div class="line">$ sed -n &apos;2~2p&apos; company.txt</div><div class="line">sohu 100 4500</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure></p>
<p>sed内容十分丰富，这里只是稍微介绍一些主要功能，想要深入学习的话可参考<a href="http://www.gnu.org/software/sed/manual/sed.html" target="_blank" rel="external">官方文档</a></p>
<p>注：<br>本文参考了sed的<a href="http://www.gnu.org/software/sed/manual/sed.html" target="_blank" rel="external">官方文档</a>以及Linux命令大全中的<a href="http://man.linuxde.net/sed" target="_blank" rel="external">sed</a>命令用法</p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171120/B6jBAEJ3k8.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;sed实例讲解&quot;&gt;&lt;a href=&quot;#sed实例讲解&quot; class=&quot;headerlink&quot; title=&quot;sed实例讲解&quot;&gt;&lt;/a&gt;sed实例讲解&lt;/h2&gt;&lt;p&gt;上篇&lt;a href=&quot;https://ytlogos.github.io/2017/11/20/Linux学习笔记（八）/&quot;&gt;博客&lt;/a&gt;已经讲解了sed的基本命令及其使用方法，sed有两种方式进行调用：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sed [-n] [-e] &amp;apos;command(s)&amp;apos; files&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sed [-n] -f scriptfile files&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
      <category term="sed" scheme="https://ytlogos.github.io/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（八）</title>
    <link href="https://ytlogos.github.io/2017/11/20/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/20/Linux学习笔记（八）/</id>
    <published>2017-11-20T09:19:05.000Z</published>
    <updated>2017-11-20T09:48:40.764Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171120/B6jBAEJ3k8.png?imageslim" alt="mark"></p>
<h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><p>sed是一种功能强大的流式文本编辑器，能够完美结合正则表达式使用。处理时sed将当前处理的行储存在临时缓冲区中，称为模式空间（pattern space），接着sed命令处理缓冲区的内容，处理完成后打印到屏幕，接着继续处理下一行，不断重复直到文件结束。</p>
<a id="more"></a>
<h2 id="sed的用途"><a href="#sed的用途" class="headerlink" title="sed的用途"></a>sed的用途</h2><p>sed用途十分广泛：</p>
<ul>
<li>文本替换</li>
<li>选择性的文件输出</li>
<li>从文本特定位置进行编辑</li>
<li>无交互式的文本编辑</li>
</ul>
<h2 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h2><p>sed遵循简单的工作流：读取、执行以及显示，下图显示sed的工作流程：<br><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171120/4556AfHI7k.png?imageslim" alt="mark"></p>
<ul>
<li>读取：sed从输入流（文件、管道、标准输入STDIN等）中读取一行并且存储到模式空间的内部缓冲区</li>
<li>执行：默认情况下所有的sed命令都在模式空间中按顺序执行，除非指定了行的地址，否则sed命令将会在所有的行上依次执行</li>
<li>显示：发送修改后的内容到输出流，之后模式空间将被清空，继续重复上述过程直到文件结束</li>
</ul>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li>模式空间（pattern space）是一块活跃的缓冲区，在sed编辑器执行命令时它会保存待检查的文本</li>
<li>默认情况下所有的sed命令都是在模式空间中执行，因此输入文件不会发生改变</li>
<li>另外一个缓冲区是保持空间（hold buffer），在处理模式空间中的某些行时，可以利用保持空间来临时保存一些行，在每一个循环结束的时候，sed将会移除模式空间的内容，但是保持空间的内容在所有循环过程中是持久存储的，sed命令无法直接在保持空间中执行，因此sed允许数据在模式空间与保持空间之间切换</li>
<li>初始情况下模式空间和保持空间都是空的</li>
<li>如果没有提供输入文件的话sed将会从标准输入接收请求</li>
<li>如果没有提供地址范围的话，默认情况下sed将对所有的行进行操作</li>
</ul>
<h2 id="sed的选型、命令、替换标记"><a href="#sed的选型、命令、替换标记" class="headerlink" title="sed的选型、命令、替换标记"></a>sed的选型、命令、替换标记</h2><p>sed作为一个强大的流式编辑器，具有其特有的格式</p>
<h3 id="sed命令格式"><a href="#sed命令格式" class="headerlink" title="sed命令格式"></a>sed命令格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sed [options] &apos;commands&apos; file(s)</div><div class="line">sed [options] -f scriptfile file(s)</div></pre></td></tr></table></figure>
<h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><ul>
<li>-e：以选项中指定的script来处理输入的文本文件</li>
<li>-f：以选项中指定的script文本来处理输入的文本文件</li>
<li>-n或者–quiet或者–silent：仅显示script处理后的结果</li>
</ul>
<h3 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h3><ul>
<li>a\：在当前行下面插入文本</li>
<li>i\：在当前行上面插入文本</li>
<li>c\：将选定的行改为新的版本</li>
<li>d：删除选择的行</li>
<li>D：删除模板块的第一行</li>
<li>s：替换指定字符</li>
<li>h：拷贝模板块中的内容到内存中的缓冲区</li>
<li>H：追加模板块中的内容到内存中的缓冲区</li>
<li>g：获取缓冲区的内容并替代当前模板块的内容</li>
<li>G：获取缓存区的内容，并追加到当前模板块文本后面</li>
<li>l：列出不能打印字符的清单</li>
<li>n：读取下一个输入行，并用下一个命令处理新的行而不是用第一个命令</li>
<li>N：追加下一个输入行到模板块后面并在两者间嵌入一个新行，改变当前行号码</li>
<li>p：打印模板块的行</li>
<li>P：打印模板块的第一行</li>
<li>q：退出sed</li>
<li>b label：分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾</li>
<li>r file：从file中读取行</li>
<li>t table：if分支，从最后一行开始，条件一旦满足或者T、t命令，将导致分支到带有标号的命令处或者到脚本的末尾</li>
<li>T table：错误分支，从最后一行开始，一旦发生错误或者T、t命令，将导致分支到带有标号的命令处或者到脚本的末尾</li>
<li>w file：写并追加到file末尾</li>
<li>W file：写并追加模板块的第一行到file末尾</li>
<li>！：表示后面的命令对所有没有被选定的行发生作用</li>
<li>=：打印当前行号码</li>
</ul>
<h3 id="sed替换标记"><a href="#sed替换标记" class="headerlink" title="sed替换标记"></a>sed替换标记</h3><ul>
<li>g：表示行内全面替换</li>
<li>p：表示打印行</li>
<li>w：表示将行写入一个文件</li>
<li>x：表示互换模板块中的文本和缓冲区的文本</li>
<li>y：表示将一个字符翻译为另外的字符（不用于正则表达式）</li>
<li>\l：子串匹配标记</li>
<li>&amp;：已匹配字符串标记</li>
</ul>
<h3 id="sed元字符集（就是一些正则表达式）"><a href="#sed元字符集（就是一些正则表达式）" class="headerlink" title="sed元字符集（就是一些正则表达式）"></a>sed元字符集（就是一些正则表达式）</h3><ul>
<li>^：匹配行的开始，如/^sed/匹配所有以sed开头的行</li>
<li>$：匹配行结束，如/sed$/匹配所有以sed结尾的行</li>
<li>.：匹配一个非换行符的任意字符，如/s.d/匹配在sd之间接一个任意字符</li>
<li><em>：匹配0个或多个字符，如/</em>sed/匹配所有模板是一个或多个字符后接sed的行</li>
<li>[]：匹配一个指定范围内的字符，如/[sH]ed/匹配sed和Hed</li>
<li>[^]：匹配一个不在指定范围内的字符，如/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字符开头紧跟sed的行</li>
<li>\(..\)：匹配子串，保存匹配的字符，如s/(love)able/\1rs，loveabel被替换成了lovers</li>
<li>&amp;：保存搜索字符用来替换其它字符，如s/love/**&amp;**/，love替换成了**love**</li>
<li>\&lt;：匹配单词的开始，如/\&lt;love/匹配包含以love开头的单词的行</li>
<li>\&gt;：匹配单词的结束，如/love\&gt;/匹配包含以love结尾的单词的行</li>
<li>x\{m\}：重复字符x，m次，如/0\{5\}匹配包含5个0的行】</li>
<li>x\{m,\}：重复字符x至少m次，如/0\{5,\}/匹配至少5个0的行</li>
<li>x\{m,n\}：重复字符x至少m次，之多n次，如/0\{5,10\}/匹配5-10个0的行</li>
</ul>
<p>后面将讲解sed实例进行解释各个选项及其使用。</p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171120/B6jBAEJ3k8.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;sed&quot;&gt;&lt;a href=&quot;#sed&quot; class=&quot;headerlink&quot; title=&quot;sed&quot;&gt;&lt;/a&gt;sed&lt;/h2&gt;&lt;p&gt;sed是一种功能强大的流式文本编辑器，能够完美结合正则表达式使用。处理时sed将当前处理的行储存在临时缓冲区中，称为模式空间（pattern space），接着sed命令处理缓冲区的内容，处理完成后打印到屏幕，接着继续处理下一行，不断重复直到文件结束。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
      <category term="sed" scheme="https://ytlogos.github.io/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（七）</title>
    <link href="https://ytlogos.github.io/2017/11/16/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/16/Linux学习笔记（七）/</id>
    <published>2017-11-16T01:19:05.000Z</published>
    <updated>2017-11-20T09:49:30.533Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171113/97fC0bjE56.png?imageslim" alt="mark"></p>
<h2 id="awk命令"><a href="#awk命令" class="headerlink" title="awk命令"></a>awk命令</h2><p><strong>awk</strong>是一种编程语言，用于在unix下处理数据以及文本。数据可以来自stdin、一个或者多个文件或者其它命令的输出，同时支持自定义函数和正则表达式，更多是作为脚本来使用。</p>
<a id="more"></a>
<h2 id="awk命令格式以及选项"><a href="#awk命令格式以及选项" class="headerlink" title="awk命令格式以及选项"></a>awk命令格式以及选项</h2><p><strong>awk</strong>使用一个或多个如下结构：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pattren &#123; action &#125;</div></pre></td></tr></table></figure>
<p>每一个pattern是一个表达式或者正则表达式，pattern类似于其它编程语言中的if语句：如果表达式为TRUE或者正则表达式匹配到的话，后面的action命令会被执行。</p>
<h2 id="awk语法形式"><a href="#awk语法形式" class="headerlink" title="awk语法形式"></a>awk语法形式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">awk [options] &apos;script&apos; var=value file(s)</div><div class="line">awk [options] -f scriptfile var=value file(s)</div></pre></td></tr></table></figure>
<p>常用命令选项：</p>
<ul>
<li>-F fs：fs指定输入分隔符，fs可以是字符串或者正则表达式</li>
<li>-v var=value：赋值一个用户定义变量，将外部变量传递给awk</li>
<li>-f scriptfile：从脚本文件中读取awk命令</li>
<li>-m[fr] val：对val值设置内在限制，-mf选项限制分配给val的最大块数目；-mr选项限制记录的最大块数目，这两个功能是扩展功能，在标准awk中不适用。</li>
</ul>
<h2 id="awk模式以及操作"><a href="#awk模式以及操作" class="headerlink" title="awk模式以及操作"></a>awk模式以及操作</h2><p>上面已经讲了pattern以及action，awk就是有一个或多个模式与操作组成的。</p>
<h3 id="模式pattern"><a href="#模式pattern" class="headerlink" title="模式pattern"></a>模式pattern</h3><p>pattern可以是以下任意一种：</p>
<ul>
<li>正则表达式</li>
<li>关系表达式：使用运算符操作，可以是字符串或者数字的比较测试</li>
<li>模式匹配表达式：用运算符<code>~</code>(匹配)和<code>!</code>(不匹配)</li>
<li>BEGIN语句块、pattern语句块以及END语句块，涉及十分复杂，后续再讲解</li>
</ul>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>操作由一个或多个命令、函数表达式组成，相互之间使用换行符或者分号分开，并位于大括号内。主要部分是：</p>
<ul>
<li>变量或者数组赋值</li>
<li>输出命令</li>
<li>内置函数</li>
<li>控制流语句</li>
</ul>
<h2 id="awk脚本基本结构"><a href="#awk脚本基本结构" class="headerlink" title="awk脚本基本结构"></a>awk脚本基本结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk &apos;BEGIN&#123; print &quot;start&quot;&#125; pattern&#123; command &#125; END&#123; print &quot;end&quot;&#125;&apos; file</div></pre></td></tr></table></figure>
<p>一个awk脚本通常是由：BEIGIN语句块、能够使用模式匹配的通用语句块、END语句块三部分组成，这三部分是可选的，任意一部分都可以不出现在脚本中。脚本通常是在’’或””中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">awk &apos;BEGIN&#123; i=0 &#125; &#123; i++ &#125; END&#123; print i &#125;&apos; filename</div><div class="line">awk &quot;BEGIN&#123; i=0 &#125; &#123; i++ &#125; END&#123; print i &#125;&quot; filename</div></pre></td></tr></table></figure>
<h3 id="awk的工作原理"><a href="#awk的工作原理" class="headerlink" title="awk的工作原理"></a>awk的工作原理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk &apos;BEGIN&#123; commands &#125; pattern&#123; commands &#125; END&#123; commands &#125;&apos;</div></pre></td></tr></table></figure>
<p>工作原理：</p>
<ul>
<li>第一步是执行<code>BEGIN{ commands }</code>语句块中的语句</li>
<li>第二步是从文件或者标准输入中读取一行，然后执行<code>pattern{ commands }</code>语句块，它是逐行扫描文件，从第一行到最后一行重复此命令直到文件被完全读取完毕</li>
<li>最后当读至输入流末尾时，执行<code>END{ commands }</code>语句块</li>
</ul>
<p>注意事项：</p>
<ul>
<li><code>BEGIN{ commands }</code>语句块在awk开始从输入流中读取之前被执行，是一个可选语句块，比如变量初始化、打印输出表格的表头等语句通常可以写在此语句块中</li>
<li><code>END{ commands }</code>语句块在awk从输入流中读取所有行之后被执行，比如打印所有行的分析结果这类信息汇总都是在此语句块中完成，也是一个可选语句块</li>
<li><code>pattern{ commands }</code>语句块是最重要的组成部分，也是可选的，如果没有提供此语句块，则默认执行{ print },即打印每一个读取到的行，awk读取到的每一行都会执行该语句块</li>
</ul>
<p>我们举个例子来说明一下：打印出<em>example.bed</em>文件的每一行，并且在开始读取之前打印出start，读取完毕之后打印出end</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;BEGIN&#123;print &quot;start&quot;&#125;&#123;print&#125;END&#123;print &quot;end&quot;&#125;&apos; example.bed</div><div class="line">start</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr3    11      28</div><div class="line">chr1    40      49</div><div class="line">chr3    16      27</div><div class="line">chr1    9       28</div><div class="line">chr2    35      54</div><div class="line">chr1    10      19</div><div class="line">end</div></pre></td></tr></table></figure>
<blockquote>
<p>敲黑板了！！！当print不带任何参数时，它就打印当前行，当print的参数以逗号进行分隔时，打印时则以空格作为定界符，在awk的print语句块中双引号是被当作拼接符来使用的。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ echo|awk &apos;&#123;var1=&quot;v1&quot;;var2=&quot;v2&quot;;var3=&quot;v3&quot;;print var1,var2,var3;&#125;&apos;</div><div class="line"></div><div class="line">v1 v2 v3</div><div class="line">$ echo|awk &apos;&#123;var1=&quot;v1&quot;;var2=&quot;v2&quot;;var3=&quot;v3&quot;;print var1&quot;=&quot;var2&quot;=&quot;var3;&#125;&apos;</div><div class="line"></div><div class="line">v1=v2=v3</div></pre></td></tr></table></figure>
<p>{}类似于循环体，会对文件每一行进行迭代，通常变量初始化语句(比如i=0)以及打印文件头部的语句放在BEGIN语句块中，而将打印的结果等语句放在END语句块中。</p>
<h2 id="awk内置变量"><a href="#awk内置变量" class="headerlink" title="awk内置变量"></a>awk内置变量</h2><p>awk内置大量的变量方便我们直接调用</p>
<ul>
<li>$n：当前记录的第n个字段，比如n为1表示第一个字段，n为2表示第二字段，以此类推</li>
<li>$0：表示执行过程中当前行的文本内容</li>
<li>FS：字段分隔符，默认是空格</li>
<li>IGNORECASE：如果为真表示忽略大小写进行匹配</li>
<li>NF：表示字段数，在执行过程中对应于当前的字段数</li>
<li>NR：表示记录数，在执行过程中对应于当前的行号</li>
<li>OFMT：数字的输出格式，默认为%.6g</li>
<li>OFS：输出字段分隔符，默认值为空格</li>
<li>ORS：输出记录分隔符，默认值为一个换行符</li>
<li>RS：记录分隔符：默认是空格</li>
<li>RSTART：由match函数所匹配的字符串的第一个位置</li>
<li>RLENGTH：由match函数所匹配到的字符串的长度</li>
</ul>
<p>举例说明部分变量：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ head -n 3 example.bed|awk &apos;&#123;print &quot;Line No:&quot;NR&quot;, No of fields:&quot;NF, &quot;$0=&quot;$0,&quot;$1=&quot;$1,&quot;$2=&quot;$2,&quot;$3=&quot;$3&#125;&apos;</div><div class="line">Line No:1, No of fields:3 $0=chr1       26      39 $1=chr1 $2=26 $3=39</div><div class="line">Line No:2, No of fields:3 $0=chr1       32      47 $1=chr1 $2=32 $3=47</div><div class="line">Line No:3, No of fields:3 $0=chr3       11      28 $1=chr3 $2=11 $3=28</div></pre></td></tr></table></figure>
<p>上面我们先选取前三行，然后分别打印出每一行的行号，每一行的字段数以及每一行的每一个字段。<br>由于NF表示字段数，因此<code>print $NF</code>就会打印出每一行的最后一个字段,<code>print $(NF-1)</code>就会打印出倒数第二个字段，依此类推。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ head -n 3 example.bed|awk &apos;&#123;print $NF&#125;&apos;</div><div class="line">39</div><div class="line">47</div><div class="line">28</div></pre></td></tr></table></figure>
<p>统计一个文件有多少行可以使用以下命令语句：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;END&#123;print NR&#125;&apos; Mus_musculus.GRCm38.75_chr1.gtf</div><div class="line">81231</div></pre></td></tr></table></figure>
<p>上面我们只是用了END语句块，在读入每一行时awk会将NR更新为对应的行号，所以当读取到最后一行时就会打印出最后一行的行号NR也就是文件的总行数了。</p>
<h2 id="传递外部变量给awk"><a href="#传递外部变量给awk" class="headerlink" title="传递外部变量给awk"></a>传递外部变量给awk</h2><p>借助-v选项可以将外部值（非来自stdin）传递给awk：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ var=1000</div><div class="line">$ echo |awk &apos;&#123;print var&#125;&apos; var=&quot;$var&quot;</div><div class="line">1000</div></pre></td></tr></table></figure>
<h2 id="awk运算与判断"><a href="#awk运算与判断" class="headerlink" title="awk运算与判断"></a>awk运算与判断</h2><p>awk不仅支持算术运算还支持逻辑运算</p>
<h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>+-</td>
<td>加减</td>
</tr>
<tr>
<td>* / &amp;</td>
<td>乘 除 求余</td>
</tr>
<tr>
<td>+-！</td>
<td>一元加减 逻辑非</td>
</tr>
<tr>
<td>^<em>*</em></td>
<td>求幂</td>
</tr>
<tr>
<td>—++ –</td>
<td>增加或减少，作为前缀</td>
</tr>
</tbody>
</table>
<blockquote>
<p>所有算术运算符进行操作，操作数自动转为数值，所有非数值转为0</p>
</blockquote>
<h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>主要赋值运算符有：= += -= <em>= /= ……= *</em>=</p>
<p>举例说明：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a+=5,等价于a=a+5.其它类似</div></pre></td></tr></table></figure>
<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>就是我们常见的”或”、”与”、”非”</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;BEGIN&#123;a=1;b=2;print (a&gt;5&amp;&amp;b&gt;2),(a&gt;5||b&lt;=2);&#125;&apos;</div><div class="line">0 1</div></pre></td></tr></table></figure>
<h3 id="正则运算符"><a href="#正则运算符" class="headerlink" title="正则运算符"></a>正则运算符</h3><p>主要有~和~！即匹配正则表达式和不匹配</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;BEGIN&#123;a=&quot;100test&quot;;if(a~/^100*/)&#123;print &quot;OK&quot;;&#125;&#125;&apos;</div><div class="line">OK</div></pre></td></tr></table></figure>
<h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p>主要是&gt;、&gt;=、=、==、!=、&lt;、&lt;=等</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;BEGIN&#123;a=11;if(a&gt;=9)&#123;print &quot;OK&quot;;&#125;&#125;&apos;</div><div class="line">OK</div></pre></td></tr></table></figure>
<h3 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h3><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>$</td>
<td>字段引用</td>
</tr>
<tr>
<td>空格</td>
<td>字符串连接符</td>
</tr>
<tr>
<td>?:</td>
<td>C条件表达式</td>
</tr>
<tr>
<td>in</td>
<td>数组中是否存在某值</td>
</tr>
</tbody>
</table>
<h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171114/1JeD56aLBg.png?imageslim" alt="级别越高越优先"></p>
<h2 id="awk高级输入输出"><a href="#awk高级输入输出" class="headerlink" title="awk高级输入输出"></a>awk高级输入输出</h2><h3 id="next语句读取下一条记录"><a href="#next语句读取下一条记录" class="headerlink" title="next语句读取下一条记录"></a>next语句读取下一条记录</h3><p>awk中的next语句使用：在循环逐行匹配，如果遇到next，就会跳过当前行，直接忽略下面的语句而进入下一匹配，一般用于多行匹配</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;NR%2==1&#123;next&#125;&#123;print NR,$0;&#125;&apos; example.bed</div><div class="line">2 chr1  32      47</div><div class="line">4 chr1  40      49</div><div class="line">6 chr1  9       28</div><div class="line">8 chr1  10      19</div></pre></td></tr></table></figure>
<p>后面还有很多复杂用法我暂时不讲了，再者如果遇到更复杂的情况最好使用其他更强大的工具比如python。下面我会讲讲awk如何处理生物信息学数据。</p>
<h3 id="条件筛选"><a href="#条件筛选" class="headerlink" title="条件筛选"></a>条件筛选</h3><p>我们想要将长度大于18的行找出来（即end position-start position&gt;18）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;$3-$2&gt;18&apos; example.bed</div><div class="line">chr1    9       28</div><div class="line">chr2    35      54</div></pre></td></tr></table></figure>
<p>下面是一些常用的逻辑操作符</p>
<table>
<thead>
<tr>
<th>Comparison</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>a==b</td>
<td>a is equal to b</td>
</tr>
<tr>
<td>a!=b</td>
<td>a is not equal to b</td>
</tr>
<tr>
<td>a &lt; b</td>
<td>a is less than b</td>
</tr>
<tr>
<td>a &gt; b</td>
<td>a is greater than b</td>
</tr>
<tr>
<td>a &lt;= b</td>
<td>a is less than or equal to b</td>
</tr>
<tr>
<td>a &gt;= b</td>
<td>a is greater than or equal to b</td>
</tr>
<tr>
<td>a ~ b</td>
<td>a matches regular expression pattern b</td>
</tr>
<tr>
<td>a !~ b</td>
<td>a does not match regular expression pattern b</td>
</tr>
<tr>
<td>a &amp;&amp; b</td>
<td>logical and a and b</td>
</tr>
<tr>
<td>!a</td>
<td>not a (logical negation)</td>
</tr>
</tbody>
</table>
<p>筛选出位于染1号染色体上长度大于10的行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;$1~/chr1/ &amp;&amp; $3-$2&gt;10&apos; example.bed</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr1    9       28</div></pre></td></tr></table></figure>
<p><code>$1~/chr1/</code>是一正则表达式匹配（正则表达式在符号斜杠里），表示第一列中能匹配到chr1的行，<code>~</code>表示匹配，不匹配的话使用<code>!~</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;$1!~/chr1/ &amp;&amp; $3-$2&gt;10&apos; example.bed</div><div class="line">chr3    11      28</div><div class="line">chr3    16      27</div><div class="line">chr2    35      54</div></pre></td></tr></table></figure>
<p>正则表达式结合其他复杂命令（action）可以解决很多复杂问题，比如我们想要将2和3号染色体每行长度都打印出来自成一列：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;$1!~/chr1/ &#123;print $0 &quot;\t&quot; $3-$2&#125;&apos; example.bed</div><div class="line">chr3    11      28      17</div><div class="line">chr3    16      27      11</div><div class="line">chr2    35      54      19</div></pre></td></tr></table></figure>
<p>目前我们已经讲了awk可以使用的两个功能：</p>
<ul>
<li>结合正则表达式以及算术对数据集进行过滤</li>
<li>利用算术重铸数据集的列</li>
</ul>
<h2 id="BEGIN和END"><a href="#BEGIN和END" class="headerlink" title="BEGIN和END"></a>BEGIN和END</h2><p>前面我们已经讲了BEGIN和END，BEGIN在初始化变量方面十分有用，比如如果我们想要求平均长度的话，首先我们可以求和再除以总行数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;BEGIN&#123;sum=0&#125;;&#123;sum+=($3-$2)&#125;;END&#123;print &quot;mean: &quot;sum/NR&#125;;&apos; example.bed</div><div class="line">mean: 14</div></pre></td></tr></table></figure></p>
<p>由于NR表示当前行数，因此我们就可以利用它来提取数据集中的数据，比如提取example.bed中的3-5行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;NR&gt;=3&amp;&amp;NR&lt;=5&apos; example.bed</div><div class="line">chr3    11      28</div><div class="line">chr1    40      49</div><div class="line">chr3    16      27</div></pre></td></tr></table></figure></p>
<p>使用awk我们可以很方便的实现BED与GTF文件之间的转换，比如我们可以十分快速的实现从GTF文件中提取出BED文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ awk &apos;!/^#/ &#123;print $1 &quot;\t&quot; $4-1 &quot;\t&quot; $5&#125;&apos; Mus_musculus.GRCm38.75_chr1.gtf|head -n 3</div><div class="line">1       3054232 3054733</div><div class="line">1       3054232 3054733</div><div class="line">1       3054232 3054733</div></pre></td></tr></table></figure></p>
<blockquote>
<p>这里需要注意的是BED文件索引是从0开始的，GTF索引是从1开始的，因此start position我们需要减去1.</p>
</blockquote>
<p>awk内置了很多函数可以调用：</p>
<table>
<thead>
<tr>
<th>function</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td>length(s)</td>
<td>length 0f a string s</td>
</tr>
<tr>
<td>tolower(s)</td>
<td>convert string s to lowercase</td>
</tr>
<tr>
<td>touppper(s)</td>
<td>convert string s to uppercase</td>
</tr>
<tr>
<td>substr(s,i,j)</td>
<td>return the substring of s that starts at i and ends at j</td>
</tr>
<tr>
<td>split(s,x,d)</td>
<td>split string s into chunks by delimiter d,place chunks in array x</td>
</tr>
<tr>
<td>sub(f,r,s)</td>
<td>find regular expression f in s and replace it with r(modifing s in place);use gsub for global substitution;returns a positive value if string is found</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171113/97fC0bjE56.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;awk命令&quot;&gt;&lt;a href=&quot;#awk命令&quot; class=&quot;headerlink&quot; title=&quot;awk命令&quot;&gt;&lt;/a&gt;awk命令&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;awk&lt;/strong&gt;是一种编程语言，用于在unix下处理数据以及文本。数据可以来自stdin、一个或者多个文件或者其它命令的输出，同时支持自定义函数和正则表达式，更多是作为脚本来使用。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
      <category term="awk" scheme="https://ytlogos.github.io/tags/awk/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（六）</title>
    <link href="https://ytlogos.github.io/2017/11/15/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/15/Linux学习笔记（六）/</id>
    <published>2017-11-15T05:19:05.000Z</published>
    <updated>2017-11-13T10:55:29.603Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171113/Fjbj28bH1F.png?imageslim" alt="mark"><br><a id="more"></a></p>
<h2 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h2><p>linux命令<code>uniq</code>可以将<strong>连续重复</strong>去除掉，举个例子说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ cat letters.txt</div><div class="line">A</div><div class="line">A</div><div class="line">B</div><div class="line">C</div><div class="line">B</div><div class="line">C</div><div class="line">C</div><div class="line">C</div></pre></td></tr></table></figure></p>
<p>里面存有重复数据，利用<code>uniq</code>可以有效的去除连续重复：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ uniq letters.txt</div><div class="line">A</div><div class="line">B</div><div class="line">C</div><div class="line">B</div><div class="line">C</div></pre></td></tr></table></figure></p>
<blockquote>
<p>可以看到只有连续重复才被执行只剩下一个，如果我们要去除所有的重复只保留一个，不管是不是连不连续，可以先进行排序再去重</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sort letters.txt|uniq</div><div class="line">A</div><div class="line">B</div><div class="line">C</div></pre></td></tr></table></figure>
<p>如果存在大小写字母，可以添加参数-i来忽略大小写。还有一个选项-c可以用来统计连续重复次数，同理要统计所有重复次数先进行排序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ uniq -c letters.txt</div><div class="line">      2 A</div><div class="line">      1 B</div><div class="line">      1 C</div><div class="line">      1 B</div><div class="line">      3 C</div><div class="line"># sort then uniq</div><div class="line">$ sort letters.txt|uniq -c</div><div class="line">      2 A</div><div class="line">      2 B</div><div class="line">      4 C</div></pre></td></tr></table></figure></p>
<p>再来一个，统计gtf文件中CDS、UTR等数目：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ grep -v &quot;^#&quot; Mus_musculus.GRCm38.75_chr1.gtf|cut -f3|sort|uniq -c|column -t</div><div class="line">25901  CDS</div><div class="line">36128  exon</div><div class="line">2027   gene</div><div class="line">2290   start_codon</div><div class="line">2299   stop_codon</div><div class="line">4993   transcript</div><div class="line">7588   UTR</div></pre></td></tr></table></figure></p>
<p>根据数目从大到小进行排序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ grep -v &quot;^#&quot; Mus_musculus.GRCm38.75_chr1.gtf|cut -f3|sort|uniq -c|sort -rn |column -t</div><div class="line">36128  exon</div><div class="line">25901  CDS</div><div class="line">7588   UTR</div><div class="line">4993   transcript</div><div class="line">2299   stop_codon</div><div class="line">2290   start_codon</div><div class="line">2027   gene</div></pre></td></tr></table></figure></p>
<p>再深入一点展示不停链上的数目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ grep -v &quot;^#&quot; Mus_musculus.GRCm38.75_chr1.gtf|cut -f3,7|sort|uniq -c|sort -rn|column -t</div><div class="line">18134  exon         +</div><div class="line">17994  exon         -</div><div class="line">13010  CDS          -</div><div class="line">12891  CDS          +</div><div class="line">3834   UTR          -</div><div class="line">3754   UTR          +</div><div class="line">2511   transcript   -</div><div class="line">2482   transcript   +</div><div class="line">1155   stop_codon   -</div><div class="line">1155   start_codon  -</div><div class="line">1144   stop_codon   +</div><div class="line">1135   start_codon  +</div><div class="line">1034   gene         +</div><div class="line">993    gene         -</div></pre></td></tr></table></figure></p>
<p>还可以查看特定基因上的CDS等数目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ grep &quot;ENSMUSG00000033793&quot; Mus_musculus.GRCm38.75_chr1.gtf|cut -f3|sort|uniq -c|sort -rn |column -t</div><div class="line">14  exon</div><div class="line">13  CDS</div><div class="line">3   UTR</div><div class="line">1   transcript</div><div class="line">1   stop_codon</div><div class="line">1   start_codon</div><div class="line">1   gene</div></pre></td></tr></table></figure></p>
<p>参数选项-d提供了一个数据集中的重复项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ uniq -d mm_gene_names.txt|wc -l</div><div class="line">0</div></pre></td></tr></table></figure></p>
<p>这个数据集中没有重复项！！！</p>
<h2 id="Join"><a href="#Join" class="headerlink" title="Join"></a>Join</h2><p>join顾名思义就是将不同数据集根据相同的列合并在一起，需要注意的是两个文件需要经过排序才能合并在一起，因此第一步需要检查数据集有没有排序，没有的话需要进行排序。<br>join基本语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">join -1 &lt;file_1_field&gt; -2 &lt;file_2_field&gt; &lt;file_1&gt; &lt;file_2&gt;</div></pre></td></tr></table></figure></p>
<p>其中file_1和file_2是两个需要合并的文件，file_1_field表示file_1中合并的列，file_2_field同理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sort -k1,1 example.bed &gt; example_sorted.bed</div><div class="line">$ sort -c -k1,1 example_lengths.txt</div></pre></td></tr></table></figure></p>
<p>经验证两个数据集都已经排过序了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ join -1 1 -2 1 example_sorted.bed example_lengths.txt &gt; example_with_lengths.txt</div><div class="line">$ cat example_with_lengths.txt|column -t</div><div class="line">chr1  10  19  58352</div><div class="line">chr1  26  39  58352</div><div class="line">chr1  32  47  58352</div><div class="line">chr1  40  49  58352</div><div class="line">chr1  9   28  58352</div><div class="line">chr2  35  54  39521</div><div class="line">chr3  11  28  24859</div><div class="line">chr3  16  27  24859</div></pre></td></tr></table></figure></p>
<p>如果我们将<em>example_lengths.txt</em>中的chr3去除掉再进行合并，结果会怎么样呢？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ head -n2 example_lengths.txt &gt; example_lengths_alt.txt</div><div class="line">$ join -1 1 -2 1 example_sorted.bed example_lengths_alt.txt</div><div class="line">chr1 10 19 58352</div><div class="line">chr1 26 39 58352</div><div class="line">chr1 32 47 58352</div><div class="line">chr1 40 49 58352</div><div class="line">chr1 9 28 58352</div><div class="line">chr2 35 54 39521</div></pre></td></tr></table></figure></p>
<p>结果发现chr3被join剔除掉了，因此join只会合并文件共有的项，如果想要保留chr3可以添加参数选项-a实现：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ join -1 1 -2 1 -a 1 example_sorted.bed example_lengths_alt.txt|column -t</div><div class="line">chr1  10  19  58352</div><div class="line">chr1  26  39  58352</div><div class="line">chr1  32  47  58352</div><div class="line">chr1  40  49  58352</div><div class="line">chr1  9   28  58352</div><div class="line">chr2  35  54  39521</div><div class="line">chr3  11  28</div><div class="line">chr3  16  27</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171113/Fjbj28bH1F.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
      <category term="uniq" scheme="https://ytlogos.github.io/tags/uniq/"/>
    
      <category term="join" scheme="https://ytlogos.github.io/tags/join/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（五）</title>
    <link href="https://ytlogos.github.io/2017/11/14/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/14/Linux学习笔记（五）/</id>
    <published>2017-11-14T05:19:05.000Z</published>
    <updated>2017-11-13T07:27:58.448Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171112/9Egg9ALKHB.png?imageslim" alt="mark"></p>
<h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a><strong><code>sort</code></strong></h2><p><code>sort</code>命令在<strong>linux</strong>中非常有用，它可以对文件进行排序并将排序结果标准输出。<code>sort</code>即可以从特定的文件中也可以从STDIN中获取输入。<br><code>sort</code>语法规则如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sort (选项) (参数) 文件</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>参数详解：</p>
<ul>
<li>-b：忽略每行前面开始出的空格字符； </li>
<li>-c：检查文件是否已经按照顺序排序； </li>
<li>-d：排序时，处理英文字母、数字及空格字符外，忽略其他的字符； </li>
<li>-f：排序时，将小写字母视为大写字母； </li>
<li>-i：排序时，除了040至176之间的ASCII字符外，忽略其他的字符； </li>
<li>-m：将几个排序号的文件进行合并； </li>
<li>-M：将前面3个字母依照月份的缩写进行排序； </li>
<li>-n：依照数值的大小排序； </li>
<li>-o&lt;输出文件&gt;：将排序后的结果存入制定的文件； </li>
<li>-r：以相反的顺序来排序； </li>
<li>-t&lt;分隔字符&gt;：指定排序时所用的栏位分隔字符； </li>
<li>+&lt;起始栏位&gt;-&lt;结束栏位&gt;：以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。</li>
</ul>
<p><code>sort</code>将文件/文本的每一行作为一个单位相互比较，比较原则是从首字符向后，一次按<strong>ASCII</strong>码值进行比较，最后将他们按升序格式输出。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ cat example.bed</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr3    11      28</div><div class="line">chr1    40      49</div><div class="line">chr3    16      27</div><div class="line">chr1    9       28</div><div class="line">chr2    35      54</div><div class="line">chr1    10      19</div><div class="line">#没有任何参数排序</div><div class="line">$ sort example.bed</div><div class="line">chr1    10      19</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr1    40      49</div><div class="line">chr1    9       28</div><div class="line">chr2    35      54</div><div class="line">chr3    11      28</div><div class="line">chr3    16      27</div></pre></td></tr></table></figure></p>
<blockquote>
<p><code>sort</code>默认空格（tab or spaces）作为分隔符，因此如果你的文件使用其他的分隔符，比如CSV文件（分隔符为“,”），这时就需要通过参数<code>-t</code>指定分隔符。</p>
</blockquote>
<p>实际排序过程中我们希望能够指定依次按哪一列进行排序，这里面就涉及到了参数选项-k了。-k参数的语法格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">FStart.CStart Modifie,FEnd.CEnd Modifier </div><div class="line">-------Start--------,-------End-------- </div><div class="line">FStart.CStart 选项 , FEnd.CEnd 选项</div></pre></td></tr></table></figure></p>
<p>格式被”,”分为两部分<code>Start</code>以及<code>End</code>两部分。其中<code>Start</code>部分又分为三部分,重点解释一下其中的<code>FStart</code>以及<code>CStart</code>部分，<code>CStart</code>不是必须的可以省略，省略的话表示从本域的开头部分开始，<code>FStart.CStart</code>中的<code>FStart</code>表示作用的域，<code>CStart</code>则表示在<code>FStart</code>域中从第几个字符开始排序，同理，在<code>End</code>部分类似。下面我们举个例子说明一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ head -n 3 example.bed</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr3    11      28</div><div class="line"># sort 进行排序</div><div class="line">$ sort -k1,1 -k2,2n example.bed</div><div class="line">chr1    9       28</div><div class="line">chr1    10      19</div><div class="line">chr1    26      39</div><div class="line">chr1    32      47</div><div class="line">chr1    40      49</div><div class="line">chr2    35      54</div><div class="line">chr3    11      28</div><div class="line">chr3    16      27</div></pre></td></tr></table></figure></p>
<p>在上面的命令中，我们通过参数-k来指定按哪一列来进行排序，首先第一个-k参数表示我们想要第一按第一列排序，接下来的第二个-k参数表示按第二列排序，n表示这一列是数值型数据。-k的语法十分复杂，再举个简单例子，假设我们有这样一个文件<em>company.txt</em>:有三个域，第一个域是公司名称，第二个域是公司人数，第三个域是员工平均工资。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ cat company.txt|column -t</div><div class="line">baidu   100  5000</div><div class="line">sohu    100  4500</div><div class="line">google  110  5000</div><div class="line">guge    50   3000</div></pre></td></tr></table></figure></p>
<h3 id="按第一个域业也就是按公司名称的字母进行排序"><a href="#按第一个域业也就是按公司名称的字母进行排序" class="headerlink" title="按第一个域业也就是按公司名称的字母进行排序"></a>按第一个域业也就是按公司名称的字母进行排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k1 company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div><div class="line">sohu 100 4500</div></pre></td></tr></table></figure>
<p>这很好理解</p>
<h3 id="按每个公司的人数也就是第二个域进行排序-n表示这一个域是数值型数据"><a href="#按每个公司的人数也就是第二个域进行排序-n表示这一个域是数值型数据" class="headerlink" title="按每个公司的人数也就是第二个域进行排序(n表示这一个域是数值型数据)"></a>按每个公司的人数也就是第二个域进行排序(n表示这一个域是数值型数据)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k2n company.txt</div><div class="line">guge 50 3000</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div></pre></td></tr></table></figure>
<p>从上面可以看出，baidu和sohu的员工人数相同，这时会按照默认的规则从第一个域进行升序排列，所以可以看到baidu排在sohu前面。</p>
<h3 id="按公司员工人数排序，员工人数相同的按第三个域升序排列"><a href="#按公司员工人数排序，员工人数相同的按第三个域升序排列" class="headerlink" title="按公司员工人数排序，员工人数相同的按第三个域升序排列"></a>按公司员工人数排序，员工人数相同的按第三个域升序排列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k2n -k3n company.txt</div><div class="line">guge 50 3000</div><div class="line">sohu 100 4500</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div></pre></td></tr></table></figure>
<p>可以看出与前面的差别，这里按员工平均工资进行第二次排序，所以sohu排在baidu前面。</p>
<h3 id="先按员工工资降序排序，如果员工人数相同，则再按公司人数升序排序"><a href="#先按员工工资降序排序，如果员工人数相同，则再按公司人数升序排序" class="headerlink" title="先按员工工资降序排序，如果员工人数相同，则再按公司人数升序排序"></a>先按员工工资降序排序，如果员工人数相同，则再按公司人数升序排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k3nr -k2n company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">sohu 100 4500</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure>
<p>命令中的r表示降序排序，可以看到我们将n、r这样的选项加入到了每一个-k选项中，其实就是-k语法中的Modifier选项。</p>
<h3 id="从公司名称字母的第二个字母开始排序"><a href="#从公司名称字母的第二个字母开始排序" class="headerlink" title="从公司名称字母的第二个字母开始排序"></a>从公司名称字母的第二个字母开始排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k1.2 company.txt</div><div class="line">baidu 100 5000</div><div class="line">sohu 100 4500</div><div class="line">google 110 5000</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure>
<p>-k1.2表示对第一个域的第二个字符开始到本域的最后一个字符为止的字符串进行排序，可以看到sohu与google的第二个字母都是o，但是接下来的字母sohu的h排在google的o之前，因此sohu排在google前面。</p>
<h3 id="只针对公司名称的第二字母进行排序，相同的话则按员工平均工资降序排序"><a href="#只针对公司名称的第二字母进行排序，相同的话则按员工平均工资降序排序" class="headerlink" title="只针对公司名称的第二字母进行排序，相同的话则按员工平均工资降序排序"></a>只针对公司名称的第二字母进行排序，相同的话则按员工平均工资降序排序</h3><blockquote>
<p>注意了，敲黑板！！！上面我们是从第一个域的第二个字符开始进行排序，而这里只针对第二个字符进行排序，如果第二字符相同的话则按员工平均工资降序排序，上面的例子是按第三个字符进行排序。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k1.2,1.2 -k3rn company.txt</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div><div class="line">sohu 100 4500</div><div class="line">guge 50 3000</div></pre></td></tr></table></figure>
<p>可以看到这次google排在sohu前面了。<br>-k选项部分讲到这里基本脉络清楚了,此时再结合其他选项<code>sort</code>就会变得十分强大。</p>
<h3 id="sort的-u选项"><a href="#sort的-u选项" class="headerlink" title="sort的-u选项"></a>sort的-u选项</h3><p>u代表unique，因此此选项会将重复的选项删除，举个例子，这里我们根据第二域进行排序，添加-u选项，这样具有相同员工数且处于后续位置的行将被删除。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sort -k2n -u company.txt</div><div class="line">guge 50 3000</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div></pre></td></tr></table></figure></p>
<blockquote>
<p>这里就将sohu这一行删除了。注意了，当-k与u结合使用时，-u只识别-k设定的域，发现相同就将后续相同的行删除。</p>
</blockquote>
<p>再举个例子看看特殊情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sort -k2n -k3n -u company.txt</div><div class="line">guge 50 3000</div><div class="line">sohu 100 4500</div><div class="line">baidu 100 5000</div><div class="line">google 110 5000</div></pre></td></tr></table></figure></p>
<p>可以看到这次没有删除任何行，这主要是由于-u会权衡所有-k选项，只会将都相同的删除，只要其中有一级不同就不会轻易删除。</p>
<h3 id="其他注意点"><a href="#其他注意点" class="headerlink" title="其他注意点"></a>其他注意点</h3><p>最后我还想再讲讲<code>sort</code>一些其他比较有用的选项。第一个是-V选项。我们通过一个例子看看。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ cat example2.bed</div><div class="line">chr2    15      19</div><div class="line">chr22   32      46</div><div class="line">chr10   31      47</div><div class="line">chr1    34      49</div><div class="line">chr11   6       16</div><div class="line">chr2    17      22</div><div class="line">chr2    27      46</div><div class="line">chr10   30      42</div><div class="line"># 进行排序</div><div class="line">$ sort -k1,1 -k2,2n example2.bed</div><div class="line">chr1    34      49</div><div class="line">chr10   30      42</div><div class="line">chr10   31      47</div><div class="line">chr11   6       16</div><div class="line">chr2    15      19</div><div class="line">chr2    17      22</div><div class="line">chr2    27      46</div><div class="line">chr22   32      46</div></pre></td></tr></table></figure></p>
<p>我们可以看到chr2排在chr11之后，主要是因为1排在2之前，<code>sort</code>对文本进行排序时无法按数字进行排序，通过选项-V可以解决这个问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ sort -k1,1V -k2,2n example2.bed</div><div class="line">chr1    34      49</div><div class="line">chr2    15      19</div><div class="line">chr2    17      22</div><div class="line">chr2    27      46</div><div class="line">chr10   30      42</div><div class="line">chr10   31      47</div><div class="line">chr11   6       16</div><div class="line">chr22   32      46</div></pre></td></tr></table></figure></p>
<p>另外一个需要考虑的是当我们处理大数据集文本时，提高运行速度是很重要的，<code>sort</code>提供了几种方法，第一是提供了-S选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sort -k1,1 -k4,4n -S2G Mus_musculus.GRCm38.75_chr1_random.gtf</div></pre></td></tr></table></figure></p>
<p>其中G表示gigabyte，另外一种方法是提供了并行多线程计算–parallel选项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sort -k1,1 -k4,4n --parallel=4 Mus_musculus.GRCm38.75_chr1_random.gtf</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171112/9Egg9ALKHB.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;sort&quot;&gt;&lt;a href=&quot;#sort&quot; class=&quot;headerlink&quot; title=&quot;sort&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;code&gt;sort&lt;/code&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sort&lt;/code&gt;命令在&lt;strong&gt;linux&lt;/strong&gt;中非常有用，它可以对文件进行排序并将排序结果标准输出。&lt;code&gt;sort&lt;/code&gt;即可以从特定的文件中也可以从STDIN中获取输入。&lt;br&gt;&lt;code&gt;sort&lt;/code&gt;语法规则如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sort (选项) (参数) 文件&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
      <category term="sort" scheme="https://ytlogos.github.io/tags/sort/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记（四）</title>
    <link href="https://ytlogos.github.io/2017/11/13/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>https://ytlogos.github.io/2017/11/13/Linux学习笔记（四）/</id>
    <published>2017-11-13T05:19:05.000Z</published>
    <updated>2017-11-12T06:21:31.888Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/171112/894bbdhjmL.png?imageslim" alt="mark"></p>
<h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a><code>grep</code></h2><p><code>grep</code>全称是<strong>global search regular expression(RE) and print out the line</strong>，中文名即全面搜索正则表达式并把行打印出来。是一种强大的文本搜索工具，可以使用正则表达式搜索文本，并将匹配的行列打印出来。<strong>Unix</strong>的<code>grep</code>家族包括<code>grep</code>,<code>egrep</code>,<code>fgrep</code>以及<code>zgrep</code>等，<code>egrep</code>,<code>fgrep</code>与<code>grep</code>的差别很小，<code>egrep</code>支持更多的re元字符， <code>fgrep</code>就是<em>fixed grep</em>或<em>fast grep</em>，它们把所有的字母都看作单词，也就是说，正则表达式中的元字符表示其自身的字面意义，不再特殊<code>grep</code>可以通过-<em>G、</em>-<em>E、</em>-<em>F</em>命令行选项来使用<code>egrep</code>,<code>fgrep</code>的功能，<code>zgrep</code>可以用来处理<strong>ZIP</strong>格式文件。</p>
<a id="more"></a>
<h3 id="grep常用用法"><a href="#grep常用用法" class="headerlink" title="grep常用用法"></a><code>grep</code>常用用法</h3><p><code>grep</code>常用用法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep [-acinv] [--color=auto] &apos;字符串或者正则表达式&apos; filename</div></pre></td></tr></table></figure></p>
<p>选项参数：</p>
<ul>
<li>-a：将binary文件以text文件的方式搜索，即不要忽略二进制数据</li>
<li>-A&lt;显示列数&gt;：除了显示匹配到的那一行之外，还显示该行之后的内容</li>
<li>-b：除了显示匹配到的那一行之外，还显示该行之前的内容</li>
<li>-c：计算匹配到<strong>字符串</strong>的次数</li>
<li>-C&lt;显示列数&gt;：除了显示匹配到的那一列之外，还显示该列之前后的内容</li>
<li>-d&lt;进行动作&gt; 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作</li>
<li>-e&lt;范本样式&gt; 指定字符串作为查找文件内容的范本样式</li>
<li>-E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式</li>
<li>-f&lt;范本文件&gt; 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式</li>
<li>-F 将范本样式视为固定字符串的列表</li>
<li>-G 将范本样式视为普通的表示法来使用</li>
<li>-h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称 </li>
<li>-H 在显示符合范本样式的那一列之前，标示该列的文件名称</li>
<li>-l 列出文件内容符合指定的范本样式的文件名称。 </li>
<li>-L 列出文件内容不符合指定的范本样式的文件名称。 </li>
<li>-q 不显示任何信息。 </li>
<li>-R/-r 此参数的效果和指定“-d recurse”参数相同。 </li>
<li>-s 不显示错误信息。</li>
<li>-w 只显示全字符合的列。 </li>
<li>-x 只显示全列符合的列。 </li>
<li>-y 此参数效果跟“-i”相同。 </li>
<li>-o 只输出文件中匹配到的部分。</li>
<li>-i：忽略大小写</li>
<li>-n：输出行号</li>
<li>-v：方向选择即显示出未匹配到<strong>字符串</strong>的那一行</li>
<li>–color=auto：匹配到的字符串颜色高亮</li>
</ul>
<p>下面我们实战演练一下，我们要从<strong>GTF</strong>文件中搜索到匹配<code>Olfr418-ps1</code>的行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ grep &apos;Olfr418-ps1&apos; Mus_musculus.GRCm38.75_chr1_genes.txt</div><div class="line">ENSMUSG00000049605      Olfr418-ps1</div><div class="line">#打印出行号</div><div class="line">$ grep -n &apos;Olfr&apos; Mus_musculus.GRCm38.75_chr1_genes.txt|head -n 5</div><div class="line">548:ENSMUSG00000067064  Olfr1416</div><div class="line">549:ENSMUSG00000057464  Olfr1415</div><div class="line">550:ENSMUSG00000042849  Olfr1414</div><div class="line">551:ENSMUSG00000058904  Olfr1413</div><div class="line">552:ENSMUSG00000046300  Olfr1412</div></pre></td></tr></table></figure></p>
<p>通过参数<code>-v</code>设置可以不匹配不需要的字符串或者正则表达式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ grep Olfr Mus_musculus.GRCm38.75_chr1_genes.txt|grep -v Olfr1413|head -n 5</div><div class="line">ENSMUSG00000067064      Olfr1416</div><div class="line">ENSMUSG00000057464      Olfr1415</div><div class="line">ENSMUSG00000042849      Olfr1414</div><div class="line">ENSMUSG00000046300      Olfr1412</div><div class="line">ENSMUSG00000062497      Olfr1411</div></pre></td></tr></table></figure></p>
<blockquote>
<p>需要注意的是，这里我们排除掉<code>Olfr1413</code>，但是如果数据集里存在类似于<code>Olfr1413a</code>这样的字符，<code>grep</code>也会将之剔除，因此我们需要设置参数<code>-w</code>进行精准匹配。下面举个例子说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ cat example.txt</div><div class="line">bio</div><div class="line">bioinfo</div><div class="line">bioinformatics</div><div class="line">computational biology</div><div class="line"># grep without -w</div><div class="line">$ grep -v bioinfo example.txt</div><div class="line">bio</div><div class="line">computational biology</div><div class="line">#可以看出这里将含有bioinfo字符串的bioinformatics也剔除掉了,使用参数-w可以避免</div><div class="line">$ grep -v -w bioinfo example.txt</div><div class="line">bio</div><div class="line">bioinformatics</div><div class="line">computational biology</div></pre></td></tr></table></figure></p>
</blockquote>
<p>我们平常接触的组学数据格式都是很复杂的，当我们匹配的时候我们希望能过浏览匹配到的字符串的前后文，<code>Linux</code>提供了参数设置：-B（前）、-A（后）以及-C（前后），每个参数后面都跟着一个数字，表示要显示几行,如果匹配到多行，则个匹配之间会用–分割开：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ grep -B2 &apos;AGATCGG&apos; contam.fastq|head -n 6</div><div class="line">@DJB775P1:248:D0MDGACXX:7:1202:12362:49613</div><div class="line">TGCTTACTCTGCGTTGATACCACTGCTTAGATCGGAAGAGCACACGTCTGAA</div><div class="line">--</div><div class="line">JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD?DDDDDDBDDDABDDCA</div><div class="line">@DJB775P1:248:D0MDGACXX:7:1202:12782:49716</div><div class="line">CTCTGCGTTGATACCACTGCTTACTCTGCGTTGATACCACTGCTTAGATCGG</div></pre></td></tr></table></figure></p>
<p><code>grep</code>如果结合正则表达式则会显得十分强大，比如如果我们要匹配<code>Olfr1413</code>以及<code>Olfr1411</code>,可以使用简单的正则表达式完成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ grep &apos;Olfr141[13]&apos; Mus_musculus.GRCm38.75_chr1_genes.txt</div><div class="line">ENSMUSG00000058904      Olfr1413</div><div class="line">ENSMUSG00000062497      Olfr1411</div></pre></td></tr></table></figure></p>
<blockquote>
<p>当然如果我们要匹配的不具有相同的前缀，那就很尴尬了，这时我们可以利用<strong>POSIX Extended Regular Expressions(ERE)</strong>进行匹配，可以添加参数-E或者直接使用<code>egrep</code>都行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ grep -E &quot;(Olfr1413|Olfr12)&quot; Mus_musculus.GRCm38.75_chr1_genes.txt</div><div class="line">ENSMUSG00000058904      Olfr1413</div><div class="line">ENSMUSG00000061616      Olfr12</div></pre></td></tr></table></figure></p>
</blockquote>
<p>很多时候我们只需要将匹配到的行打印出来，此时我们可以使用参数-o：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ grep -o &quot;Olfr.*&quot; Mus_musculus.GRCm38.75_chr1_genes.txt|head -n 3</div><div class="line">Olfr1416</div><div class="line">Olfr1415</div><div class="line">Olfr1414</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/171112/894bbdhjmL.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;grep&quot;&gt;&lt;a href=&quot;#grep&quot; class=&quot;headerlink&quot; title=&quot;grep&quot;&gt;&lt;/a&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;grep&lt;/code&gt;全称是&lt;strong&gt;global search regular expression(RE) and print out the line&lt;/strong&gt;，中文名即全面搜索正则表达式并把行打印出来。是一种强大的文本搜索工具，可以使用正则表达式搜索文本，并将匹配的行列打印出来。&lt;strong&gt;Unix&lt;/strong&gt;的&lt;code&gt;grep&lt;/code&gt;家族包括&lt;code&gt;grep&lt;/code&gt;,&lt;code&gt;egrep&lt;/code&gt;,&lt;code&gt;fgrep&lt;/code&gt;以及&lt;code&gt;zgrep&lt;/code&gt;等，&lt;code&gt;egrep&lt;/code&gt;,&lt;code&gt;fgrep&lt;/code&gt;与&lt;code&gt;grep&lt;/code&gt;的差别很小，&lt;code&gt;egrep&lt;/code&gt;支持更多的re元字符， &lt;code&gt;fgrep&lt;/code&gt;就是&lt;em&gt;fixed grep&lt;/em&gt;或&lt;em&gt;fast grep&lt;/em&gt;，它们把所有的字母都看作单词，也就是说，正则表达式中的元字符表示其自身的字面意义，不再特殊&lt;code&gt;grep&lt;/code&gt;可以通过-&lt;em&gt;G、&lt;/em&gt;-&lt;em&gt;E、&lt;/em&gt;-&lt;em&gt;F&lt;/em&gt;命令行选项来使用&lt;code&gt;egrep&lt;/code&gt;,&lt;code&gt;fgrep&lt;/code&gt;的功能，&lt;code&gt;zgrep&lt;/code&gt;可以用来处理&lt;strong&gt;ZIP&lt;/strong&gt;格式文件。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ytlogos.github.io/categories/Linux/"/>
    
    
  </entry>
  
</feed>
