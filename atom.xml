<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Logos</title>
  <subtitle>Stay hungry,Stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ytlogos.github.io/"/>
  <updated>2017-09-13T23:48:50.520Z</updated>
  <id>https://ytlogos.github.io/</id>
  
  <author>
    <name>TaoYan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>README</title>
    <link href="https://ytlogos.github.io/2017/09/14/README-MDOWN/"/>
    <id>https://ytlogos.github.io/2017/09/14/README-MDOWN/</id>
    <published>2017-09-13T23:48:50.520Z</published>
    <updated>2017-09-13T23:48:50.520Z</updated>
    
    <content type="html"><![CDATA[<p>本博客主要是用来记载我的日常学习笔记，以便于自己学习以及与他人交流</p>
<p>有兴趣的可转至我的博客：<a href="https://ytlogos.github.io/">logos</a></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410</p>
<p>Email: tyan@zju.edu.cn</p>
<p>QQ: 1051927088</p>
<p>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></p>
<p>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></p>
<p>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）</p>
<p>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本博客主要是用来记载我的日常学习笔记，以便于自己学习以及与他人交流&lt;/p&gt;
&lt;p&gt;有兴趣的可转至我的博客：&lt;a href=&quot;https://ytlogos.github.io/&quot;&gt;logos&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;联系方式：&quot;&gt;&lt;a href=&quot;#联系方
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>创建及自定义ggplot分面图形参数</title>
    <link href="https://ytlogos.github.io/2017/09/14/%E5%88%9B%E5%BB%BA%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89ggplot%E5%88%86%E9%9D%A2%E5%9B%BE%E5%BD%A2%E5%8F%82%E6%95%B0/"/>
    <id>https://ytlogos.github.io/2017/09/14/创建及自定义ggplot分面图形参数/</id>
    <published>2017-09-13T23:47:05.000Z</published>
    <updated>2017-09-14T00:02:46.797Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://os3hnmzbp.bkt.clouddn.com/5.png" alt=""></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>ggplot2</strong>有一个十分重要的功能就是分面，而今天要讲得R包<strong>ggpubr</strong>中也有一个函数facet()专门用来进行分面操作。</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">install.packages(&quot;ggpubr&quot;)</div><div class="line">#or</div><div class="line">if(!require(devtools)) install.packages(&quot;devtools&quot;)</div><div class="line">devtools::install_github(&quot;kassambara/ggpubr&quot;)</div></pre></td></tr></table></figure>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">library(ggpubr)</div><div class="line">df &lt;- ToothGrowth</div><div class="line">df$dose &lt;- as.factor(df$dose)</div><div class="line">head(df)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##    len supp dose</div><div class="line">## 1  4.2   VC  0.5</div><div class="line">## 2 11.5   VC  0.5</div><div class="line">## 3  7.3   VC  0.5</div><div class="line">## 4  5.8   VC  0.5</div><div class="line">## 5  6.4   VC  0.5</div><div class="line">## 6 10.0   VC  0.5</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggdensity(df, x=&quot;len&quot;, fill = &quot;dose&quot;, palette = &quot;jco&quot;, ggtheme = theme_light(), legend=&quot;top&quot;)</div><div class="line">p</div></pre></td></tr></table></figure>
<p><img src="http://os3hnmzbp.bkt.clouddn.com/1.png" alt=""></p>
<h2 id="分面"><a href="#分面" class="headerlink" title="分面"></a>分面</h2><h3 id="水平方向分面"><a href="#水平方向分面" class="headerlink" title="水平方向分面"></a>水平方向分面</h3><p>按照变量<code>supp</code>进行水平方向的分面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">facet(p, facet.by = &quot;supp&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://os3hnmzbp.bkt.clouddn.com/2.png" alt=""></p>
<h3 id="竖直方向分面"><a href="#竖直方向分面" class="headerlink" title="竖直方向分面"></a>竖直方向分面</h3><p>按照变量<code>supp</code>进行竖直方向的分面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">facet(p, facet.by = &quot;supp&quot;, ncol = 1)</div></pre></td></tr></table></figure></p>
<p><img src="http://os3hnmzbp.bkt.clouddn.com/3.png" alt=""></p>
<h3 id="双变量分面"><a href="#双变量分面" class="headerlink" title="双变量分面"></a>双变量分面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#divide with &quot;supp&quot; vertical, &quot;dose&quot; horizontal</div><div class="line">facet(p, facet.by = c(&quot;supp&quot;, &quot;dose&quot;), short.panel.labs = FALSE)</div></pre></td></tr></table></figure>
<p><img src="http://os3hnmzbp.bkt.clouddn.com/4.png" alt=""></p>
<h2 id="修改面板外观"><a href="#修改面板外观" class="headerlink" title="修改面板外观"></a>修改面板外观</h2><p>主要有以下参数进行修改：</p>
<ul>
<li>short.panel.label:默认为TRUE，此时变量名不会显示</li>
<li>panel.label: 通过自定义label来设置面板label,是一个list</li>
<li>panel.labs.background: 控制面板背景，里面参数设置很多</li>
<li>panel.labs.font: 设置字体</li>
</ul>
<p>下面演示一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#divide with &quot;supp&quot; vertical, &quot;sode&quot; horizontal</div><div class="line">facet(p, facet.by = c(&quot;supp&quot;, &quot;dose&quot;),</div><div class="line">      panel.labs = list(</div><div class="line">        supp=c(&quot;Orange Juice&quot;, &quot;Vitamin C&quot;),</div><div class="line">        dose=c(&quot;D0.5&quot;, &quot;D1&quot;, &quot;D2&quot;)),</div><div class="line">      panel.labs.background = list(</div><div class="line">        color=&quot;steelblue&quot;, </div><div class="line">        fill=&quot;steelblue&quot;,</div><div class="line">        size=0.5),</div><div class="line">      panel.labs.font = list(color=&quot;white&quot;),</div><div class="line">      panel.labs.font.x = list(angle=45, color=&quot;white&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://os3hnmzbp.bkt.clouddn.com/5.png" alt=""></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-pc-linux-gnu (64-bit)</div><div class="line">## Running under: Ubuntu 16.04.3 LTS</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0</div><div class="line">## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0</div><div class="line">## </div><div class="line">## locale:</div><div class="line">##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              </div><div class="line">##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    </div><div class="line">##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   </div><div class="line">##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 </div><div class="line">##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            </div><div class="line">## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] ggpubr_0.1.5  magrittr_1.5  ggplot2_2.2.1</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.12     bindr_0.1        knitr_1.17       munsell_0.4.3   </div><div class="line">##  [5] colorspace_1.3-2 R6_2.2.2         rlang_0.1.2      stringr_1.2.0   </div><div class="line">##  [9] plyr_1.8.4       dplyr_0.7.3      tools_3.4.1      grid_3.4.1      </div><div class="line">## [13] gtable_0.2.0     htmltools_0.3.6  yaml_2.1.14      lazyeval_0.2.0  </div><div class="line">## [17] rprojroot_1.2    digest_0.6.12    assertthat_0.2.0 tibble_1.3.4    </div><div class="line">## [21] bindrcpp_0.2     ggsci_2.7        reshape2_1.4.2   purrr_0.2.3     </div><div class="line">## [25] glue_1.1.1       evaluate_0.10.1  rmarkdown_1.6    labeling_0.3    </div><div class="line">## [29] stringi_1.1.5    compiler_3.4.1   scales_0.5.0     backports_1.1.0 </div><div class="line">## [33] pkgconfig_2.0.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://os3hnmzbp.bkt.clouddn.com/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;有一个十分重要的功能就是分面，而今天要讲得R包&lt;strong&gt;ggpubr&lt;/strong&gt;中也有一个函数facet()专门用来进行分面操作。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggpubr" scheme="https://ytlogos.github.io/tags/ggpubr/"/>
    
  </entry>
  
  <entry>
    <title>ggpubr包学习笔记之轻松修改图形参数</title>
    <link href="https://ytlogos.github.io/2017/09/13/ggpubr%E5%8C%85%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%BD%BB%E6%9D%BE%E4%BF%AE%E6%94%B9%E5%9B%BE%E5%BD%A2%E5%8F%82%E6%95%B0/"/>
    <id>https://ytlogos.github.io/2017/09/13/ggpubr包学习笔记之轻松修改图形参数/</id>
    <published>2017-09-13T05:00:55.000Z</published>
    <updated>2017-09-13T23:48:50.520Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/dm80Clb7Eh.png?imageslim" alt="mark"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>越学习包<strong>ggpubr</strong>越感觉其功能强大，本文主要讲解一下如何修改图形参数，我们知道<strong>ggplot2</strong>有着十分强大的绘图功能，但是其参数之复杂足以让人望而却步。<strong>ggpubr</strong>提供的函数ggpar()可以十分轻松地让我们修改图形参数，并且可以无缝对接到ggplot图形中。ggpar()可以修改以下图形参数：<br><a id="more"></a></p>
<ul>
<li>图形标题，包括坐标轴标题以及图例标题</li>
<li>图例的位置以及外观</li>
<li>颜色必需的能修改</li>
<li>坐标轴limits</li>
<li>坐标转换</li>
<li>坐标刻度</li>
<li>主题</li>
<li>翻转等</li>
</ul>
<h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#two ways to isntall the ggpubr package</div><div class="line">install.packages(&quot;ggpubr&quot;)</div><div class="line">#install the packages from the Github</div><div class="line">devtools::install_github(&quot;kassambara/ggpubr&quot;)</div></pre></td></tr></table></figure>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">library(ggpubr)#load ggpubr</div><div class="line">#basic plots</div><div class="line">p &lt;- ggboxplot(ToothGrowth, x=&quot;dose&quot;, y=&quot;len&quot;, color=&quot;dose&quot;)</div><div class="line">p</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/7hKdEb1ehB.png?imageslim" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#add grids by the function grids()</div><div class="line">p+grids(linetype=&quot;dashed&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/f77I1FIlbB.png?imageslim" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#add panel borders lines by the function border()</div><div class="line">p+border(&quot;black&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/cGa2dj6AB8.png?imageslim" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#change background color</div><div class="line">p+bgcolor(&quot;#BFD5E3&quot;)+border(&quot;#BFD5E3&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/jAIc0AjBi8.png?imageslim" alt=""></p>
<h2 id="修改标题以及坐标轴标签"><a href="#修改标题以及坐标轴标签" class="headerlink" title="修改标题以及坐标轴标签"></a>修改标题以及坐标轴标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">p2 &lt;- ggpar(p,</div><div class="line">            title = &quot;Box plot created with ggpubr&quot;,</div><div class="line">            subtitle = &quot;Length by dose&quot;,</div><div class="line">            caption = &quot;Source: ggpubr&quot;,</div><div class="line">            xlab = &quot;Dose (mg)&quot;,</div><div class="line">            ylab = &quot;Teeth length&quot;,</div><div class="line">            legend.title = &quot;Dose (mg)&quot;)</div><div class="line">p2</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/5K7D23dIcC.png?imageslim" alt="mark"></p>
<h2 id="修改标题以及标签的字体"><a href="#修改标题以及标签的字体" class="headerlink" title="修改标题以及标签的字体"></a>修改标题以及标签的字体</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ggpar(p2, </div><div class="line">      font.title = c(14, &quot;bold.italic&quot;, &quot;red&quot;),</div><div class="line">      font.subtitle = c(10, &quot;orange&quot;),</div><div class="line">      font.caption = c(10, &quot;orange&quot;),</div><div class="line">      font.x = c(14, &quot;blue&quot;),</div><div class="line">      font.y = c(14, &quot;#993333&quot;))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/dm80Clb7Eh.png?imageslim" alt="mark"></p>
<p>当然也可以直接用函数font()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">p2+</div><div class="line">  font(&quot;title&quot;, size = 14, color = &quot;red&quot;, face = &quot;bold.italic&quot;)+</div><div class="line">  font(&quot;subtitle&quot;, size = 10, color = &quot;orange&quot;)+</div><div class="line">  font(&quot;caption&quot;, size = 10, color = &quot;orange&quot;)+</div><div class="line">  font(&quot;xlab&quot;, size = 12, color = &quot;blue&quot;)+</div><div class="line">  font(&quot;ylab&quot;, size = 12, color = &quot;#993333&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/6EHIKCbjdB.png?imageslim" alt="mark"></p>
<p>从上面可以看出我们可以一次性完成添加标题以及修改字体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ggpar(p,</div><div class="line">      title = &quot;Plot of length \n by dose&quot;,</div><div class="line">      xlab = &quot;Dose (mg)&quot;,</div><div class="line">      legend.title = &quot;Dose (mg)&quot;,</div><div class="line">      font.title = c(14, &quot;bold.italic&quot;, &quot;red&quot;),</div><div class="line">      font.x = c(14, &quot;bold&quot;, &quot;#2E9FDF&quot;),</div><div class="line">      font.y = c(14, &quot;bold&quot;, &quot;#E7B800&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/K5Hh142DDJ.png?imageslim" alt="mark"></p>
<h2 id="修改图例位置与外观"><a href="#修改图例位置与外观" class="headerlink" title="修改图例位置与外观"></a>修改图例位置与外观</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggpar(p,</div><div class="line">      legend = &quot;right&quot;, legend.title = &quot;Dose (mg)&quot;)+</div><div class="line">  font(&quot;legend.title&quot;, color=&quot;blue&quot;, face = &quot;bold&quot;)+</div><div class="line">  font(&quot;legend.text&quot;, color = &quot;red&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/66Fl04A1Eg.png?imageslim" alt="mark"></p>
<h2 id="颜色修改"><a href="#颜色修改" class="headerlink" title="颜色修改"></a>颜色修改</h2><p>ggpar()中有一个参数palette，即调色板，除了可以我们自定义颜色外，还可以调用RColorBrewer中的调色板以及包<strong>ggsci</strong>中的专门用于学术杂志的配色。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#use custom color palette</div><div class="line">ggpar(p, palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/j04LBcgCFf.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#use the RColorBrewer palette</div><div class="line">ggpar(p, palette = &quot;Dark2&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/gg16gmeE3D.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggpar(p, palette = &quot;grey&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/3h1K0f5aaK.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#use the ggsci palette</div><div class="line">ggpar(p, palette = &quot;npg&quot;)#nature</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/13fcD9GfDC.png?imageslim" alt="mark"></p>
<p>当然也可以直接用<strong>ggpubr</strong>中的函数color_palette()以及fill_palette()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#jco color palette</div><div class="line">p+color_palette(&quot;jco&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/aD2IK0b75D.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#custom color</div><div class="line">p+color_palette(c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/Jj9BG7J24h.png?imageslim" alt="mark"></p>
<h2 id="颜色梯度"><a href="#颜色梯度" class="headerlink" title="颜色梯度"></a>颜色梯度</h2><p><strong>ggpubr</strong>提供了两个函数用来处理颜色梯度：gradient_color()和gradient_fill()<br>通过一个例子来看如何运作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#first create a scatter plot</div><div class="line">p3 &lt;- ggscatter(mtcars, x=&quot;wt&quot;, y=&quot;mpg&quot;, color=&quot;mpg&quot;, size = 2)</div><div class="line">#change the gradient color</div><div class="line">#use one custom color</div><div class="line">p3+gradient_color(&quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/ah3ed5b1Ai.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#use two colors</div><div class="line">p3+gradient_color(c(&quot;blue&quot;, &quot;red&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/1H7KBAdKLd.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#three colors</div><div class="line">p3+gradient_color(c(&quot;blue&quot;, &quot;white&quot;, &quot;red&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/kCaHdmcG6i.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#use the RColorBrewer palette</div><div class="line">p3+gradient_color(&quot;RdYlBu&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/FHKlGj4H8F.png?imageslim" alt="mark"><br>gradient_fill()用法也一样，不过是填充，这里就不演示了。</p>
<h2 id="修改坐标轴limits、scales"><a href="#修改坐标轴limits、scales" class="headerlink" title="修改坐标轴limits、scales"></a>修改坐标轴limits、scales</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#change y axis limits</div><div class="line">ggpar(p, ylim = c(0, 50))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/CFamb4cglg.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#change y axis cale to log2</div><div class="line">ggpar(p, yscale = &quot;log2&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/Deh1KddGKj.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#format  axis scale</div><div class="line">ggpar(p, yscale = &quot;log2&quot;, format.scale = TRUE)#format.scale=TRUE说明y轴刻度也会scale</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/IgF4D3LFiL.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#也可以直接用yscale()</div><div class="line">p+yscale(&quot;log2&quot;, .format = TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/lfk8D0i00d.png?imageslim" alt="mark"></p>
<h2 id="自定义坐标轴标签及刻度"><a href="#自定义坐标轴标签及刻度" class="headerlink" title="自定义坐标轴标签及刻度"></a>自定义坐标轴标签及刻度</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#change the font of x and y axis texts</div><div class="line">#rotate x and y texts</div><div class="line">p+</div><div class="line">  font(&quot;xy.text&quot;, size = 12, color = &quot;blue&quot;, face = &quot;bold&quot;)+</div><div class="line">  rotate_x_text(45)+</div><div class="line">  rotate_y_text(45)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/DhAlF966Cb.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#remove ticks and axis texts</div><div class="line">p+rremove(&quot;ticks&quot;)+</div><div class="line">  rremove(&quot;axis.text&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/c6cHkJj7Hk.png?imageslim" alt="mark"></p>
<h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><p>默认主题为theme_pubr(),可以调用包<strong>ggthemes</strong>里面的主题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">library(ggthemes)</div><div class="line">p+ggthemes::theme_economist()</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/k49JlfLfDg.png?imageslim" alt="mark"></p>
<h2 id="移除ggplot组件"><a href="#移除ggplot组件" class="headerlink" title="移除ggplot组件"></a>移除ggplot组件</h2><p>通过ggpubr::rremove()可以移除组件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggboxplot(ToothGrowth, x=&quot;dose&quot;, y=&quot;len&quot;, ggtheme = theme_igray())</div><div class="line">p</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/G53edij9j4.png?imageslim" alt="mark"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p+rremove(&quot;grid&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/CciAa0JEhH.png?imageslim" alt="mark"></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-pc-linux-gnu (64-bit)</div><div class="line">## Running under: Ubuntu 16.04.3 LTS</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0</div><div class="line">## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0</div><div class="line">## </div><div class="line">## locale:</div><div class="line">##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              </div><div class="line">##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    </div><div class="line">##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   </div><div class="line">##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 </div><div class="line">##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            </div><div class="line">## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] ggthemes_3.4.0 ggpubr_0.1.5   magrittr_1.5   ggplot2_2.2.1 </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.12       bindr_0.1          knitr_1.17        </div><div class="line">##  [4] munsell_0.4.3      colorspace_1.3-2   R6_2.2.2          </div><div class="line">##  [7] rlang_0.1.2        stringr_1.2.0      plyr_1.8.4        </div><div class="line">## [10] dplyr_0.7.3        tools_3.4.1        grid_3.4.1        </div><div class="line">## [13] gtable_0.2.0       htmltools_0.3.6    yaml_2.1.14       </div><div class="line">## [16] lazyeval_0.2.0     rprojroot_1.2      digest_0.6.12     </div><div class="line">## [19] assertthat_0.2.0   tibble_1.3.4       bindrcpp_0.2      </div><div class="line">## [22] ggsci_2.7          RColorBrewer_1.1-2 purrr_0.2.3       </div><div class="line">## [25] glue_1.1.1         evaluate_0.10.1    rmarkdown_1.6     </div><div class="line">## [28] labeling_0.3       stringi_1.1.5      compiler_3.4.1    </div><div class="line">## [31] scales_0.5.0       backports_1.1.0    pkgconfig_2.0.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170913/dm80Clb7Eh.png?imageslim&quot; alt=&quot;mark&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;越学习包&lt;strong&gt;ggpubr&lt;/strong&gt;越感觉其功能强大，本文主要讲解一下如何修改图形参数，我们知道&lt;strong&gt;ggplot2&lt;/strong&gt;有着十分强大的绘图功能，但是其参数之复杂足以让人望而却步。&lt;strong&gt;ggpubr&lt;/strong&gt;提供的函数ggpar()可以十分轻松地让我们修改图形参数，并且可以无缝对接到ggplot图形中。ggpar()可以修改以下图形参数：&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggpubr" scheme="https://ytlogos.github.io/tags/ggpubr/"/>
    
  </entry>
  
  <entry>
    <title>一篇关于国旗与奥运会奖牌的可视化笔记</title>
    <link href="https://ytlogos.github.io/2017/09/12/%E4%B8%80%E7%AF%87%E5%85%B3%E4%BA%8E%E5%9B%BD%E6%97%97%E4%B8%8E%E5%A5%A5%E8%BF%90%E4%BC%9A%E5%A5%96%E7%89%8C%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AC%94%E8%AE%B0/"/>
    <id>https://ytlogos.github.io/2017/09/12/一篇关于国旗与奥运会奖牌的可视化笔记/</id>
    <published>2017-09-11T23:47:05.000Z</published>
    <updated>2017-09-13T23:48:50.505Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170912/k58bFmLk2c.png?imageslim" alt=""></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文主要介绍一个R包<strong>ggflags</strong>，可以用于绘制国旗。安装的话从<a href="https://github.com/baptiste/ggflags" target="_blank" rel="external">Github</a>上利用包<strong>devtools</strong>安装。</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">devtools::install_github(&quot;baptiste/ggflags&quot;)</div></pre></td></tr></table></figure>
<p>下面看个小例子来介绍一下</p>
<h2 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">library(ggflags)#load package</div><div class="line">set.seed(1111)</div><div class="line">#create the dataset</div><div class="line">data &lt;- data.frame(x=rnorm(50), y=rnorm(50),</div><div class="line">                   country=sample(c(&quot;ar&quot;, &quot;us&quot;, &quot;cn&quot;, &quot;fr&quot;, &quot;gb&quot;, &quot;es&quot;), 50 ,replace = TRUE),</div><div class="line">                   stringsAsFactors=FALSE)</div><div class="line">head(data)</div><div class="line">    x	             y	     country</div><div class="line">-0.0865801	-0.7055274	gb</div><div class="line">1.3225244	-0.5910791	fr</div><div class="line">0.6397020	-0.2796410	us</div><div class="line">1.1747866	-1.3209782	cn</div><div class="line">0.1162903	0.5851085	gb</div><div class="line">-2.9308464	0.0198323	ar</div></pre></td></tr></table></figure>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(ggplot2)</div><div class="line">ggplot(data, aes(x=x, y=y, country=country, size=x))+</div><div class="line">  geom_flag()+</div><div class="line">  scale_country()+</div><div class="line">  scale_size(range = c(0, 10))</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170912/KB9E0de5H5.png?imageslim" alt=""></p>
<p>国旗的图片是来自于<a href="https://github.com/eosrei/emojione-color-font" target="_blank" rel="external">EmojiOne数据集</a>,有兴趣的可以去看看了解一下。<br>题目有奥运会奖牌，所以接下来就可视化一下索契冬奥运会各国奖牌，本次用国旗与国家联系起来。</p>
<h2 id="爬取数据"><a href="#爬取数据" class="headerlink" title="爬取数据"></a>爬取数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">library(dplyr)</div><div class="line">library(rvest)</div><div class="line">url &lt;- &quot;http://www.nbcolympics.com/medals&quot;</div><div class="line">medals &lt;- read_html(url)%&gt;%</div><div class="line">  html_nodes(&quot;table&quot;)%&gt;%</div><div class="line">  .[[1]]%&gt;%</div><div class="line">  html_table()</div><div class="line">knitr::kable(head(medals))</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Country	      Gold	Silver	Bronze	Total</div><div class="line">Russia	       13	11	9	33</div><div class="line">United States	9	7	12	28</div><div class="line">Norway	       11	5	10	26</div><div class="line">Canada	       10	10	5	25</div><div class="line">Netherlands	8	7	9	24</div><div class="line">Germany	        8	6	5	19</div></pre></td></tr></table></figure>
<p>爬取完数据之后进行清洗</p>
<h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><p>本文重要的一环是将国家与国旗联系起来，因此首先要将国家名缩写弄出来，这就要用到<a href="https://github.com/vincentarelbundock/countrycode" target="_blank" rel="external"><strong>countrycode</strong></a>这个包了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#install the package</div><div class="line">install.packages(&quot;countrycode&quot;)</div></pre></td></tr></table></figure>
<p>数据清洗<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">library(countrycode)</div><div class="line">library(tidyr)</div><div class="line">medals &lt;- medals%&gt;%</div><div class="line">  mutate(code=countrycode(Country, &quot;country.name&quot;, &quot;iso2c&quot;))%&gt;%</div><div class="line">  mutate(code=tolower(code))%&gt;%</div><div class="line">  gather(medal_color, count, Gold, Silver, Bronze)%&gt;%</div><div class="line">  mutate(medal_color=factor(medal_color, levels = c(&quot;Gold&quot;, &quot;Silver&quot;, &quot;Bronze&quot;)))%&gt;%</div><div class="line">  drop_na(Country, code)</div><div class="line">knitr::kable(head(medals))</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Country	      Total	code	medal_color count</div><div class="line">Russia	       33	 ru	   Gold	      13</div><div class="line">United States  28	 us	   Gold	       9</div><div class="line">Norway	       26	 no	   Gold	      11</div><div class="line">Canada	       25	 ca	   Gold       10</div><div class="line">Netherlands    24	 nl	   Gold	       8</div><div class="line">Germany	       19	 de	   Gold	       8</div></pre></td></tr></table></figure>
<h2 id="绘图-1"><a href="#绘图-1" class="headerlink" title="绘图"></a>绘图</h2><p>由于国家数量太多，并且好多国家奖牌数基本为零，因此我们筛选一下：只绘制总奖牌数不小于5的国家。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">medals%&gt;%filter(Total&gt;=5)%&gt;%</div><div class="line">  ggplot(aes(x=reorder(Country, Total), y=count))+</div><div class="line">  geom_bar(stat = &quot;identity&quot;, aes(fill=medal_color))+</div><div class="line">  geom_flag(aes(y=-2,country=code), size=10)+</div><div class="line">  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7, vjust = 0.5))+</div><div class="line">  scale_fill_manual(values = c(</div><div class="line">    &quot;Gold&quot;=&quot;gold&quot;,</div><div class="line">    &quot;Bronze&quot; = &quot;#cd7f32&quot;,</div><div class="line">    &quot;Silver&quot; = &quot;#C0C0C0&quot;</div><div class="line">  ))+</div><div class="line">  scale_y_continuous(expand = c(0.1, 1))+</div><div class="line">  xlab(&quot;Country&quot;)+</div><div class="line">  ylab(&quot;Number of medals&quot;)+</div><div class="line">  theme_bw()+</div><div class="line">  theme(panel.grid = element_blank())+</div><div class="line">  theme(legend.justification = c(1, 0), legend.position = c(1, 0))+</div><div class="line">  theme(legend.title = element_blank())+</div><div class="line">  coord_flip()</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170912/k58bFmLk2c.png?imageslim" alt=""></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-pc-linux-gnu (64-bit)</div><div class="line">## Running under: Ubuntu 16.04.3 LTS</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0</div><div class="line">## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0</div><div class="line">## </div><div class="line">## locale:</div><div class="line">##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              </div><div class="line">##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    </div><div class="line">##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   </div><div class="line">##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 </div><div class="line">##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            </div><div class="line">## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] bindrcpp_0.2     tidyr_0.7.1      countrycode_0.19 rvest_0.3.2     </div><div class="line">## [5] xml2_1.1.1       dplyr_0.7.3      ggflags_0.0.1    ggplot2_2.2.1   </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.12     compiler_3.4.1   plyr_1.8.4       highr_0.6       </div><div class="line">##  [5] bindr_0.1        tools_3.4.1      digest_0.6.12    evaluate_0.10.1 </div><div class="line">##  [9] tibble_1.3.4     gtable_0.2.0     pkgconfig_2.0.1  rlang_0.1.2     </div><div class="line">## [13] curl_2.8.1       yaml_2.1.14      stringr_1.2.0    httr_1.3.1      </div><div class="line">## [17] knitr_1.17       tidyselect_0.2.0 rprojroot_1.2    grid_3.4.1      </div><div class="line">## [21] glue_1.1.1       R6_2.2.2         XML_3.98-1.9     rmarkdown_1.6   </div><div class="line">## [25] purrr_0.2.3      selectr_0.3-1    magrittr_1.5     backports_1.1.0 </div><div class="line">## [29] scales_0.5.0     htmltools_0.3.6  assertthat_0.2.0 colorspace_1.3-2</div><div class="line">## [33] labeling_0.3     stringi_1.1.5    lazyeval_0.2.0   munsell_0.4.3</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170912/k58bFmLk2c.png?imageslim&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本文主要介绍一个R包&lt;strong&gt;ggflags&lt;/strong&gt;，可以用于绘制国旗。安装的话从&lt;a href=&quot;https://github.com/baptiste/ggflags&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;上利用包&lt;strong&gt;devtools&lt;/strong&gt;安装。&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="ggflags" scheme="https://ytlogos.github.io/tags/ggflags/"/>
    
      <category term="爬虫rvest" scheme="https://ytlogos.github.io/tags/%E7%88%AC%E8%99%ABrvest/"/>
    
  </entry>
  
  <entry>
    <title>About me</title>
    <link href="https://ytlogos.github.io/2017/09/12/README/"/>
    <id>https://ytlogos.github.io/2017/09/12/README/</id>
    <published>2017-09-11T23:47:05.000Z</published>
    <updated>2017-09-14T00:07:07.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Introductiom"><a href="#Introductiom" class="headerlink" title="Introductiom"></a>Introductiom</h1><hr>
<p>The posts resource of my personal blog</p>
<ul>
<li>code &amp; data &amp; graph</li>
<li>R &amp; RStudio</li>
<li>If you are interested in my blog, you can go to the home of my <a href="https://ytlogos.github.io/">blog</a></li>
</ul>
<h1 id="About-me"><a href="#About-me" class="headerlink" title="About me"></a>About me</h1><hr>
<p>严涛</p>
<p>浙江大学作物遗传育种在读研究生（生物信息学方向）</p>
<p>伪码农，R语言爱好者，爱开源</p>
<hr>
<p>wechat: yt056410</p>
<p>Email: tyan@zju.edu.cn</p>
<p>QQ: 1051927088</p>
<p>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></p>
<p>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></p>
<p>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Introductiom&quot;&gt;&lt;a href=&quot;#Introductiom&quot; class=&quot;headerlink&quot; title=&quot;Introductiom&quot;&gt;&lt;/a&gt;Introductiom&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;The posts resource of my 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>利用tximport进行RNA-seq分析</title>
    <link href="https://ytlogos.github.io/2017/09/08/%E5%88%A9%E7%94%A8tximport%E8%BF%9B%E8%A1%8CRNA-seq%E5%88%86%E6%9E%90/"/>
    <id>https://ytlogos.github.io/2017/09/08/利用tximport进行RNA-seq分析/</id>
    <published>2017-09-08T10:31:07.000Z</published>
    <updated>2017-09-13T23:48:50.505Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>RNA-seq后续分析可以利用R包edgeR、DESeq2以及limma-voom等，而tximport包则可以将RNA-seq上游定量分析软件产生的结果导入到R语言中，进而方便后续的分析。具体的情况可以参考这篇文献：</p>
<blockquote>
<p>Charlotte Soneson, Michael I. Love, Mark D. Robinson (2015): Differential analyses for RNA-seq: transcript-level estimates improve gene-level inferences. F1000Research <a href="http://sci-hub.cc/10.12688/f1000research.7563.1" target="_blank" rel="external">http://sci-hub.cc/10.12688/f1000research.7563.1</a></p>
</blockquote>
<a id="more"></a>
<p>tximport具有以下优点：</p>
<ul>
<li>对于样本之间因基因长度不同导致的差异具有纠正功能</li>
<li>一些上游分析软件(Salmon, Sailfish, kallisto)等的结果可以完美对接到R语言中，这些软件运行速度更快更稳定，且占用更少的内存</li>
<li>更高的灵敏度，因为它可以避免那些比对到多基因的片段的丢失</li>
</ul>
<h2 id="导入转录组数据"><a href="#导入转录组数据" class="headerlink" title="导入转录组数据"></a>导入转录组数据</h2><p>下面我们将使用包tximportData中的数据进行演示，tximport可以处理多种类型的上游定量结果，只需要在参数type中设定就行。 先安装包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">source(&quot;https://bioconductor.org/biocLite.R&quot;)</div><div class="line">options(BioC_mirror=&quot;http://mirrors.ustc.edu.cn/bioc/&quot;)#设置中科大镜像</div><div class="line">biocLite(&quot;tximportData&quot;)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">library(tximportData)</div><div class="line">dir &lt;- system.file(&quot;extdata&quot;, package = &quot;tximportData&quot;)#set directory</div><div class="line">list.files(dir)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">##  [1] &quot;cufflinks&quot;            &quot;kallisto&quot;             &quot;kallisto_boot&quot;       </div><div class="line">##  [4] &quot;rsem&quot;                 &quot;sailfish&quot;             &quot;salmon&quot;              </div><div class="line">##  [7] &quot;salmon_gibbs&quot;         &quot;samples.txt&quot;          &quot;samples_extended.txt&quot;</div><div class="line">## [10] &quot;tx2gene.csv&quot;</div></pre></td></tr></table></figure>
<p>可以看到dir中存在这些文件，接下来我们其中的samples.txt读进来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">samples &lt;- read.table(file.path(dir, &quot;samples.txt&quot;), header = TRUE)</div><div class="line">samples</div><div class="line">##   pop center                assay    sample experiment       run</div><div class="line">## 1 TSI  UNIGE NA20503.1.M_111124_5 ERS185497  ERX163094 ERR188297</div><div class="line">## 2 TSI  UNIGE NA20504.1.M_111124_7 ERS185242  ERX162972 ERR188088</div><div class="line">## 3 TSI  UNIGE NA20505.1.M_111124_6 ERS185048  ERX163009 ERR188329</div><div class="line">## 4 TSI  UNIGE NA20507.1.M_111124_7 ERS185412  ERX163158 ERR188288</div><div class="line">## 5 TSI  UNIGE NA20508.1.M_111124_2 ERS185362  ERX163159 ERR188021</div><div class="line">## 6 TSI  UNIGE NA20514.1.M_111124_4 ERS185217  ERX163062 ERR188356</div></pre></td></tr></table></figure></p>
<p>再将salmon与samples以及quant.sf一起创建每个样本的文件地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">files &lt;- file.path(dir, &quot;salmon&quot;, samples$run, &quot;quant.sf&quot;)</div><div class="line">names(files) &lt;- paste0(&quot;sample&quot;, 1:6)</div><div class="line">all(file.exists(files))</div><div class="line">## [1] TRUE</div></pre></td></tr></table></figure></p>
<p>结果显示TRUE说明运行成功，可以进行下一步，要进行基因表达差异分析，首先要将转录本与基因名关联起来，这就需要我们创建一个两列的名为tx2gene的数据框，最简单的就是通过TxDb创建,再通过AnnotationDbi包里的函数select()进行选取<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">library(TxDb.Hsapiens.UCSC.hg19.knownGene)</div><div class="line">txdb &lt;- TxDb.Hsapiens.UCSC.hg19.knownGene</div><div class="line">k &lt;- keys(txdb, keytype = &quot;GENEID&quot;)</div><div class="line">df &lt;- select(txdb, keys = k, keytype = &quot;GENEID&quot;, columns = &quot;TXNAME&quot;)</div><div class="line">tx2gene &lt;- df[, 2:1]#tx ID在前，gene ID在后</div><div class="line">#这里我们演示就使用现有的tx2gene</div><div class="line">tx2gene &lt;- read.csv(file.path(dir, &quot;tx2gene.csv&quot;))</div><div class="line">head(tx2gene)</div><div class="line">##         TXNAME   GENEID</div><div class="line">## 1    NM_130786     A1BG</div><div class="line">## 2    NR_015380 A1BG-AS1</div><div class="line">## 3 NM_001198818     A1CF</div><div class="line">## 4 NM_001198819     A1CF</div><div class="line">## 5 NM_001198820     A1CF</div><div class="line">## 6    NM_014576     A1CF</div></pre></td></tr></table></figure></p>
<p>最后就是将转录组水平的数据导入就行了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">library(tximport)</div><div class="line">library(readr)</div><div class="line">txi &lt;- tximport(files, type = &quot;salmon&quot;, tx2gene = tx2gene)</div><div class="line">names(txi)</div><div class="line">## [1] &quot;abundance&quot;           &quot;counts&quot;              &quot;length&quot;             </div><div class="line">## [4] &quot;countsFromAbundance&quot;</div><div class="line">head(txi$counts)</div><div class="line">##             sample1   sample2    sample3   sample4   sample5   sample6</div><div class="line">## A1BG     109.232000 316.22400 110.638000 116.00000  86.38430  76.91630</div><div class="line">## A1BG-AS1  83.969700 138.44900 119.274000 151.08300 123.98500 103.25100</div><div class="line">## A1CF       9.030691  10.01847   5.019242  13.01820  25.21914  25.07356</div><div class="line">## A2M       24.000000   2.00000  21.000000   6.00000  38.00000   8.00000</div><div class="line">## A2M-AS1    1.000000   1.00000   1.000000   1.00000   0.00000   0.00000</div><div class="line">## A2ML1      3.047950   1.02987   4.076160   1.04945   3.07761   5.12409</div></pre></td></tr></table></figure></p>
<h2 id="差异分析"><a href="#差异分析" class="headerlink" title="差异分析"></a>差异分析</h2><p>下游分析主要使用Bioconductor包进行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">library(edgeR)</div><div class="line">cts &lt;- txi$counts</div><div class="line">normMat &lt;- txi$length</div><div class="line">normMat &lt;- normMat/exp(rowMeans(log(normMat)))</div><div class="line">o &lt;- log(calcNormFactors(cts/normMat))+log(colSums(cts/normMat))</div><div class="line">y &lt;- DGEList(cts)</div><div class="line">y$offset &lt;- t(t(log(normMat))+o)</div></pre></td></tr></table></figure></p>
<p>接下来的y就可以用来后续的分析</p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 15063)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats4    parallel  stats     graphics  grDevices utils     datasets </div><div class="line">## [8] methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">##  [1] edgeR_3.18.1                           </div><div class="line">##  [2] limma_3.32.5                           </div><div class="line">##  [3] readr_1.1.1                            </div><div class="line">##  [4] tximport_1.4.0                         </div><div class="line">##  [5] TxDb.Hsapiens.UCSC.hg19.knownGene_3.2.2</div><div class="line">##  [6] GenomicFeatures_1.28.4                 </div><div class="line">##  [7] AnnotationDbi_1.38.2                   </div><div class="line">##  [8] Biobase_2.36.2                         </div><div class="line">##  [9] GenomicRanges_1.28.4                   </div><div class="line">## [10] GenomeInfoDb_1.12.2                    </div><div class="line">## [11] IRanges_2.10.3                         </div><div class="line">## [12] S4Vectors_0.14.3                       </div><div class="line">## [13] BiocGenerics_0.22.0                    </div><div class="line">## [14] tximportData_1.4.0                     </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] Rcpp_0.12.12               compiler_3.4.1            </div><div class="line">##  [3] XVector_0.16.0             bitops_1.0-6              </div><div class="line">##  [5] tools_3.4.1                zlibbioc_1.22.0           </div><div class="line">##  [7] biomaRt_2.32.1             digest_0.6.12             </div><div class="line">##  [9] bit_1.1-12                 lattice_0.20-35           </div><div class="line">## [11] evaluate_0.10.1            RSQLite_2.0               </div><div class="line">## [13] memoise_1.1.0              tibble_1.3.4              </div><div class="line">## [15] pkgconfig_2.0.1            rlang_0.1.2               </div><div class="line">## [17] Matrix_1.2-11              DelayedArray_0.3.12       </div><div class="line">## [19] DBI_0.7                    yaml_2.1.14               </div><div class="line">## [21] GenomeInfoDbData_0.99.0    rtracklayer_1.36.4        </div><div class="line">## [23] stringr_1.2.0              knitr_1.17                </div><div class="line">## [25] hms_0.3                    Biostrings_2.44.2         </div><div class="line">## [27] locfit_1.5-9.1             grid_3.4.1                </div><div class="line">## [29] rprojroot_1.2              bit64_0.9-7               </div><div class="line">## [31] R6_2.2.2                   XML_3.98-1.9              </div><div class="line">## [33] BiocParallel_1.10.1        rmarkdown_1.6             </div><div class="line">## [35] blob_1.1.0                 magrittr_1.5              </div><div class="line">## [37] matrixStats_0.52.2         GenomicAlignments_1.12.2  </div><div class="line">## [39] backports_1.1.0            Rsamtools_1.28.0          </div><div class="line">## [41] htmltools_0.3.6            SummarizedExperiment_1.6.3</div><div class="line">## [43] stringi_1.1.5              RCurl_1.95-4.8            </div><div class="line">## [45] rjson_0.2.15</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;RNA-seq后续分析可以利用R包edgeR、DESeq2以及limma-voom等，而tximport包则可以将RNA-seq上游定量分析软件产生的结果导入到R语言中，进而方便后续的分析。具体的情况可以参考这篇文献：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Charlotte Soneson, Michael I. Love, Mark D. Robinson (2015): Differential analyses for RNA-seq: transcript-level estimates improve gene-level inferences. F1000Research &lt;a href=&quot;http://sci-hub.cc/10.12688/f1000research.7563.1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sci-hub.cc/10.12688/f1000research.7563.1&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="RNA-seq" scheme="https://ytlogos.github.io/categories/RNA-seq/"/>
    
    
      <category term="RNA-seq" scheme="https://ytlogos.github.io/tags/RNA-seq/"/>
    
  </entry>
  
  <entry>
    <title>A brief introduction of salmon</title>
    <link href="https://ytlogos.github.io/2017/09/06/A-brief-introduction-of-salmon/"/>
    <id>https://ytlogos.github.io/2017/09/06/A-brief-introduction-of-salmon/</id>
    <published>2017-09-06T10:31:06.000Z</published>
    <updated>2017-09-13T23:48:50.505Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Salmon是一款定量分析RNA-seq的软件，号称Fast、accurate、bias-aware and Don’t count…quantify定量分析转录本。本文主要简要的介绍一下Salmon。具体的情况可移步<a href="https://combine-lab.github.io/salmon/" target="_blank" rel="external">Salmon官网</a></p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>可以去<a href="https://github.com/COMBINE-lab/salmon" target="_blank" rel="external">Github</a>里下载Salmon进行安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir Salmon &amp;&amp; cd Salmon</div><div class="line">$ wget  https://github.com/COMBINE-lab/salmon/releases/download/v0.8.2/Salmon-0.8.2_linux_x86_64.tar.gz</div><div class="line">$ tar zxvf Salmon-0.8.2_linux_x86_64.tar.gz</div></pre></td></tr></table></figure></p>
<p>至于路径则根据自己电脑进行配置，这里不讲，安装成功的话则可以用<code>salmon -h</code>查看帮助文件。应该可以看到如下输出：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ salmon -h</div><div class="line">Salmon v0.8.1</div><div class="line"></div><div class="line">Usage:  salmon -h|--help or</div><div class="line">        salmon -v|--version or</div><div class="line">        salmon -c|--cite or</div><div class="line">        salmon [--no-version-check] &lt;COMMAND&gt; [-h | options]</div><div class="line"></div><div class="line">Commands:</div><div class="line">     cite  Show salmon citation information</div><div class="line">     index Create a salmon index</div><div class="line">     quant Quantify a sample</div><div class="line">     swim  Perform super-secret operation</div></pre></td></tr></table></figure>
<p>也可以利用conda安装，这样就可以省去很多麻烦。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ conda install salmon</div></pre></td></tr></table></figure></p>
<h2 id="获取转录组"><a href="#获取转录组" class="headerlink" title="获取转录组"></a>获取转录组</h2><p>Salmon是直接将原始序列map到转录组上而不是全基因组上(这是很重要的一点，千万不要搞混了，这也是作者一直在强调的)，这里我们就以拟南芥为例下载其转录组。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#Creat a directory </div><div class="line">$ mkdir RNA-seq_test cd RNA-seq_test</div><div class="line">$ wget ftp://ftp.ensemblgenomes.org/pub/plants/release-28/fasta/arabidopsis_thaliana/cdna/Arabidopsis_thaliana.TAIR10.28.cdna.all.fa.gz -o athal.fa.gz</div></pre></td></tr></table></figure>
<p>好了，现在转录组已下载好，接下来就是建立索引了</p>
<h2 id="建立索引"><a href="#建立索引" class="headerlink" title="建立索引"></a>建立索引</h2><p>利用Salmon建立索引十分简单，一行命令就搞定<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ salmon index -t athal.fa.gz -i athal_index</div><div class="line">```</div></pre></td></tr></table></figure></p>
<p>这里解释一下几个参数：</p>
<ul>
<li>-t: 表示需要用到的转录组，这里是拟南芥的，我们刚下载好的athal.fa.gz</li>
<li>-i: 表示我们建立的索引的名称，它是一个文件夹</li>
</ul>
<p>更多的参数设置可以<a href="http://salmon.readthedocs.io/en/latest/" target="_blank" rel="external">参考说明</a></p>
<h2 id="获取序列数据"><a href="#获取序列数据" class="headerlink" title="获取序列数据"></a>获取序列数据</h2><p>一次试验数据往往很多，我们可以写一个脚本进行下载，这里简单示例一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">mkdir data</div><div class="line">cd data</div><div class="line">for i in &apos;seq 25 40&apos;;</div><div class="line">do</div><div class="line">  madir DRR0161$&#123;i&#125;;</div><div class="line">  cd DRR0161$&#123;i&#125;;</div><div class="line">  wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/DRR016/DRR0161$&#123;i&#125;/DRR0161$&#123;i&#125;_1.fastq.gz; </div><div class="line">  wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/DRR016/DRR0161$&#123;i&#125;/DRR0161$&#123;i&#125;_2.fastq.gz; </div><div class="line">  cd ..; </div><div class="line">done</div><div class="line">cd ..</div></pre></td></tr></table></figure></p>
<p>将其保存为obtain_reads.sh,将其运行只需以下命令就行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ bash obtain_reads.sh</div></pre></td></tr></table></figure></p>
<h2 id="定量样本"><a href="#定量样本" class="headerlink" title="定量样本"></a>定量样本</h2><p>这次也写一个简单脚本进行定量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">for fn in data/DRR0161&#123;25..40&#125;;</div><div class="line">do</div><div class="line">samp=`basename $&#123;fn&#125;`</div><div class="line">echo &quot;Processing sample $&#123;samp&#125;&quot;</div><div class="line">salmon quant -i athal_index -l A \</div><div class="line">         -1 $&#123;fn&#125;/$&#123;samp&#125;_1.fastq.gz \</div><div class="line">         -2 $&#123;fn&#125;/$&#123;samp&#125;_2.fastq.gz \</div><div class="line">         -p 8 -o quants/$&#123;samp&#125;_quant</div><div class="line">done</div></pre></td></tr></table></figure></p>
<p>这里简单说明一下几个参数：</p>
<ul>
<li>-i: 用来告诉salmon哪里寻找索引index</li>
<li>-l A: 告诉salmon自行决定是何种类型的序列数据</li>
<li>-1，-2：就是两端测序的两个序列了</li>
<li>-p 8: 8线程</li>
<li>-o: 输出文件，这里是所有输出文件都保存至quants，并且文件命名为sample_quant</li>
</ul>
<p>更多参数选择及说明可以参考<a href="http://salmon.readthedocs.io/en/latest/" target="_blank" rel="external">说明文件</a><br>这里每个样品文件里都含有一个主文件quant.sf。在后续的差异分析中有重要作用，后续再讲。<br>定量之后接下来就是进行具体分析了，一般来说都在R里面进行，R&amp;Bioconductor有大量的包进行下游的分析，比如<a href="https://bioconductor.org/packages/DESeq2" target="_blank" rel="external">DESeq2</a>、<a href="https://bioconductor.org/packages/edgeR" target="_blank" rel="external">edgeR</a>、<a href="https://bioconductor.org/packages/limma" target="_blank" rel="external">limma</a>以及<a href="http://pachterlab.github.io/sleuth/" target="_blank" rel="external">sleuth</a>等，后续文章我会讲解如何通过 <a href="http://bioconductor.org/packages/tximport" target="_blank" rel="external"><code>tximport</code></a>将定量化的转录组数据导入到R语言中进行差异分析。</p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Salmon是一款定量分析RNA-seq的软件，号称Fast、accurate、bias-aware and Don’t count…quantify定量分析转录本。本文主要简要的介绍一下Salmon。具体的情况可移步&lt;a href=&quot;https://combine-lab.github.io/salmon/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Salmon官网&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="RNA-seq" scheme="https://ytlogos.github.io/categories/RNA-seq/"/>
    
    
      <category term="RNA-seq" scheme="https://ytlogos.github.io/tags/RNA-seq/"/>
    
  </entry>
  
  <entry>
    <title>图像处理R包magick学习笔记</title>
    <link href="https://ytlogos.github.io/2017/09/03/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86R%E5%8C%85magick%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://ytlogos.github.io/2017/09/03/图像处理R包magick学习笔记/</id>
    <published>2017-09-03T10:29:46.000Z</published>
    <updated>2017-09-13T23:48:50.505Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/a2jGAc87jB.gif" alt=""></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文主要简单介绍一下magick包，主要用于图像处理</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#安装的话就直接从CRAN安装进行</div><div class="line">install.packages(&quot;magick&quot;)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#Load the package</div><div class="line">library(magick)</div><div class="line">#查看支持哪些格式</div><div class="line">str(magick_config())</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">## List of 21</div><div class="line">##  $ version           :Class &apos;numeric_version&apos;  hidden list of 1</div><div class="line">##   ..$ : int [1:4] 6 9 9 9</div><div class="line">##  $ modules           : logi FALSE</div><div class="line">##  $ cairo             : logi TRUE</div><div class="line">##  $ fontconfig        : logi FALSE</div><div class="line">##  $ freetype          : logi TRUE</div><div class="line">##  $ fftw              : logi TRUE</div><div class="line">##  $ ghostscript       : logi TRUE</div><div class="line">##  $ jpeg              : logi TRUE</div><div class="line">##  $ lcms              : logi TRUE</div><div class="line">##  $ libopenjp2        : logi FALSE</div><div class="line">##  $ lzma              : logi TRUE</div><div class="line">##  $ pangocairo        : logi TRUE</div><div class="line">##  $ pango             : logi TRUE</div><div class="line">##  $ png               : logi TRUE</div><div class="line">##  $ rsvg              : logi TRUE</div><div class="line">##  $ tiff              : logi TRUE</div><div class="line">##  $ webp              : logi TRUE</div><div class="line">##  $ wmf               : logi FALSE</div><div class="line">##  $ x11               : logi FALSE</div><div class="line">##  $ xml               : logi TRUE</div><div class="line">##  $ zero-configuration: logi FALSE</div></pre></td></tr></table></figure>
<p>可以看出大部分格式都是支持的</p>
<h2 id="读取图像"><a href="#读取图像" class="headerlink" title="读取图像"></a>读取图像</h2><p>读取的话可以直接从本地读取，也可以读取URL格式的图片，主要通过image_read()来读取，image_info()则可以显示图像的一些属性数据。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#读取网上随便选的图片</div><div class="line">night_king &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/ha6Cchfk38.jpg?imageslim&quot;)</div><div class="line">image_info(night_king)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">##   format width height colorspace filesize</div><div class="line">## 1   JPEG   189    267       sRGB     6449</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#通过image_write()可以讲图片以任何格式输出，比如将刚读取的图片以png格式输出。</div><div class="line">image_write(night_king, path = &quot;night_king.png&quot;, format = &quot;png&quot;)</div></pre></td></tr></table></figure>
<h2 id="转换格式"><a href="#转换格式" class="headerlink" title="转换格式"></a>转换格式</h2><p>通过image_convert()可以将图片转换为我们需要的格式，比如这里我们可以将night_king的格式转换为png格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">night_king.png &lt;- image_convert(night_king, &quot;png&quot;)</div><div class="line">image_info(night_king.png)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">##   format width height colorspace filesize</div><div class="line">## 1    PNG   189    267       sRGB        0</div></pre></td></tr></table></figure>
<p>可以看到这里的filesize为0，直到被渲染（这里涉及到ImageMagick方面，我不是很懂）。</p>
<h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>在RStudio中可以查看我们读取的图片</p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/1kEj0h191l.png?imageslim" alt=""></p>
<h2 id="转换-transformations"><a href="#转换-transformations" class="headerlink" title="转换(transformations)"></a>转换(transformations)</h2><p>magick提供一系列函数对图片进行裁剪以及编辑，主要有以下函数：</p>
<ul>
<li>image_crop(image, “100x150+50”):裁剪</li>
<li>image_scale(image, “200”):按宽比例进行放大缩小</li>
<li>image_scale(image, “x200”):按高比例进行放大缩小</li>
<li>image_fill(image, “blue”, “+100+200”):对特定部位着色</li>
<li>image_border(image, “red”, “20x10”):添加边框</li>
</ul>
<p>下面我们来试试这些函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#Example image</div><div class="line">wolf &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/4h96Df21AI.png?imageslim&quot;)</div><div class="line">print(wolf)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/4h96Df21AI.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Add 20px left/right and 10px top/bottom</div><div class="line">image_border(image_background(wolf, &quot;hotpink&quot;), &quot;#000080&quot;, &quot;20x10&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/6LE8j4jECf.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#trim margins</div><div class="line">image_trim(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/HB0lELbmhE.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#裁剪</div><div class="line">image_crop(wolf, &quot;500x300+50&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/f05HDcIG4d.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Resize</div><div class="line">image_scale(wolf, &quot;300&quot;)#width:300px</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/KjfE0bhl7H.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Resize</div><div class="line">image_scale(wolf, &quot;x300&quot;)#heigth:300px</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/0me686bm2e.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Rotate or mirror</div><div class="line">image_rotate(wolf, 45)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/1H6D4bjKbm.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Flip</div><div class="line">image_flip(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/4CGL43f8AK.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Flop</div><div class="line">image_flop(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/Cg4hL5Hi72.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Paint </div><div class="line">image_fill(wolf, &quot;red&quot;, point = &quot;+190+100&quot;, fuzz = 4000)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/fd7IfD0m2a.png?imageslim" alt=""></p>
<p>这个函数最难掌握，我本来是想将wolf的眼睛渲染成红色，但是不断调整point以及fuzz都没弄成，感兴趣的可以自己捣鼓捣鼓。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Add randomness</div><div class="line">image_blur(wolf, 10, 5)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/k5EF1DA9Lk.png?imageslim" alt=""></p>
<p>可以通过调整参数来设置模糊度</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">image_noise(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/D92FH0I3G1.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Silly filters</div><div class="line">image_charcoal(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/KAEA3gIIF0.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">image_oilpaint(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/ACD0Fg5675.png?imageslim" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">image_negate(wolf)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/kILkaEe9kl.png?imageslim" alt=""></p>
<h2 id="文字注释"><a href="#文字注释" class="headerlink" title="文字注释"></a>文字注释</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Add some text on the image</div><div class="line">image_annotate(wolf, &quot;I am the King of wolf&quot;, size=25, gravity = &quot;southeast&quot;, color=&quot;gold&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/dfc3iB0E3D.png?imageslim" alt=""></p>
<p>当然也可以自定义text</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#customize the text</div><div class="line">image_annotate(wolf, &quot;I am the King&quot;, size=30, color=&quot;red&quot;, boxcolor = &quot;pink&quot;, degrees = 45, location = &quot;+30+30&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/59CEEa0gm0.png?imageslim" alt=""></p>
<p>还可以设置字体</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Set the font times-new-roman</div><div class="line">image_annotate(wolf, &quot;I am the King&quot;, size=30, color=&quot;red&quot;, boxcolor = &quot;pink&quot;, degrees = 45, location = &quot;+30+30&quot;, font = &apos;times-new-roman&apos;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/BIbiF712bE.png?imageslim" alt=""></p>
<h2 id="管道操作"><a href="#管道操作" class="headerlink" title="管道操作"></a>管道操作</h2><p>你没看错，magick支持管道操作，下面试试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">library(magrittr)</div><div class="line">wolf%&gt;%</div><div class="line">  image_rotate(270)%&gt;%</div><div class="line">  image_background(&quot;white&quot;, flatten = TRUE)%&gt;%</div><div class="line">  image_border(&quot;red&quot;, &quot;10x10&quot;)%&gt;%</div><div class="line">  image_annotate(&quot;I am the King&quot;, color=&apos;red&apos;, size = 25, location = &quot;+100+300&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/mEG1lL005b.png?imageslim" alt=""></p>
<h2 id="图片向量"><a href="#图片向量" class="headerlink" title="图片向量"></a>图片向量</h2><p>magick除了支持管道操作外，还支持图层叠加、拼图以及动图处理，来个经典的动态地球<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">earth &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/a9CjAEGiC5.gif&quot;)</div><div class="line">length(earth)</div><div class="line">print(earth)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/a9CjAEGiC5.gif" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rev(earth) %&gt;% </div><div class="line">  image_flip() %&gt;% </div><div class="line">  image_annotate(&quot;This is the Earth&quot;, size = 20, color = &quot;white&quot;)</div></pre></td></tr></table></figure>
<p>不知什么鬼，图片竟然显示出来乱的，电脑渣的话还是别搞动画</p>
<h2 id="图层"><a href="#图层" class="headerlink" title="图层"></a>图层</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">bigdata &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/JclK3efbB3.jpg?imageslim&quot;)</div><div class="line">logo &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/JdjdB88CLm.png?imageslim&quot;)</div><div class="line">frink &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/E5fbmb1FIb.png?imageslim&quot;)</div><div class="line">img &lt;- c(bigdata, logo, frink)</div><div class="line">img &lt;- image_scale(img, &quot;300x300&quot;)</div><div class="line">image_mosaic(img)</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/EE0CEL1K57.jpeg?imageslim" alt=""></p>
<h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">image_animate(image_scale(img, &quot;200x200&quot;), fps = 1, dispose = &quot;previous&quot;)#fps控制放映速度</div></pre></td></tr></table></figure>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/0Bi5fCJBE5.gif" alt=""></p>
<h2 id="静图-动图"><a href="#静图-动图" class="headerlink" title="静图+动图"></a>静图+动图</h2><p>静图就用我以前绘制过的，具体可看<a href="https://ytlogos.github.io/2017/08/24/ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%BE%E5%BD%A2%E6%8E%92%E5%88%97/">博客</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">image1 &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/kLeL888DbI.png?imageslim&quot;)</div><div class="line">dance_man &lt;- image_read(&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/86iEDe36lf.gif&quot;)</div><div class="line">dance_man &lt;- image_scale(dance_man, &quot;200&quot;)</div><div class="line">#Background image</div><div class="line">background &lt;- image_background(image_scale(image1, &quot;800&quot;), &quot;white&quot;, flatten = TRUE)</div><div class="line">#Combine and flatten frames</div><div class="line">frames &lt;- image_apply(dance_man, function(frame)&#123;</div><div class="line">  image_composite(background, frame, offset = &quot;+500+270&quot;)</div><div class="line">&#125;)</div><div class="line">#Turn frames into animation</div><div class="line">animation &lt;- image_animate(frames, fps = 10)</div><div class="line">print(animation)</div></pre></td></tr></table></figure></p>
<p><img src="http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/a2jGAc87jB.gif" alt=""></p>
<p>还有一些有趣的功能这里我就不讲了，有兴趣的可以试试，还是很好玩的。</p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line"></div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 15063)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] magrittr_1.5 magick_1.2  </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] compiler_3.4.1  backports_1.1.0 rprojroot_1.2   tools_3.4.1    </div><div class="line">##  [5] htmltools_0.3.6 curl_2.8.1      yaml_2.1.14     Rcpp_0.12.12   </div><div class="line">##  [9] stringi_1.1.5   rmarkdown_1.6   knitr_1.17      stringr_1.2.0  </div><div class="line">## [13] digest_0.6.12   evaluate_0.10.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ov520p4qw.bkt.clouddn.com/ytlogos/170903/a2jGAc87jB.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本文主要简单介绍一下magick包，主要用于图像处理&lt;/p&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="magick" scheme="https://ytlogos.github.io/tags/magick/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化学习笔记之基因组数据可视化</title>
    <link href="https://ytlogos.github.io/2017/08/25/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9F%BA%E5%9B%A0%E7%BB%84%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <id>https://ytlogos.github.io/2017/08/25/R语言可视化学习笔记之基因组数据可视化/</id>
    <published>2017-08-24T23:47:05.000Z</published>
    <updated>2017-09-14T00:06:55.692Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-38d068706ad3b03a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>本文主要利用<strong>ggpubr</strong>包来探索基因组数据,主要是可视化TCGA基因组数据的基因表达谱。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">library(ggpubr)#加载包</div></pre></td></tr></table></figure></p>
<p>TCGA是一个包含大量癌症数据的数据库，由Marcin Kosinski创建的RTCGA包可以让我们很方便的获取这些数据。主要有三个包：RTCGA、RTCGA.clininal、RTCGA.mRNA。安装方法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#Load the bioconductor installersource</div><div class="line">(&quot;http://bioconductor.org/biocLite.R&quot;&quot;)</div><div class="line">#设置镜像，这里我们选择中科大的镜像options(BioC_mirror=&quot;http://ustc.edu.cn/bioc&quot;)</div><div class="line">#下载包</div><div class="line">biocLite(&quot;RTCGA&quot;)</div><div class="line">biocLite(&quot;RTCGA.clininal&quot;)</div><div class="line">biocLite(&quot;RTCGA.mRNA&quot;)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">library(RTCGA)</div><div class="line">#查看每一种癌症的数据集</div><div class="line">infoTCGA()</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-b34678958936acea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="这里只显示部分"></p>
<p><strong>RTCGA</strong>包里的函数<code>expressionTCGA()</code>可以十分方便地从不同数据集中提取基因的表达值，下面我们将从三个数据集BRCA(乳腺癌)、OV(卵巢癌)、LUSC(肺癌)中提取五个基因的表达值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(RTCGA)</div><div class="line">library(RTCGA.mRNA)</div><div class="line">expr &lt;- expressionsTCGA(BRCA.mRNA, OV.mRNA, LUSC.mRNA, </div><div class="line">extract.cols = c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;, &quot;ESR1&quot;, &quot;MUC1&quot;))</div><div class="line">expr</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-d4a71b05d7b47010.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>查看每个数据集中的样品数量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">nb_samples &lt;- table(expr$dataset)nb_samples</div><div class="line"></div><div class="line">## </div><div class="line">## BRCA.mRNA  LUSC.mRNA  OV.mRNA </div><div class="line">##    590        154      561</div></pre></td></tr></table></figure></p>
<p>为了方便，我们将部分数据集名称简化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">expr$dataset &lt;- gsub(pattern = &quot;.mRNA&quot;, replacement = &quot;&quot;, expr$dataset)</div><div class="line">expr$bcr_patient_barcode &lt;- paste0(expr$dataset, c(1:590, 1:561, 1:154))</div><div class="line">expr</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-af94785de32b871b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>接下来绘制图形：<br>1、箱线图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">library(ggpubr)</div><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=&quot;GATA3&quot;, title=&quot;GATA3&quot;, ylab = &quot;Expression&quot;, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-08c6ecf624be4f0c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>我们可以一次性绘制多个基因，然后一一查看，而不用每次写代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#Creat a list of plots</div><div class="line">p &lt;- ggboxplot(expr, x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;, &quot;ESR1&quot;, &quot;MUC1&quot;),</div><div class="line">title = c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;, &quot;ESR1&quot;, &quot;MUC1&quot;), </div><div class="line">ylab = &quot;EXpression&quot;, color = &quot;dataset&quot;, palette = &quot;jco&quot;)</div><div class="line">#接下来一一查看每个plot</div><div class="line">p$GATA3</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-4bb5efef9d761338.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p$PTEN</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-ad563d41e1fa856d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p$XBP1</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-afe413c51f1795d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p$ESR1</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-5e292cfe7f0d5e3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p$MUC1</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-b61b9b569685a032.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>当一次性绘制多个基因时，xlab,ylab,title也可以是一个跟y等长的向量。 接下来就是添加p-value以及显著性了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">my_comparisons &lt;- list(c(&quot;BRCA&quot;, &quot;OV&quot;), c(&quot;OV&quot;, &quot;LUSC&quot;))</div><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=&quot;GATA3&quot;, title = &quot;GATA3&quot;, ylab = &quot;Expression&quot;, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;)+ stat_compare_means(comparisons = my_comparisons)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-bb70ab12668b7010.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>也可以查看每个类型中每一个基因的比较：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compare_means(c(GATA3, PTEN, XBP1)~dataset, data = expr)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-387bd27a2b95a30c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>可以通过select以及remove来决定比较那几个类型，比如这里我们只比较BRCA和OV<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=&quot;GATA3&quot;, title = &quot;GATA3&quot;, ylab = &quot;Expression&quot;, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, select = c(&quot;BRCA&quot;, &quot;OV&quot;))#通过select选择</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-bef1e0aa4148b8be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=&quot;GATA3&quot;, title = &quot;GATA3&quot;, ylab = &quot;Expression&quot;, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, remove = &quot;BRCA&quot;)#通过remove选择</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-ccb18f7da8288c6d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>通过order来改变各类型在x轴上的顺序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=&quot;GATA3&quot;, title = &quot;GATA3&quot;, ylab = &quot;Expression&quot;, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, order = c(&quot;LUSC&quot;, &quot;OV&quot;, &quot;BRCA&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-4598a0d2c3d4f402.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>通过rotate=TRUE来变换坐标轴<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=&quot;GATA3&quot;, title = &quot;GATA3&quot;, ylab = &quot;Expression&quot;, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, rotate=TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-46f6e3b2c093c6c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>通过combine=TRUE来进行分面（类似于facet）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), ylab = &quot;Expression&quot;, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, combine = TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-3562a99a0a400f3c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>通过merge=TRUE或者merge=“axis”将三个类型的plot绘制在一个panel中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), ylab = &quot;Expression&quot;,</div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, merge = TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-d90335d2c9e74f13.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>通过merge=flip利用不同癌症类型进行group<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), </div><div class="line">ylab = &quot;Expression&quot;, palette = &quot;jco&quot;, merge = &quot;flip&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-efc44aeb7221760f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>通过add=jitter增加抖动点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), combine = TRUE,</div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, ylab = &quot;Expression&quot;, add = &quot;jitter&quot;, </div><div class="line">add.params = list(size=0.1, jitter=0.2))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-5659d5845c1699f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>通过add=dotplot增加dotplot<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), </div><div class="line">combine = TRUE, color = &quot;dataset&quot;, palette = &quot;jco&quot;, ylab = &quot;Expression&quot;, </div><div class="line">add = &quot;dotplot&quot;, add.params = list(binwidth=0.1, dotsize=0.2))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-8111c788c1ceba23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>很多时候我们很像知道箱线图两端的数据，我们可以通过label来进行展示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggboxplot(expr, x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), combine = TRUE,</div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, ylab = &quot;Expression&quot;, add = &quot;jitter&quot;, </div><div class="line">add.params = list(size=0.1, jitter=0.2), label = &quot;bcr_patient_barcode&quot;, </div><div class="line">label.select = list(top.up=2, top.down=2), </div><div class="line">font.label = list(size=9, face=&quot;italic&quot;), repel = TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-38d068706ad3b03a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>2、小提琴图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggviolin(expr,x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), combine = TRUE, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, ylab = &quot;Expression&quot;, add = &quot;boxplot&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-a24be637c1b4db89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>通过修改add来更改添加小提琴图里的图形<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggviolin(expr,x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), combine = TRUE, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, ylab = &quot;Expression&quot;, add = &quot;median_iqr&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-845354aeeec09083.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>add有好多选项可以选择：“mean”, “mean_se”, “mean_sd”, “mean_ci”, “mean_range”, “median”, “median_iqr”, “median_mad”, “median_range”.有兴趣的可以自己试试。</p>
</blockquote>
<p>3、带状图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggstripchart(expr, x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), combine = TRUE,</div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, size = 0.1, jitter=0.2, ylab = &quot;Expression&quot;, </div><div class="line">add = &quot;median_iqr&quot;, add.params = list(color=&quot;red&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-52925943216eac0f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>4、dotplot<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggdotplot(expr, x=&quot;dataset&quot;, y=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), combine = TRUE, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;, fill = &quot;white&quot;, binwidth = 0.1, ylab = &quot;Expression&quot;,</div><div class="line">add = &quot;median_iqr&quot;, add.params = list(size=0.9))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-80f7238f464bba66.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>5、密度图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggdensity(expr, x=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), y=&quot;..density..&quot;, </div><div class="line">combine = TRUE, xlab = &quot;Expression&quot;, add = &quot;median&quot;, rug = TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-5f6de57b9d6109d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>将dataset映射给颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggdensity(expr, x=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), y=&quot;..density..&quot;, combine = TRUE,</div><div class="line">xlab = &quot;Expression&quot;, add = &quot;median&quot;, rug = TRUE, color = &quot;dataset&quot;, </div><div class="line">fill = &quot;dataset&quot;, palette = &quot;jco&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-2495e6aa4b3f106f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>将三幅图整合进一个panel中，并对y轴进行..count..，而不是..density..<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggdensity(expr, x=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), y=&quot;..count..&quot;, xlab = &quot;Expression&quot;,</div><div class="line">add = &quot;median&quot;, rug = TRUE, palette = &quot;jco&quot;)</div><div class="line">## $GATA3</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-c020bff5daa5174a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">## ## $PTEN</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-357acb14cd62ea30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">## ## $XBP1</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-9f4facdd2b3bbe8c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>颜色映射，将x轴变量映射给颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggdensity(expr, x=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), y=&quot;..count..&quot;, color = &quot;.x.&quot;, </div><div class="line">fill = &quot;.x.&quot;, merge = TRUE, xlab = &quot;Expression&quot;, add = &quot;median&quot;, rug = TRUE, palette = &quot;jco&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-8d0a6cf618230ec0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>按dataset进行分面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggdensity(expr, x=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), y=&quot;..count..&quot;, color = &quot;.x.&quot;, </div><div class="line">fill = &quot;.x.&quot;, merge = TRUE, xlab = &quot;Expression&quot;, add = &quot;median&quot;, </div><div class="line">rug = TRUE, palette = &quot;jco&quot;, facet.by = &quot;dataset&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-cf2dac791630c3ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>6、直方图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">gghistogram(expr, x=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), y=&quot;..density..&quot;, </div><div class="line">xlab = &quot;Expression&quot;, add = &quot;median&quot;, rug = TRUE)</div><div class="line">## $GATA3</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-be8c87506d85f929.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">## ## $PTEN</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-a0ae7fae20c787bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">## ## $XBP1</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-709bc0692833b95c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>将dataset映射给颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">gghistogram(expr, x=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), y=&quot;..density..&quot;, xlab = &quot;Expression&quot;, </div><div class="line">add = &quot;median&quot;, rug = TRUE, color = &quot;dataset&quot;, fill = &quot;dataset&quot;, palette = &quot;jco&quot;)</div><div class="line">## $GATA3</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-08d17067003638cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">## ## $PTEN</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-0e291051fdf8709b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">## ## $XBP1</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-3e69df4a748c733c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>后面还有一些将几幅图整合在一个panel以及分面等大同小异就不讲了。<br>7、Q-Q图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggqqplot(expr, x=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), combine = TRUE, size = 0.5)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-438ad8dd5a855bae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>颜色映射<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggqqplot(expr, x=c(&quot;GATA3&quot;, &quot;PTEN&quot;, &quot;XBP1&quot;), combine = TRUE, size = 0.5, </div><div class="line">color = &quot;dataset&quot;, palette = &quot;jco&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-edb0e229e75a1e2b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>#sessionInfo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.0 (2017-04-21)</div><div class="line">## Platform: x86_64-pc-linux-gnu (64-bit)</div><div class="line">## Running under: Ubuntu 16.04.2 LTS</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## BLAS: /usr/lib/libblas/libblas.so.3.6.0</div><div class="line">## LAPACK: /usr/lib/lapack/liblapack.so.3.6.0</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C </div><div class="line">## [3] LC_TIME=zh_CN.UTF-8 LC_COLLATE=en_US.UTF-8 </div><div class="line">## [5] LC_MONETARY=zh_CN.UTF-8 LC_MESSAGES=en_US.UTF-8</div><div class="line">## [7] LC_PAPER=zh_CN.UTF-8 LC_NAME=C </div><div class="line">## [9] LC_ADDRESS=C LC_TELEPHONE=C </div><div class="line">## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats graphics grDevices utils datasets methods base </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] bindrcpp_0.2 RTCGA.mRNA_1.4.0 RTCGA_1.6.0 ggpubr_0.1.3 </div><div class="line">## [5] magrittr_1.5 ggplot2_2.2.1 </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">## [1] zoo_1.8-0 reshape2_1.4.2 purrr_0.2.2.2 </div><div class="line">## [4] splines_3.4.0 ggthemes_3.4.0 lattice_0.20-35 </div><div class="line">## [7] colorspace_1.3-2 htmltools_0.3.6 viridisLite_0.2.0</div><div class="line">## [10] yaml_2.1.14 survival_2.41-3 XML_3.98-1.9 </div><div class="line">## [13] survMisc_0.5.4 rlang_0.1.1 foreign_0.8-68 </div><div class="line">## [16] glue_1.1.0 bindr_0.1 plyr_1.8.4 </div><div class="line">## [19] stringr_1.2.0 ggsignif_0.2.0 munsell_0.4.3 </div><div class="line">## [22] gtable_0.2.0 ggsci_2.7 rvest_0.3.2 </div><div class="line">## [25] psych_1.7.5 evaluate_0.10 labeling_0.3 </div><div class="line">## [28] knitr_1.16 parallel_3.4.0 broom_0.4.2 </div><div class="line">## [31] Rcpp_0.12.11 xtable_1.8-2 scales_0.4.1</div><div class="line">## [34] backports_1.1.0 cmprsk_2.2-7 km.ci_0.5-2 </div><div class="line">## [37] gridExtra_2.2.1 mnormt_1.5-5 digest_0.6.12 </div><div class="line">## [40] stringi_1.1.5 ggrepel_0.6.5 dplyr_0.7.0 </div><div class="line">## [43] KMsurv_0.1-5 grid_3.4.0 rprojroot_1.2 </div><div class="line">## [46] tools_3.4.0 lazyeval_0.2.0 tibble_1.3.3 </div><div class="line">## [49] tidyr_0.6.3 Matrix_1.2-10 data.table_1.10.4</div><div class="line">## [52] xml2_1.1.1 survminer_0.4.0 assertthat_0.2.0 </div><div class="line">## [55] rmarkdown_1.6 httr_1.2.1 viridis_0.4.0 </div><div class="line">## [58] R6_2.2.2 nlme_3.1-131 compiler_3.4.0</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-38d068706ad3b03a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;本文主要利用&lt;strong&gt;ggpubr&lt;/strong&gt;包来探索基因组数据,主要是可视化TCGA基因组数据的基因表达谱。&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggpubr" scheme="https://ytlogos.github.io/tags/ggpubr/"/>
    
  </entry>
  
  <entry>
    <title>ggplot2学习笔记之图形排列</title>
    <link href="https://ytlogos.github.io/2017/08/24/ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%BE%E5%BD%A2%E6%8E%92%E5%88%97/"/>
    <id>https://ytlogos.github.io/2017/08/24/ggplot2学习笔记之图形排列/</id>
    <published>2017-08-23T16:00:00.000Z</published>
    <updated>2017-09-13T23:48:50.505Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-e6bf2901af3d315e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>R语言基本绘图函数中可以利用par()以及layout()来进行图形排列，但是这两个函数对于ggplot图则不太适用，本文主要讲解如何对多ggplot图形多页面进行排列。主要讲解如何利用包gridExtra、cowplot以及ggpubr中的函数进行图形排列。<br><a id="more"></a></p>
<h2 id="绘制图形"><a href="#绘制图形" class="headerlink" title="绘制图形"></a>绘制图形</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#load packages</div><div class="line">library(gridExtra)</div><div class="line">library(cowplot)</div><div class="line">library(ggpubr)</div><div class="line">#dataset ToothGrowth and mtcars</div><div class="line">mtcars$name &lt;- rownames(mtcars)</div><div class="line">mtcars$cyl &lt;- as.factor(mtcars$cyl)</div><div class="line">head(mtcars[, c(&quot;name&quot;, &quot;wt&quot;,&quot;mpg&quot;, &quot;cyl&quot;)])</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-e97fd1379156e2e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#First let&apos;s create some plots</div><div class="line">#Box plot(bxp)</div><div class="line">bxp &lt;- ggboxplot(ToothGrowth, x=&quot;dose&quot;, y=&quot;len&quot;, color = &quot;dose&quot;, palette = &quot;jco&quot;)</div><div class="line">#Dot plot(dp)</div><div class="line">dp &lt;- ggdotplot(ToothGrowth, x=&quot;dose&quot;, y=&quot;len&quot;, color = &quot;dose&quot;, palette = &quot;jco&quot;, binwidth = 1)</div><div class="line">#An ordered Bar plot(bp)</div><div class="line">bp &lt;- ggbarplot(mtcars, x=&quot;name&quot;, y=&quot;mpg&quot;, fill=&quot;cyl&quot;, #change fill color by cyl </div><div class="line">color=&quot;white&quot;, #Set bar border colors to white </div><div class="line">palette = &quot;jco&quot;, #jco jourbal color palette </div><div class="line">sort.val = &quot;asc&quot;, #Sort the value in ascending order </div><div class="line">sort.by.groups = TRUE, #Sort inside each group </div><div class="line">x.text.angle=90 #Rotate vertically x axis texts )</div><div class="line">bp+font(&quot;x.text&quot;, size = 8)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-f1195474adb47ef5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#Scatter plots(sp)</div><div class="line">sp &lt;- ggscatter(mtcars, x=&quot;wt&quot;, y=&quot;mpg&quot;, add = &quot;reg.line&quot;, #Add regression line </div><div class="line">conf.int = TRUE, #Add confidence interval </div><div class="line">color = &quot;cyl&quot;, palette = &quot;jco&quot;,#Color by group cyl </div><div class="line">shape = &quot;cyl&quot; #Change point shape by groups cyl </div><div class="line">)+ </div><div class="line">stat_cor(aes(color=cyl), label.x = 3) #Add correlation coefficientsp</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-60d2ce55b9ce82f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="图形排列"><a href="#图形排列" class="headerlink" title="图形排列"></a>图形排列</h2><blockquote>
<p>多幅图形排列于一面</p>
</blockquote>
<ul>
<li>ggpubr::ggarrange()<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggarrange(bxp, dp, bp+rremove(&quot;x.text&quot;), labels = c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;), ncol = 2, nrow = 2)</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-dbc9f5f6ba4082ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>cowplot::plot.grid()<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plot_grid(bxp, dp, bp+rremove(&quot;x.text&quot;), labels = c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;), ncol = 2, nrow = 2)</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-dbc9f5f6ba4082ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>gridExtra::grid.arrange()<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grid.arrange(bxp, dp, bp+rremove(&quot;x.text&quot;), ncol=2, nrow=2)</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-0d3d087bce2af907.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="排列图形注释"><a href="#排列图形注释" class="headerlink" title="排列图形注释"></a>排列图形注释</h2><ul>
<li>ggpubr::annotate_figure()</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">figure &lt;- ggarrange(sp, bp+font(&quot;x.text&quot;, size = 10), ncol = 1, nrow = 2)</div><div class="line">annotate_figure(figure, top=text_grob(&quot;Visualizing mpg&quot;, color = &quot;red&quot;, </div><div class="line">face = &quot;bold&quot;, size=14), bottom = text_grob(&quot;Data source:\n mtcars data set&quot;, </div><div class="line">color = &quot;blue&quot;, hjust = 1, x=1, face = &quot;italic&quot;, size=10), left = text_grob(&quot;Figure arranged using ggpubr&quot;, color = &quot;green&quot;, rot = 90), </div><div class="line">right = &quot;I&apos;m done, thanks :-)!&quot;, fig.lab = &quot;Figure 1&quot;, fig.lab.face = &quot;bold&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-36ca476191d8af86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="绘图面板对齐"><a href="#绘图面板对齐" class="headerlink" title="绘图面板对齐"></a>绘图面板对齐</h2><ul>
<li>绘制生存曲线<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">library(survival)</div><div class="line">head(colon[, c(1:4)])</div><div class="line">#Fit survival curves</div><div class="line">fit &lt;- survfit(Surv(time, status)~adhere, data = colon)</div><div class="line">library(survminer)</div><div class="line">ggsurv &lt;- ggsurvplot(fit, data = colon, palette = &quot;jco&quot;, #jco palette </div><div class="line">pval = TRUE, pval.coord=c(500, 0.4), #Add p-value </div><div class="line">risk.table = TRUE #Add risk table)</div><div class="line">names(ggsurv)</div><div class="line">`</div></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">## [1] &quot;plot&quot; &quot;table&quot; &quot;data.survplot&quot; &quot;data.survtable&quot;</div></pre></td></tr></table></figure>
<blockquote>
<p>ggsurv是一个包含两部分的list </p>
<ul>
<li>plot：生存曲线</li>
<li>table：风险表<br>可以用ggarrange()进行排列这两者<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggarrange(ggsurv$plot, ggsurv$table, heights = c(2, 0.7), ncol = 1, nrow = 2)</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-e53edb9d332af479.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>上图中的坐标轴没有对齐，可以通过参数align来设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggarrange(ggsurv$plot, ggsurv$table, heights = c(2, 0.7), ncol = 1, nrow = 2, align = &quot;v&quot;)</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-4e2c926c330d1680.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="改变排列图的行列"><a href="#改变排列图的行列" class="headerlink" title="改变排列图的行列"></a>改变排列图的行列</h2><p>设置面板为两行两列，其中sp占据第一行的两列，bxp以及dp置于第二行的两列<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggarrange(sp, #First row with scatter plot(sp) </div><div class="line">ggarrange(bxp, dp, ncol = 2, labels = c(&quot;B&quot;,&quot;C&quot;)),#Second row with box and dot plot </div><div class="line">nrow = 2, labels = &quot;A&quot; #Labels of the scatter plot)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-6b2884cdeeb38d66.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="R包cowplot"><a href="#R包cowplot" class="headerlink" title="R包cowplot"></a>R包cowplot</h2><blockquote>
<p>cowplot::ggdraw()可以将图形置于特定位置, ggdraw()首先会初始化一个绘图面板， 接下来draw_plot()则是将图形绘制于初始化的绘图面板中，通过参数设置可以将图形置于特定位置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">draw_plot(plot, x=0, y=0, width=1, height=1)</div></pre></td></tr></table></figure></p>
</blockquote>
<p>其中： </p>
<ul>
<li>plot:将要放置的图形 </li>
<li>x,y:控制图形位置 </li>
<li>width,height:图形的宽度和高度</li>
<li>draw_plot_label():为图形添加标签<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">draw_plot_label(label, x=0, y=1, size=16, ...)</div></pre></td></tr></table></figure>
</li>
</ul>
<p>其中：</p>
<ul>
<li>label:标签</li>
<li>x,y:控制标签位置</li>
<li>size:标签字体大小</li>
</ul>
<p>下面通过一个例子来讲解如何将多个图形放置在特定的位置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggdraw()+ draw_plot(bxp, x=0, y=0.5, width=0.5, height = 0.5)+</div><div class="line">draw_plot(dp, x=0.5, y=0.5, width = 0.5, height = 0.5)+ </div><div class="line">draw_plot(bp, x=0, y=0, width = 1.5, height = 0.5)+ </div><div class="line">draw_plot_label(label = c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;), size = 15, x=c(0, 0.5, 0), y=c(1, 1, 0.5))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-a342161e1f1e5cf4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="R包gridExtra"><a href="#R包gridExtra" class="headerlink" title="R包gridExtra"></a>R包gridExtra</h2><blockquote>
<p>gridExtra::arrangeGrop()改变行列分布</p>
</blockquote>
<p>下面将sp置于第一行并横跨两列，而bxp和dp分别分布于第二行两列<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">grid.arrange(sp, #First row with one plot spaning over 2 columns</div><div class="line">arrangeGrob(bxp, dp, ncol = 2), #Second row with 2plots in 2 different columns </div><div class="line">nrow=2) #number of rows</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-bd23e000d25050e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>也可以通过函数grid.arrange中的layout_matrix来设置复杂的图形布局<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">grid.arrange(bp, #bar plot spaning two columns </div><div class="line">bxp, sp, #box plot amd scatter plot </div><div class="line">ncol=2, nrow=2, layout_matrix=rbind(c(1, 1), c(2, 3)))</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-918661a64ae22dcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>要相对grid.arrange()以及arrangeGrob()的输出进行注释，首先要利用as_ggplot()将其转化为ggplot图形，进而利用函数draw_plot_label()对其进行注释。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">gt &lt;- arrangeGrob(bp, bxp, sp, layout_matrix = rbind(c(1,1),c(2, 3)))</div><div class="line">p &lt;- as_ggplot(gt)+ </div><div class="line">draw_plot_label(label = c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;), size = 15, x=c(0, 0, 0.5), y=c(1, 0.5, 0.5))</div><div class="line">p</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-251b2907ceddcbc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="R包grid"><a href="#R包grid" class="headerlink" title="R包grid"></a>R包grid</h2><blockquote>
<p>R包grid中的grid.layout()可以设置复杂的图形布局，viewport()可以定义一个区域用来安置图形排列，print()则用来将图形置于特定区域。 总结起来步骤如下：</p>
</blockquote>
<ul>
<li>创建图形p1,p2,p3,…</li>
<li>grid.newpage()创建一个画布</li>
<li>创建图形布局，几行几列</li>
<li>定义布局的矩形区域</li>
<li>print：将图形置于特定区域<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">library(grid)</div><div class="line">#Move to a new page</div><div class="line">grid.newpage()</div><div class="line">#Create layout:nrow=3, ncol=2</div><div class="line">pushViewport(viewport(layout = grid.layout(nrow=3, ncol=2)))</div><div class="line">#A helper function to define a region on the layout</div><div class="line">define_region &lt;- function(row, col)&#123; </div><div class="line">viewport(layout.pos.row = row, layout.pos.col = col)&#125;</div><div class="line">#Arrange the plots</div><div class="line">print(sp, vp=define_region(row=1, col=1:2)) #Span over two columns</div><div class="line">print(bxp, vp=define_region(row=2, col=1))</div><div class="line">print(dp, vp=define_region(row=2, col=2))</div><div class="line">print(bp+rremove(&quot;x.text&quot;), vp=define_region(row=3, col=1:2))</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="设置共同图例"><a href="#设置共同图例" class="headerlink" title="设置共同图例"></a>设置共同图例</h2><blockquote>
<p>ggpubr::ggarrange()可以为组合图形添加共同图例</p>
</blockquote>
<ul>
<li>common.legeng=TRUE:在图形旁边添加图例</li>
<li>legend：指定legend的位置，主要选项有：top、bottom、left、right。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggarrange(bxp, dp, labels = c(&quot;A&quot;, &quot;B&quot;), common.legend = TRUE, legend = &quot;bottom&quot;)</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-ca42c6bbb45bcfdf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="含有边际密度图的散点图"><a href="#含有边际密度图的散点图" class="headerlink" title="含有边际密度图的散点图"></a>含有边际密度图的散点图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">sp &lt;- ggscatter(iris, x=&quot;Sepal.Length&quot;, y=&quot;Sepal.Width&quot;, color=&quot;Species&quot;, </div><div class="line">palette = &quot;jco&quot;, size=3, alpha=0.6)+border()</div><div class="line">#Marginal density plot of x(top panel) and y(right panel)</div><div class="line">xplot &lt;- ggdensity(iris, &quot;Sepal.Length&quot;, fill=&quot;Species&quot;,palette = &quot;jco&quot;)</div><div class="line">yplot &lt;- ggdensity(iris, &quot;Sepal.Width&quot;, fill=&quot;Species&quot;, palette = &quot;jco&quot;)+rotate()</div><div class="line">#Clean the plots</div><div class="line">xplot &lt;- xplot+clean_theme()</div><div class="line">yplot &lt;- yplot+clean_theme()</div><div class="line">#Arrange the plots</div><div class="line">ggarrange(xplot, NULL, sp, yplot, ncol = 2, nrow = 2, align = &quot;hv&quot;, widths = c(2, 1), </div><div class="line">heights = c(1, 2), common.legend = TRUE)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-1565dd7ff1900770.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="ggplot图、文本、表格组合"><a href="#ggplot图、文本、表格组合" class="headerlink" title="ggplot图、文本、表格组合"></a>ggplot图、文本、表格组合</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">density.p &lt;- ggdensity(iris, x=&quot;Sepal.Length&quot;, fill=&quot;Species&quot;, palette = &quot;jco&quot;)</div><div class="line">#Compute the summary table of Sepal.Length</div><div class="line">stable &lt;- desc_statby(iris, measure.var = &quot;Sepal.Length&quot;, grps = &quot;Species&quot;)</div><div class="line">stable &lt;- stable[, c(&quot;Species&quot;, &quot;length&quot;, &quot;mean&quot;, &quot;sd&quot;)]</div><div class="line">#Summary table plot, medium and theme</div><div class="line">stable.p &lt;- ggtexttable(stable, rows = NULL, theme = ttheme(&quot;mOrange&quot;))</div><div class="line">text &lt;- paste(&quot;iris data set gives the measurements in cm&quot;, &quot;of the variables sepal length and width&quot;, &quot;and petal length and width, respectively,&quot;, &quot;for 50 flowers from each of 3 species of iris.&quot;, &quot;The species are Iris setosa, versicolor, and virginica.&quot;, sep = &quot; &quot;)</div><div class="line">text.p &lt;- ggparagraph(text = text, face = &quot;italic&quot;, size = 11, color = &quot;black&quot;)</div><div class="line">#Arrange the plots on the same page</div><div class="line">ggarrange(density.p, stable.p, text.p, ncol = 1, nrow = 3, heights = c(1, 0.5, 0.3))</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-6d68d9bbc420bdd1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="ggplot图形中嵌入图形元素"><a href="#ggplot图形中嵌入图形元素" class="headerlink" title="ggplot图形中嵌入图形元素"></a>ggplot图形中嵌入图形元素</h2><blockquote>
<p>ggplot2::annotation_custom()可以添加各种图形元素到ggplot图中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">annotation_custom(grob, xmin, xmax, ymin, ymax)</div></pre></td></tr></table></figure></p>
</blockquote>
<p>其中：</p>
<ul>
<li>grob:要添加的图形元素</li>
<li>xmin, xmax: x轴方向位置（水平方向）</li>
<li>ymin, ymax: y轴方向位置（竖直方向）</li>
</ul>
<h2 id="ggplot图形中添加table"><a href="#ggplot图形中添加table" class="headerlink" title="ggplot图形中添加table"></a>ggplot图形中添加table</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">density.p+annotation_custom(ggplotGrob(stable.p), xmin = 5.5, xmax = 8, ymin = 0.7)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-3806bee958243f30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="ggplot图形中添加box-plot"><a href="#ggplot图形中添加box-plot" class="headerlink" title="ggplot图形中添加box plot"></a>ggplot图形中添加box plot</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">sp &lt;- ggscatter(iris, x=&quot;Sepal.Length&quot;, y=&quot;Sepal.Width&quot;, color = &quot;Species&quot;, palette = &quot;jco&quot;, size = 3, alpha=0.6)</div><div class="line">xbp &lt;- ggboxplot(iris$Sepal.Length, width = 0.3, fill = &quot;lightgray&quot;)+ rotate()+theme_transparent()</div><div class="line">ybp &lt;- ggboxplot(iris$Sepal.Width, width = 0.3, fill=&quot;lightgray&quot;)+theme_transparent()</div><div class="line"># Create the external graphical objects</div><div class="line"># called a &quot;grop&quot; in Grid terminology</div><div class="line">xbp_grob &lt;- ggplotGrob(xbp)</div><div class="line">ybp_grob &lt;- ggplotGrob(ybp)</div><div class="line">#place box plots inside the scatter plot</div><div class="line">xmin &lt;- min(iris$Sepal.Length)</div><div class="line">xmax &lt;- max(iris$Sepal.Length)</div><div class="line">ymin &lt;- min(iris$Sepal.Width)</div><div class="line">ymax &lt;- max(iris$Sepal.Width)</div><div class="line">yoffset &lt;- (1/15)*ymax</div><div class="line">xoffset &lt;- (1/15)*xmax</div><div class="line"># Insert xbp_grob inside the scatter plots</div><div class="line">p+annotation_custom(grob = xbp_grob, xmin = xmin, xmax = xmax, </div><div class="line">ymin = ymin-yoffset, ymax = ymin+yoffset)+</div><div class="line"># Insert ybp_grob inside the scatter plot</div><div class="line">annotation_custom(grob = ybp_grob, xmin = xmin-xoffset, </div><div class="line">xmax=xmin+xoffset, ymin=ymin, ymax=ymax)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-d94210f5f4783fbd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="ggplot图形添加背景"><a href="#ggplot图形添加背景" class="headerlink" title="ggplot图形添加背景"></a>ggplot图形添加背景</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#import the imageimg.file &lt;- system.file(file.path(&quot;images&quot;, &quot;background-image.png&quot;), package = &quot;ggpubr&quot;)</div><div class="line">img &lt;- png::readPNG(img.file)</div></pre></td></tr></table></figure>
<blockquote>
<p>利用ggpubr::background_image()为ggplot图形添加背景图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(ggplot2)</div><div class="line">library(ggpubr)</div><div class="line">ggplot(iris, aes(Species,Sepal.Length))+</div><div class="line">background_image(img)+</div><div class="line">geom_boxplot(aes(fill=Species), color=&quot;white&quot;)+ fill_palette(&quot;jco&quot;)</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-5f7514c22e7add04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="修改透明度"><a href="#修改透明度" class="headerlink" title="修改透明度"></a>修改透明度</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(iris, aes(Species,Sepal.Length))+</div><div class="line">background_image(img)+geom_boxplot(aes(fill=Species), color=&quot;white&quot;, alpha=0.5)+ </div><div class="line">fill_palette(&quot;jco&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-cd305569d612b588.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="多页排列"><a href="#多页排列" class="headerlink" title="多页排列"></a>多页排列</h2><blockquote>
<p>日常工作中我们有时要绘制许多图，假如我们有16幅图，每页排列4张的话就需要4页才能排完，而ggpubr::ggarrange()可以通过制定行列数自动在多页之间进行图形排列<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">multi.page &lt;-ggarrange(bxp, dp, bp, sp, nrow = 1, ncol = 2)</div></pre></td></tr></table></figure></p>
</blockquote>
<p>上述代码返回两页每页两图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">multi.page[[1]]</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-033d7bb70f07ee91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">multi.page[[2]]</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-a92858066ced1ad0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="利用ggarrange-嵌套布局"><a href="#利用ggarrange-嵌套布局" class="headerlink" title="利用ggarrange()嵌套布局"></a>利用ggarrange()嵌套布局</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">p1 &lt;- ggarrange(sp, bp+font(&quot;x.text&quot;, size = 9), ncol = 1, nrow = 2)</div><div class="line">p2 &lt;- ggarrange(density.p, stable.p, text.p, ncol = 1, nrow = 3, </div><div class="line">heights = c(1, 0.5, 0.3))</div><div class="line">ggarrange(p1, p2, ncol = 2, nrow = 1)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-e6bf2901af3d315e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 10 x64 (build 15063)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936 </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C</div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936 </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] grid stats graphics grDevices utils datasets methods </div><div class="line">## [8] base </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] survminer_0.4.0 survival_2.41-3 ggpubr_0.1.5 magrittr_1.5 </div><div class="line">## [5] cowplot_0.8.0 ggplot2_2.2.1 gridExtra_2.2.1</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">## [1] zoo_1.8-0 purrr_0.2.3 reshape2_1.4.2 </div><div class="line">## [4] splines_3.4.1 lattice_0.20-35 colorspace_1.3-2 </div><div class="line">## [7] htmltools_0.3.6 yaml_2.1.14 survMisc_0.5.4</div><div class="line">## [10] rlang_0.1.2 foreign_0.8-69 glue_1.1.1 </div><div class="line">## [13] bindrcpp_0.2 bindr_0.1 plyr_1.8.4 </div><div class="line">## [16] stringr_1.2.0 munsell_0.4.3 gtable_0.2.0 </div><div class="line">## [19] ggsci_2.7 psych_1.7.5 evaluate_0.10.1 </div><div class="line">## [22] labeling_0.3 knitr_1.17 parallel_3.4.1 </div><div class="line">## [25] broom_0.4.2 Rcpp_0.12.12 xtable_1.8-2 </div><div class="line">## [28] scales_0.4.1 backports_1.1.0 cmprsk_2.2-7 </div><div class="line">## [31] km.ci_0.5-2 mnormt_1.5-5 png_0.1-7 </div><div class="line">## [34] digest_0.6.12 stringi_1.1.5 dplyr_0.7.2 </div><div class="line">## [37] KMsurv_0.1-5 rprojroot_1.2 tools_3.4.1 </div><div class="line">## [40] lazyeval_0.2.0 tibble_1.3.3 tidyr_0.7.0 </div><div class="line">## [43] pkgconfig_2.0.1 Matrix_1.2-11 data.table_1.10.4</div><div class="line">## [46] assertthat_0.2.0 rmarkdown_1.6 R6_2.2.2 </div><div class="line">## [49] nlme_3.1-131 compiler_3.4.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><ul>
<li>wechat: yt056410</li>
<li>Email: tyan@zju.edu.cn</li>
<li>QQ: 1051927088</li>
<li>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></li>
<li>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></li>
<li>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></li>
</ul>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛</p>
<ul>
<li>浙江大学作物遗传育种在读研究生（生物信息学方向）</li>
<li>伪码农，R语言爱好者，爱开源</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-e6bf2901af3d315e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;R语言基本绘图函数中可以利用par()以及layout()来进行图形排列，但是这两个函数对于ggplot图则不太适用，本文主要讲解如何对多ggplot图形多页面进行排列。主要讲解如何利用包gridExtra、cowplot以及ggpubr中的函数进行图形排列。&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggpubr" scheme="https://ytlogos.github.io/tags/ggpubr/"/>
    
  </entry>
  
  <entry>
    <title>ggplot2学习笔记系列之利用ggplot2绘制散点图</title>
    <link href="https://ytlogos.github.io/2017/07/12/ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97%E4%B9%8B%E5%88%A9%E7%94%A8ggplot2%E7%BB%98%E5%88%B6%E6%95%A3%E7%82%B9%E5%9B%BE/"/>
    <id>https://ytlogos.github.io/2017/07/12/ggplot2学习笔记系列之利用ggplot2绘制散点图/</id>
    <published>2017-07-11T23:47:05.000Z</published>
    <updated>2017-09-13T23:59:38.111Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-c6a0647f86050fb6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>1 简介<br>散点图通常用来刻画两个连续型变量之间的关系。绘制散点图时数据集中的每一个观测值都由散点图中的一个点来表示。利用包<strong>ggplot2</strong>可以绘制十分漂亮的散点图。 利用<strong>ggplot2</strong>绘图前先确保我们所使用的数据集是<strong>data.frame</strong>形式。<strong>ggplot2</strong>绘图利用映射将数据赋予给坐标轴上进而添加几何对象形成图形。绘图前先加载包<strong>ggplot2</strong> 即<strong>library(ggplot2)</strong>。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Load packages</div><div class="line">library(ggplot2)#visualization</div></pre></td></tr></table></figure></p>
<p>加载完包之后，本文利用数据集<strong>mtcars</strong>来演示散点图绘制。 先查看数据集的前几行来了解<strong>mtcars</strong>数据集。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#check data</div><div class="line">head(mtcars)</div></pre></td></tr></table></figure></p>
<p>2 绘制简单的散点图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point()</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-d1d4d773b39fb55a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>2.1 <strong>shape</strong>参数修改图形的形状<br>                                         <strong>可选点图形形状</strong>:<br><img src="http://upload-images.jianshu.io/upload_images/2084719-92b206d9539bc599.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg)) +geom_point(shape=17)</div></pre></td></tr></table></figure></p>
<p>2.2 <strong>size</strong>参数修改点的大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data = mtcars, aes(x=wt, y=mpg))+geom_point(size=5)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-468edde6998fbc45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>2.3 <strong>color</strong>参数修改点的颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg))+geom_point(color=&quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-f2a2af9082fb75b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>3 绘制分组的散点图<br>可将分组变量（因子或字符变量，可通过<strong>factor()</strong>强制性将非因子变量转为因子变量）赋值给颜色或性状属性，实现分组散点图的绘制。<br>3.1 首先将数值型变量<code>cyl</code>转换为因子型变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mtcars$cyl &lt;- factor(mtcars$cyl)</div></pre></td></tr></table></figure></p>
<p>3.2 分组变量赋值给颜色属性(变量赋值必须在aes里面)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg, color=cyl))+geom_point(size=3)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-c6a0647f86050fb6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>3.3 分组变量赋值给性状属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg, shape=cyl))+geom_point(size=3)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-4d500c2263205aec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>如果对R语言默认的颜色或者形状不满意，可以通过<code>scale_color_brewer()</code>或者<code>scale_color_manual()</code>函数自定义点的颜色以及<code>scale_shape_manual()</code>函数自定义点的形状。 下面我们将分组变量<strong>cyl</strong>同时赋值给颜色和形状属性。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg, color=cyl, shape= cyl))+</div><div class="line">geom_point(size=3)+ scale_color_brewer(palette = &quot;Accent&quot;)+</div><div class="line">scale_shape_manual(values = c(2, 9, 16))#Accent是一调色板，可选点的形状见上</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-dfd4f44ad7ba946a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>4 将连续变量映射给颜色、大小和形状等属性<br>4.1 将连续性变量disp映射给颜色属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg, color=disp))+geom_point(size=3)</div></pre></td></tr></table></figure></p>
<p>从图中可以发现值越大对应的颜色越浅，以下是通过人为设置色阶使值大小与颜色深浅保持一致<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg, color=disp))+</div><div class="line">geom_point(size=3)+ scale_color_gradient(low=&quot;lightblue&quot;, high=&quot;darkblue&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-95957e2d11770434.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>4.2 将连续性变量disp映射给大小属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg, size=disp))+geom_point(color=&quot;red&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-61861423d92dee56.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>5 重叠点的处理<br>当数据量非常大时，会导致数据重叠点非常严重，可通过使用半透明的点避免。<strong>alpha</strong>参数控制点的透明度。下面利用数据集<strong>diamonds</strong>来演示。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#check data</div><div class="line">head(diamonds)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#未使用透明点处理</div><div class="line">ggplot(data=diamonds, aes(x=carat, y=price))+geom_point()</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-10cdfaabe44eef3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#使用alpha参数调整点透明度</div><div class="line">ggplot(data=diamonds, aes(x=carat, y=price))+geom_point(alpha=0.1)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-1c751afcdaa834e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>6 为散点图添加拟合曲线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#使用数据集mtcars</div><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg))+geom_point()+stat_smooth(method=&quot;lm&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-4fa6e3822fcf9a7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#也可以去除掉拟合曲线的置信区间</div><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg))+geom_point()+stat_smooth(method=&quot;lm&quot;, se=FALSE)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-8a8be783c2d23499.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#也可以针对不同类型的cyl来进行拟合</div><div class="line">ggplot(data=mtcars, aes(x=wt, y=mpg, color=cyl))+</div><div class="line">geom_point()+stat_smooth(method=&quot;lm&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-141622fb2f69c5f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410</p>
<p>Email: tyan@zju.edu.cn</p>
<p>QQ: 1051927088</p>
<p>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></p>
<p>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></p>
<p>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛</p>
<p>浙江大学作物遗传育种在读研究生（生物信息学方向）</p>
<p>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-c6a0647f86050fb6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;1 简介&lt;br&gt;散点图通常用来刻画两个连续型变量之间的关系。绘制散点图时数据集中的每一个观测值都由散点图中的一个点来表示。利用包&lt;strong&gt;ggplot2&lt;/strong&gt;可以绘制十分漂亮的散点图。 利用&lt;strong&gt;ggplot2&lt;/strong&gt;绘图前先确保我们所使用的数据集是&lt;strong&gt;data.frame&lt;/strong&gt;形式。&lt;strong&gt;ggplot2&lt;/strong&gt;绘图利用映射将数据赋予给坐标轴上进而添加几何对象形成图形。绘图前先加载包&lt;strong&gt;ggplot2&lt;/strong&gt; 即&lt;strong&gt;library(ggplot2)&lt;/strong&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="scatter plot" scheme="https://ytlogos.github.io/tags/scatter-plot/"/>
    
  </entry>
  
  <entry>
    <title>r4ds学习笔记之ggplot2</title>
    <link href="https://ytlogos.github.io/2017/07/01/r4ds%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bggplot2/"/>
    <id>https://ytlogos.github.io/2017/07/01/r4ds学习笔记之ggplot2/</id>
    <published>2017-07-01T09:55:59.000Z</published>
    <updated>2017-09-13T23:48:50.505Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-515da9e1fb644123.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>为了进一步加强以及整合自己<strong>data science</strong>的能力，最近打算在<a href="https://ytlogos.github.io/">我的博客</a>开辟一个新类<strong>r4ds</strong>，专门用来记录学习<strong>Hadley Wickham</strong>大神的新作<a href="http://r4ds.had.co.nz/" target="_blank" rel="external">R for Data Science</a>的读书笔记。该书推荐我们入门data science可以从可视化开始，这也是该书目录布局的第一章。因此开始学习R语言可视化。</p>
<a id="more"></a>
<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>本章主要聚焦于可视化包<strong>ggplot2</strong>,为了写这本书，大神专门整合了一系列神包成为一个包<strong>tidyverse</strong>，因此第一步就是要先安装该包并加载。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#install tidyverse</div><div class="line">install.packages(&quot;tidyverse&quot;)</div><div class="line">#load tidyverse</div><div class="line">library(tidyverse)</div></pre></td></tr></table></figure></p>
<h2 id="ggplot2简介"><a href="#ggplot2简介" class="headerlink" title="ggplot2简介"></a>ggplot2简介</h2><p>利用数据集<strong>mpg</strong>来探究发动机大小跟好友耗油是否存在某种关系，先check一下该数据集。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">head(mpg)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-08f00cbdb4b66222.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>在各个变量中：</p>
<ul>
<li>disp:车发动机大小</li>
<li>hwy:衡量耗油率的一个指标，更多信息可？mpg查看</li>
</ul>
<p>要探究displ与hwy的关系，最快就是画个图了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data=mpg)+ geom_point(mapping = aes(x=displ, y=hwy))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-8feb017d39aaa075.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>图中显示两者呈现负相关，disp越大，hwy越低。<br><strong>ggplot2</strong>绘图规则主要如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(data=&lt;DATA&gt;)+</div><div class="line">     &lt;GEOM_FUNCTION&gt;(mapping=aes(&gt;MAPPINGS&gt;))</div></pre></td></tr></table></figure></p>
<p><strong>ggplot()</strong>会创建一个底板，然后可以通过<strong>geom_function()</strong>不断地添加图形元素，进行丰富。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggplot(mpg)#create an empty graph</div><div class="line">p+geom_point(aes(x=displ, y=hwy))#add a layer to the empty graph</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-8feb017d39aaa075.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="美学映射Aesthetic-Mappings"><a href="#美学映射Aesthetic-Mappings" class="headerlink" title="美学映射Aesthetic Mappings"></a>美学映射Aesthetic Mappings</h2><p>美学映射在<strong>ggplot2</strong>中是一个十分重要的概念，比如前文我们将displ、hwy分别映射给x、y轴，同时还可以用来控制图形元素大小、形状、颜色等属性。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(mpg)+ </div><div class="line">geom_point(aes(x=displ, y=hwy, color=class))#将class映射给颜色属性，这样不同class就表现不同颜色</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-515da9e1fb644123.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>可以看到，通过颜色映射<strong>ggplot2</strong>会自动创建一个<strong>legend</strong>，需要注意的是这里颜色颜色我们是利用class，这是一个离散性变量，如果我们将之映射给点的size，则会出现warning,至于原因，看warning。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mpg)+ geom_point(aes(x=displ, y=hwy, size=class))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-75b7814d86b5f5b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>或者将class映射给alpha参数，这是一个控制点透明度的参数;shape是一个控制形状的参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mpg)+ geom_point(aes(x=displ, y=hwy, alpha=class))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-1d6dd6c8cbe3b016.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mpg)+ geom_point(aes(x=displ, y=hwy, shape=class))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-53c76d1b9cf0fea6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>发现当映射shape其中SUV是没有形状的，这是因为<strong>ggplot2</strong>只默认6种形状，这个问题后续解决。 需要注意的是映射参数必须在aes(),不然就无法映射。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(mpg)+ geom_point(aes(x=displ, y=hwy), color=&quot;blue&quot;)#all the points are blue</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-742710de940018e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>今天就讲到这，下次继续</p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.1 (2017-06-30)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 8.1 x64 (build 9600)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936 </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C ## [5] LC_TIME=Chinese (Simplified)_China.936 </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats graphics grDevices utils datasets methods base </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] forcats_0.2.0 stringr_1.2.0 dplyr_0.7.1 </div><div class="line">## [4] purrr_0.2.2.2 readr_1.1.1 tidyr_0.6.3 </div><div class="line">## [7] tibble_1.3.3 ggplot2_2.2.1 tidyverse_1.1.1.9000</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">## [1] Rcpp_0.12.11 cellranger_1.1.0 compiler_3.4.1 </div><div class="line">## [4] plyr_1.8.4 bindr_0.1 tools_3.4.1 </div><div class="line">## [7] digest_0.6.12 lubridate_1.6.0 jsonlite_1.5 </div><div class="line">## [10] evaluate_0.10.1 nlme_3.1-131 gtable_0.2.0 </div><div class="line">## [13] lattice_0.20-35 pkgconfig_2.0.1 rlang_0.1.1 </div><div class="line">## [16] psych_1.7.5 rstudioapi_0.6 yaml_2.1.14 </div><div class="line">## [19] parallel_3.4.1 haven_1.0.0 bindrcpp_0.2 </div><div class="line">## [22] xml2_1.1.1 httr_1.2.1 knitr_1.16 </div><div class="line">## [25] hms_0.3 rprojroot_1.2 grid_3.4.1 </div><div class="line">## [28] glue_1.1.1 R6_2.2.2 readxl_1.0.0 </div><div class="line">## [31] foreign_0.8-69 rmarkdown_1.6 modelr_0.1.0 </div><div class="line">## [34] reshape2_1.4.2 magrittr_1.5 clisymbols_1.2.0 </div><div class="line">## [37] boxes_0.0.0.9000 backports_1.1.0 scales_0.4.1 </div><div class="line">## [40] htmltools_0.3.6 rvest_0.3.2 assertthat_0.2.0 </div><div class="line">## [43] mnormt_1.5-5 colorspace_1.3-2 labeling_0.3 </div><div class="line">## [46] stringi_1.1.5 lazyeval_0.2.0 munsell_0.4.3 </div><div class="line">## [49] broom_0.4.2 crayon_1.3.2.9000</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-515da9e1fb644123.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;为了进一步加强以及整合自己&lt;strong&gt;data science&lt;/strong&gt;的能力，最近打算在&lt;a href=&quot;https://ytlogos.github.io/&quot;&gt;我的博客&lt;/a&gt;开辟一个新类&lt;strong&gt;r4ds&lt;/strong&gt;，专门用来记录学习&lt;strong&gt;Hadley Wickham&lt;/strong&gt;大神的新作&lt;a href=&quot;http://r4ds.had.co.nz/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;R for Data Science&lt;/a&gt;的读书笔记。该书推荐我们入门data science可以从可视化开始，这也是该书目录布局的第一章。因此开始学习R语言可视化。&lt;/p&gt;
    
    </summary>
    
      <category term="r4ds" scheme="https://ytlogos.github.io/categories/r4ds/"/>
    
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
  </entry>
  
  <entry>
    <title>R语言data manipulation学习笔记之subset data</title>
    <link href="https://ytlogos.github.io/2017/06/29/R%E8%AF%AD%E8%A8%80data-manipulation%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bsubset-data/"/>
    <id>https://ytlogos.github.io/2017/06/29/R语言data-manipulation学习笔记之subset-data/</id>
    <published>2017-06-29T12:58:25.000Z</published>
    <updated>2017-09-13T23:48:50.505Z</updated>
    
    <content type="html"><![CDATA[<center><img src="C:\Users\user\Desktop\下载.jpg" alt=""></center>

<p>数据分析过程中我们常常需要从数据集中抽取部分数据，本文将介绍如何提取子数据集，主要利用R自带的函数，以后会专门介绍data manipulation包<strong>dplyr</strong>。 提取子数据集主要分为select以及exclude，这里主要介绍两种方法，一是利用操作符[]进行选取，二是利用subset()进行抽取。<br><a id="more"></a></p>
<p>利用[]进行提取<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#use the iris dataset</div><div class="line">head(iris)</div><div class="line">## Sepal.Length Sepal.Width Petal.Length Petal.Width Species </div><div class="line">## 1   5.1          3.5          1.4        0.2       setosa</div><div class="line">## 2   4.9          3.0          1.4        0.2       setosa</div><div class="line">## 3   4.7          3.2          1.3        0.2       setosa</div><div class="line">## 4   4.6          3.1          1.5        0.2       setosa</div><div class="line">## 5   5.0          3.6          1.4        0.2       setosa</div><div class="line">## 6   5.4          3.9          1.7        0.4       setosa</div><div class="line"># check the column namenames(iris)</div><div class="line"></div><div class="line">## [1] &quot;Sepal.Length&quot; &quot;Sepal.Width&quot; &quot;Petal.Length&quot; &quot;Petal.Width&quot;  &quot;Species&quot;</div></pre></td></tr></table></figure></p>
<p>加入我们想要提取Sepal.Length、Sepal.Width两列数据，可以使用如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">dt1 &lt;- iris[, c(&quot;Sepal.Length&quot;,&quot;Sepal.Width&quot;)]head(dt1)</div><div class="line"></div><div class="line">##   Sepal.Length Sepal.Width</div><div class="line">## 1      5.1         3.5</div><div class="line">## 2      4.9         3.0</div><div class="line">## 3      4.7         3.2</div><div class="line">## 4      4.6         3.1</div><div class="line">## 5      5.0         3.6</div><div class="line">## 6      5.4         3.9</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#也可以直接用列序号代替，比如这里我们想要提要前两列</div><div class="line">dt2 &lt;- iris[, c(1, 2)]head(dt2)</div><div class="line">##   Sepal.Length Sepal.Width</div><div class="line">## 1      5.1         3.5</div><div class="line">## 2      4.9         3.0</div><div class="line">## 3      4.7         3.2</div><div class="line">## 4      4.6         3.1</div><div class="line">## 5      5.0         3.6</div><div class="line">## 6      5.4         3.9</div></pre></td></tr></table></figure>
<p>如果我们需要删除前两列，只需在序号之前添加符号 - 就行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">dt3 &lt;- iris[, c(-1, -2)]head(dt3)</div><div class="line"></div><div class="line">##   Petal.Length Petal.Width Species  </div><div class="line">## 1     1.4          0.2      setosa</div><div class="line">## 2     1.4          0.2      setosa</div><div class="line">## 3     1.3          0.2      setosa</div><div class="line">## 4     1.5          0.2      setosa</div><div class="line">## 5     1.4          0.2      setosa</div><div class="line">## 6     1.7          0.4      setosa</div></pre></td></tr></table></figure></p>
<p>可以看出十分简单就可以提取子数据集，下面介绍subset()<br>，subset()相比于[]主要是可以方便的根据条件提取子数据集。</p>
<h2 id="利用subset-进行提取"><a href="#利用subset-进行提取" class="headerlink" title="利用subset()进行提取"></a>利用<strong>subset()</strong>进行提取</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#create a dataset</div><div class="line">fy &lt;- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)</div><div class="line">company &lt;- c(&quot;Apple&quot;,&quot;Apple&quot;,&quot;Apple&quot;,&quot;Google&quot;,&quot;Google&quot;,&quot;Google&quot;,&quot;Microsoft&quot;,&quot;Microsoft&quot;,&quot;Microsoft&quot;)</div><div class="line">revenue &lt;- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)</div><div class="line">profit &lt;- c(14013,25922,41733,8505,9737,10737,18760,23150,16978) </div><div class="line">companiesData &lt;- data.frame(fy, company, revenue, profit)</div><div class="line">head(companiesData)</div><div class="line">##    fy company revenue profit</div><div class="line">## 1 2010 Apple   65225 14013</div><div class="line">## 2 2011 Apple   108249 25922</div><div class="line">## 3 2012 Apple   156508 41733</div><div class="line">## 4 2010 Google   29321 8505</div><div class="line">## 5 2011 Google   37905 9737</div><div class="line">## 6 2012 Google   50175 10737</div></pre></td></tr></table></figure>
<p>假如我们想要提取revenue超过十万的公司<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">com1 &lt;- subset(companiesData, revenue&gt;100000)</div><div class="line">head(com1)</div><div class="line"></div><div class="line">##    fy company revenue profit</div><div class="line">## 2 2011 Apple   108249 25922</div><div class="line">## 3 2012 Apple   156508 41733</div></pre></td></tr></table></figure></p>
<p>或者我们想要提取在2012年revenue超过6万的公司<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">com2 &lt;- subset(companiesData, fy==&quot;2012&quot;&amp;revenue&gt;60000)</div><div class="line">head(com2)</div><div class="line"></div><div class="line">##    fy  company  revenue profit</div><div class="line">## 3 2012 Apple     156508 41733</div><div class="line">## 9 2012 Microsoft  73723 16978</div></pre></td></tr></table></figure></p>
<p>或者提取在2012年revenue超过6万、profit超过4万的公司<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">com3 &lt;- subset(companiesData, fy==&quot;2012&quot;&amp;revenue&gt;60000&amp;profit&gt;40000)</div><div class="line">com3</div><div class="line"></div><div class="line">##    fy company revenue profit</div><div class="line">## 3 2012 Apple 156508 41733</div></pre></td></tr></table></figure></p>
<p>条件选择也可以使用或，比如我们想要提取profit超过2万或者revenue低于5万的公司<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">com4 &lt;- subset(companiesData, revenue&lt;50000|profit&gt;20000)</div><div class="line">com4</div><div class="line">##    fy company   revenue profit </div><div class="line">## 2 2011 Apple     108249 25922</div><div class="line">## 3 2012 Apple     156508 41733</div><div class="line">## 4 2010 Google    29321 8505</div><div class="line">## 5 2011 Google    37905 9737</div><div class="line">## 8 2011 Microsoft 69943 23150</div></pre></td></tr></table></figure></p>
<p>本文只是粗略的讲解，其实subset()的用法很广，有兴趣的朋友可以自行探索。</p>
<h2 id="sessionInfo"><a href="#sessionInfo" class="headerlink" title="sessionInfo"></a>sessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line"></div><div class="line">## R version 3.4.0 (2017-04-21)</div><div class="line">## Platform: x86_64-pc-linux-gnu (64-bit)</div><div class="line">## Running under: Ubuntu 16.04.2 LTS</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0</div><div class="line">## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C</div><div class="line">## [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 </div><div class="line">## [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 </div><div class="line">## [7] LC_PAPER=en_US.UTF-8 LC_NAME=C </div><div class="line">## [9] LC_ADDRESS=C LC_TELEPHONE=C </div><div class="line">## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats graphics grDevices utils datasets methods base </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">## [1] compiler_3.4.0 backports_1.1.0 magrittr_1.5 rprojroot_1.2 </div><div class="line">## [5] tools_3.4.0 htmltools_0.3.6 yaml_2.1.14 Rcpp_0.12.11 </div><div class="line">## [9] stringi_1.1.5 rmarkdown_1.6 knitr_1.16 stringr_1.2.0 </div><div class="line">## [13] digest_0.6.12 evaluate_0.10.1</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;C:\Users\user\Desktop\下载.jpg&quot; alt=&quot;&quot;&gt;&lt;/center&gt;

&lt;p&gt;数据分析过程中我们常常需要从数据集中抽取部分数据，本文将介绍如何提取子数据集，主要利用R自带的函数，以后会专门介绍data manipulation包&lt;strong&gt;dplyr&lt;/strong&gt;。 提取子数据集主要分为select以及exclude，这里主要介绍两种方法，一是利用操作符[]进行选取，二是利用subset()进行抽取。&lt;br&gt;
    
    </summary>
    
      <category term="Data Manipulation" scheme="https://ytlogos.github.io/categories/Data-Manipulation/"/>
    
    
      <category term="data management" scheme="https://ytlogos.github.io/tags/data-management/"/>
    
  </entry>
  
  <entry>
    <title>R语言data manipulation学习笔记之创建变量、重命名、数据融合</title>
    <link href="https://ytlogos.github.io/2017/06/28/R%E8%AF%AD%E8%A8%80data-manipulation%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%88%9B%E5%BB%BA%E5%8F%98%E9%87%8F%E3%80%81%E9%87%8D%E5%91%BD%E5%90%8D%E3%80%81%E6%95%B0%E6%8D%AE%E8%9E%8D%E5%90%88/"/>
    <id>https://ytlogos.github.io/2017/06/28/R语言data-manipulation学习笔记之创建变量、重命名、数据融合/</id>
    <published>2017-06-28T08:06:11.000Z</published>
    <updated>2017-09-13T23:48:50.505Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-4a45f75977c58bb5.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>数据分析中数据处理也就是data manipulation是十分繁琐的，为此我将在博客里特意建一个分类：Data Manipulation。本文将讲讲如何在R语言中创建变量、重命名以及merge。<br><a id="more"></a></p>
<p>#create a dataset<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">fy &lt;- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)</div><div class="line">company &lt;- c(&quot;Apple&quot;,&quot;Apple&quot;,&quot;Apple&quot;,&quot;Google&quot;,&quot;Google&quot;,&quot;Google&quot;,&quot;Microsoft&quot;,&quot;Microsoft&quot;,&quot;Microsoft&quot;)</div><div class="line">revenue &lt;- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)</div><div class="line">profit &lt;- c(14013,25922,41733,8505,9737,10737,18760,23150,16978) </div><div class="line">companiesData &lt;- data.frame(fy, company, revenue, profit)</div><div class="line">head(companiesData)</div><div class="line">##     fy   company revenue profit</div><div class="line">## 1  2010   Apple   65225  14013</div><div class="line">## 2  2011   Apple  108249  25922</div><div class="line">## 3  2012   Apple  156508  41733</div><div class="line">## 4  2010  Google   29321   8505</div><div class="line">## 5  2011  Google   37905   9737</div><div class="line">## 6  2012  Google   50175  10737</div></pre></td></tr></table></figure></p>
<p>接下来我们需要查看数据集的结构，用str()函数查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">str(companiesData)</div><div class="line">## &apos;data.frame&apos;:    9 obs. of  4 variables:</div><div class="line">##  $ fy     : num  2010 2011 2012 2010 2011 ...</div><div class="line">##  $ company: Factor w/ 3 levels &quot;Apple&quot;,&quot;Google&quot;,..: 1 1 1 2 2 2 3 3 3</div><div class="line">##  $ revenue: num  65225 108249 156508 29321 37905 ...</div><div class="line">##  $ profit : num  14013 25922 41733 8505 9737 ...</div></pre></td></tr></table></figure></p>
<p>可以看到年份fy这里是是数值型，我们需要更改为因子型，方便后期处理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">companiesData$fy &lt;- factor(companiesData$fy, ordered = TRUE)</div></pre></td></tr></table></figure></p>
<p>现在数据已经整理过好了，下面我们来添加变量，比如我们可以看看各个公司的利润率<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">companiesData$margin &lt;- (companiesData$profit/companiesData$revenue)*100</div><div class="line">#查看数据</div><div class="line">head(companiesData)</div><div class="line">##     fy company revenue profit   margin</div><div class="line">## 1 2010   Apple   65225  14013 21.48409</div><div class="line">## 2 2011   Apple  108249  25922 23.94664</div><div class="line">## 3 2012   Apple  156508  41733 26.66509</div><div class="line">## 4 2010  Google   29321   8505 29.00651</div><div class="line">## 5 2011  Google   37905   9737 25.68790</div><div class="line">## 6 2012  Google   50175  10737 21.39910</div></pre></td></tr></table></figure></p>
<p>小数点位数太多了，这里我们保留一位<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">companiesData$margin &lt;- round(companiesData$margin, 1)</div><div class="line">head(companiesData)</div><div class="line">##     fy company revenue profit margin</div><div class="line">## 1 2010   Apple   65225  14013   21.5</div><div class="line">## 2 2011   Apple  108249  25922   23.9</div><div class="line">## 3 2012   Apple  156508  41733   26.7</div><div class="line">## 4 2010  Google   29321   8505   29.0</div><div class="line">## 5 2011  Google   37905   9737   25.7</div><div class="line">## 6 2012  Google   50175  10737   21.4</div></pre></td></tr></table></figure></p>
<p>这样我们就创建了一个新的变量margin，当然也可以删除变量，只要复制需要删除的变量NULL就行了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#delete variable margin</div><div class="line">companiesData$margin &lt;- NULL</div><div class="line">head(companiesData)</div><div class="line">##     fy company revenue profit</div><div class="line">## 1 2010   Apple   65225  14013</div><div class="line">## 2 2011   Apple  108249  25922</div><div class="line">## 3 2012   Apple  156508  41733</div><div class="line">## 4 2010  Google   29321   8505</div><div class="line">## 5 2011  Google   37905   9737</div><div class="line">## 6 2012  Google   50175  10737</div></pre></td></tr></table></figure></p>
<p>再顺便介绍一下transform函数，用于创建变量，transform的格式如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">dataFrame &lt;- transform(dataFrame, newColumn = oldColumn1 + oldColumn2)</div><div class="line">companiesData &lt;- transform(companiesData, margin=round((profit/revenue)*100), 1)</div><div class="line">head(companiesData)</div><div class="line">##     fy company revenue profit margin X1</div><div class="line">## 1 2010   Apple   65225  14013     21  1</div><div class="line">## 2 2011   Apple  108249  25922     24  1</div><div class="line">## 3 2012   Apple  156508  41733     27  1</div><div class="line">## 4 2010  Google   29321   8505     29  1</div><div class="line">## 5 2011  Google   37905   9737     26  1</div><div class="line">## 6 2012  Google   50175  10737     21  1</div></pre></td></tr></table></figure></p>
<p>接下来讲一下merge，主要是merge函数，它要求进行融合的两个数据集需要有共同的变量即id，使用格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">finaldt &lt;- merge(dataset1, dataset2, by=&quot;id&quot;)</div></pre></td></tr></table></figure></p>
<p>这里我们再创建一个数据集用于merge<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#creat another dataset</div><div class="line">company &lt;- c(&quot;Apple&quot;,&quot;Google&quot;,&quot;Microsoft&quot;)</div><div class="line">ava1 &lt;- c(1,2,3)</div><div class="line">data2 &lt;- data.frame(company, ava1)</div><div class="line">head(data2)</div><div class="line">##     company ava1</div><div class="line">## 1     Apple    1</div><div class="line">## 2    Google    2</div><div class="line">## 3 Microsoft    3</div></pre></td></tr></table></figure></p>
<p>数据集data2与数据集companiesData具有共同的变量company(id)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#merge the two dataset</div><div class="line">newdata &lt;- merge(companiesData, data2, by=&quot;company&quot;)</div></pre></td></tr></table></figure></p>
<p>这样就得到一个完整的数据集了，当然添加行、列还有两个很有用的函数：rbind()以及cbind(),这里就不介绍了 最后讲一下重命名，其实很简单<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">companiesData$company &lt;- c(&quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;G&quot;, &quot;G&quot;, &quot;G&quot;, &quot;M&quot;, &quot;M&quot;, &quot;M&quot;)</div><div class="line">head(companiesData)</div><div class="line">##     fy company revenue profit margin X1</div><div class="line">## 1 2010       A   65225  14013     21  1</div><div class="line">## 2 2011       A  108249  25922     24  1</div><div class="line">## 3 2012       A  156508  41733     27  1</div><div class="line">## 4 2010       G   29321   8505     29  1</div><div class="line">## 5 2011       G   37905   9737     26  1</div><div class="line">## 6 2012       G   50175  10737     21  1</div><div class="line">#rename the colname</div><div class="line">colnames(companiesData) &lt;- c(&quot;Year&quot;, &quot;Com&quot;, &quot;Rev&quot;, &quot;Pro&quot;, &quot;Mar&quot;)</div></pre></td></tr></table></figure></p>
<p>#seessioninfo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.0 (2017-04-21)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 8.1 x64 (build 9600)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936   </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C                              </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936    </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">##  [1] compiler_3.4.0  backports_1.1.0 magrittr_1.5    rprojroot_1.2  </div><div class="line">##  [5] tools_3.4.0     htmltools_0.3.6 yaml_2.1.14     Rcpp_0.12.11   </div><div class="line">##  [9] stringi_1.1.5   rmarkdown_1.5   knitr_1.16      stringr_1.2.0  </div><div class="line">## [13] digest_0.6.12   evaluate_0.10</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410<br>Email: tyan@zju.edu.cn<br>QQ: 1051927088<br>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a><br>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a><br>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛<br>浙江大学作物遗传育种在读研究生（生物信息学方向）<br>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-4a45f75977c58bb5.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;数据分析中数据处理也就是data manipulation是十分繁琐的，为此我将在博客里特意建一个分类：Data Manipulation。本文将讲讲如何在R语言中创建变量、重命名以及merge。&lt;br&gt;
    
    </summary>
    
      <category term="Data Manipulation" scheme="https://ytlogos.github.io/categories/Data-Manipulation/"/>
    
    
      <category term="manipulation" scheme="https://ytlogos.github.io/tags/manipulation/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化学习笔记之ggpubr包</title>
    <link href="https://ytlogos.github.io/2017/06/26/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bggpubr%E5%8C%85/"/>
    <id>https://ytlogos.github.io/2017/06/26/R语言可视化学习笔记之ggpubr包/</id>
    <published>2017-06-26T11:43:11.000Z</published>
    <updated>2017-09-13T23:48:50.505Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-fbe5b444e2efcb8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a href="http://docs.ggplot2.org/current/" target="_blank" rel="external">Hadley Wickham</a>创建的可视化包ggplot2可以流畅地进行优美的可视化，但是如果要通过ggplot2定制一套图形，尤其是适用于杂志期刊等出版物的图形，对于那些没有深入了解<strong>ggplot2</strong>的人来说就有点困难了，<strong>ggplot2</strong>的部分语法是很晦涩的。为此<a href="http://www.sthda.com/english/rpkgs/ggpubr/index.html" target="_blank" rel="external">Alboukadel Kassambara</a>创建了基于<strong>ggplot2</strong>的可视化包<strong>ggpubr</strong>用于绘制符合出版物要求的图形。<br><a id="more"></a></p>
<h2 id="安装及加载ggpubr包"><a href="#安装及加载ggpubr包" class="headerlink" title="安装及加载ggpubr包"></a>安装及加载<strong>ggpubr</strong>包</h2><p>安装方式有两种：</p>
<ul>
<li><p>直接从<strong>CRAN</strong>安装：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">install.packages(&quot;ggpubr&quot;)</div></pre></td></tr></table></figure>
</li>
<li><p>从<strong>GitHub</strong>上安装最新版本：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">if(!require(devtools)) install.packages(&quot;devtools&quot;)</div><div class="line"> devtools::install_github(&quot;kassambara/ggpubr&quot;)</div></pre></td></tr></table></figure>
</li>
</ul>
<p>安装完之后直接加载就行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">library(ggpubr)</div></pre></td></tr></table></figure></p>
<p>#<strong>ggpubr</strong>可绘制图形：<br><strong>ggpubr</strong>可绘制大部分我们常用的图形，下面一一介绍。</p>
<p>##分布图(Distribution)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#构建数据集</div><div class="line">set.seed(1234)</div><div class="line">df &lt;- data.frame( sex=factor(rep(c(&quot;f&quot;, &quot;M&quot;), each=200)), </div><div class="line">weight=c(rnorm(200, 55), rnorm(200, 58)))</div><div class="line">head(df)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##   sex   weight</div><div class="line">## 1  f   53.79293</div><div class="line">## 2  f   55.27743</div><div class="line">## 3  f   56.08444</div><div class="line">## 4  f   52.65430</div><div class="line">## 5  f   55.42912</div><div class="line">## 6  f   55.50606</div></pre></td></tr></table></figure>
<p>###密度分布图以及边际地毯线并添加平均值线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggdensity(df, x=&quot;weight&quot;, add = &quot;mean&quot;, rug = TRUE, color = &quot;sex&quot;, fill = &quot;sex&quot;,</div><div class="line">palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-652675daa1359146.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>###带有均值线和边际地毯线的直方图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gghistogram(df, x=&quot;weight&quot;, add = &quot;mean&quot;, rug = TRUE, color = &quot;sex&quot;, fill = &quot;sex&quot;,</div><div class="line">palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-d37833ffb4e3102b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>###箱线图与小提琴图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#加载数据集ToothGrowth</div><div class="line">data(&quot;ToothGrowth&quot;)</div><div class="line">df1 &lt;- ToothGrowth</div><div class="line">head(df1)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##    len  supp  dose</div><div class="line">## 1  4.2   VC    0.5</div><div class="line">## 2  11.5  VC    0.5</div><div class="line">## 3  7.3   VC    0.5</div><div class="line">## 4  5.8   VC    0.5</div><div class="line">## 5  6.4   VC    0.5</div><div class="line">## 6  10.0  VC    0.5</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p &lt;- ggboxplot(df1, x=&quot;dose&quot;, y=&quot;len&quot;, color = &quot;dose&quot;, </div><div class="line">palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;), </div><div class="line">add = &quot;jitter&quot;, shape=&quot;dose&quot;)#增加了jitter点，点shape由dose映射p</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-418d9194e641dd71.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>增加不同组间的p-value值，可以自定义需要标注的组间比较<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">my_comparisons &lt;- list(c(&quot;0.5&quot;, &quot;1&quot;), c(&quot;1&quot;, &quot;2&quot;), c(&quot;0.5&quot;, &quot;2&quot;))</div><div class="line">p+stat_compare_means(comparisons = my_comparisons)+#不同组间的比较</div><div class="line">stat_compare_means(label.y = 50)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-8bb64a310e2d8a4c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>###内有箱线图的小提琴图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggviolin(df1, x=&quot;dose&quot;, y=&quot;len&quot;, fill = &quot;dose&quot;, </div><div class="line">palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;), </div><div class="line">add = &quot;boxplot&quot;, add.params = list(fill=&quot;white&quot;))+ </div><div class="line">stat_compare_means(comparisons = my_comparisons, label = &quot;p.signif&quot;)+#label这里表示选择显著性标记（星号） </div><div class="line">stat_compare_means(label.y = 50)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-fbe5b444e2efcb8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>###条形图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">data(&quot;mtcars&quot;)</div><div class="line">df2 &lt;- mtcars</div><div class="line">df2$cyl &lt;- factor(df2$cyl)</div><div class="line">df2$name &lt;- rownames(df2)#添加一行name</div><div class="line">head(df2[, c(&quot;name&quot;, &quot;wt&quot;, &quot;mpg&quot;, &quot;cyl&quot;)])</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-4ded50c82b9f83fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>按从小到大顺序绘制条形图（不分组排序）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggbarplot(df2, x=&quot;name&quot;, y=&quot;mpg&quot;, fill = &quot;cyl&quot;, color = &quot;white&quot;, </div><div class="line">palette = &quot;jco&quot;,#杂志jco的配色 </div><div class="line">sort.val = &quot;desc&quot;,#下降排序 </div><div class="line">sort.by.groups=FALSE,#不按组排序 </div><div class="line">x.text.angle=60)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-823a0b71c2e85b6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>按组进行排序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggbarplot(df2, x=&quot;name&quot;, y=&quot;mpg&quot;, fill = &quot;cyl&quot;, color = &quot;white&quot;, </div><div class="line">palette = &quot;jco&quot;,#杂志jco的配色 </div><div class="line">sort.val = &quot;asc&quot;,#上升排序,区别于desc，具体看图演示 </div><div class="line">sort.by.groups=TRUE,#按组排序 </div><div class="line">x.text.angle=90)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-5c28f6c53248e8f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>###偏差图<br>偏差图展示了与参考值之间的偏差<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">df2$mpg_z &lt;- (df2$mpg-mean(df2$mpg))/sd(df2$mpg)</div><div class="line">df2$mpg_grp &lt;- factor(ifelse(df2$mpg_z&lt;0, &quot;low&quot;, &quot;high&quot;), levels = c(&quot;low&quot;, &quot;high&quot;))</div><div class="line">head(df2[, c(&quot;name&quot;, &quot;wt&quot;, &quot;mpg&quot;, &quot;mpg_grp&quot;, &quot;cyl&quot;)])</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-34debe47e570b508.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>绘制排序过的条形图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggbarplot(df2, x=&quot;name&quot;, y=&quot;mpg_z&quot;, fill = &quot;mpg_grp&quot;, color = &quot;white&quot;, </div><div class="line">palette = &quot;jco&quot;, sort.val = &quot;asc&quot;, sort.by.groups = FALSE, x.text.angle=60, </div><div class="line">ylab = &quot;MPG z-score&quot;, xlab = FALSE, legend.title=&quot;MPG Group&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-8957ea525c3d8853.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>坐标轴变换<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggbarplot(df2, x=&quot;name&quot;, y=&quot;mpg_z&quot;, fill = &quot;mpg_grp&quot;, color = &quot;white&quot;, </div><div class="line">palette = &quot;jco&quot;, sort.val = &quot;desc&quot;, sort.by.groups = FALSE, </div><div class="line">x.text.angle=90, ylab = &quot;MPG z-score&quot;, xlab = FALSE, </div><div class="line">legend.title=&quot;MPG Group&quot;, rotate=TRUE, ggtheme = theme_minimal())</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-253e214a34cb73c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>##点图(<strong>Dot charts</strong>)</p>
<p>###棒棒糖图(<strong>Lollipop chart</strong>)<br>棒棒图可以代替条形图展示数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggdotchart(df2, x=&quot;name&quot;, y=&quot;mpg&quot;, color = &quot;cyl&quot;, </div><div class="line">palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;), sorting = &quot;ascending&quot;, </div><div class="line">add = &quot;segments&quot;, ggtheme = theme_pubr())</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-a9f7fbd0c12c122c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>可以自设置各种参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ggdotchart(df2, x=&quot;name&quot;, y=&quot;mpg&quot;, color = &quot;cyl&quot;, </div><div class="line">palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;), sorting = &quot;descending&quot;, </div><div class="line">add = &quot;segments&quot;, rotate = TRUE, group = &quot;cyl&quot;, dot.size = 6, </div><div class="line">label = round(df2$mpg), font.label = list(color=&quot;white&quot;, size=9, vjust=0.5), </div><div class="line">ggtheme = theme_pubr())</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-bfce6842b2744304.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>###偏差图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ggdotchart(df2, x=&quot;name&quot;, y=&quot;mpg_z&quot;, color = &quot;cyl&quot;, </div><div class="line">palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;), sorting = &quot;descending&quot;, </div><div class="line">add = &quot;segment&quot;, add.params = list(color=&quot;lightgray&quot;, size=2), </div><div class="line">group = &quot;cyl&quot;, dot.size = 6, label = round(df2$mpg_z, 1), </div><div class="line">font.label = list(color=&quot;white&quot;, size=9, vjust=0.5), ggtheme = theme_pubr())+ </div><div class="line">geom_line(yintercept=0, linetype=2, color=&quot;lightgray&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-fdc31b81879bbbd5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>###<strong>Cleveland</strong>点图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ggdotchart(df2, x=&quot;name&quot;, y=&quot;mpg&quot;, color = &quot;cyl&quot;, </div><div class="line">palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;), sorting = &quot;descending&quot;, </div><div class="line">rotate = TRUE, dot.size = 2, y.text.col=TRUE, ggtheme = theme_pubr())+ </div><div class="line">theme_cleveland()</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-1c31d9e203d4810a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""> </p>
<p>#<strong>SessionInfo</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">## R version 3.4.0 (2017-04-21)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 8.1 x64 (build 9600)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936 </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936 </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats graphics grDevices utils datasets methods base </div><div class="line">## </div><div class="line">## other attached packages:</div><div class="line">## [1] ggpubr_0.1.3 magrittr_1.5 ggplot2_2.2.1</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">## [1] Rcpp_0.12.11 knitr_1.16 munsell_0.4.3 colorspace_1.3-2</div><div class="line">## [5] R6_2.2.1 rlang_0.1.1 stringr_1.2.0 plyr_1.8.4 </div><div class="line">## [9] dplyr_0.5.0 tools_3.4.0 grid_3.4.0 gtable_0.2.0 </div><div class="line">## [13] DBI_0.6-1 htmltools_0.3.6 yaml_2.1.14 lazyeval_0.2.0 </div><div class="line">## [17] rprojroot_1.2 digest_0.6.12 assertthat_0.2.0 tibble_1.3.3 </div><div class="line">## [21] ggsignif_0.2.0 ggsci_2.4 purrr_0.2.2.2 evaluate_0.10 </div><div class="line">## [25] rmarkdown_1.5 labeling_0.3 stringi_1.1.5 compiler_3.4.0 </div><div class="line">## [29] scales_0.4.1 backports_1.1.0</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410</p>
<p>Email: tyan@zju.edu.cn</p>
<p>QQ: 1051927088</p>
<p>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></p>
<p>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></p>
<p>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛</p>
<p>浙江大学作物遗传育种在读研究生（生物信息学方向）</p>
<p>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-fbe5b444e2efcb8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://docs.ggplot2.org/current/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hadley Wickham&lt;/a&gt;创建的可视化包ggplot2可以流畅地进行优美的可视化，但是如果要通过ggplot2定制一套图形，尤其是适用于杂志期刊等出版物的图形，对于那些没有深入了解&lt;strong&gt;ggplot2&lt;/strong&gt;的人来说就有点困难了，&lt;strong&gt;ggplot2&lt;/strong&gt;的部分语法是很晦涩的。为此&lt;a href=&quot;http://www.sthda.com/english/rpkgs/ggpubr/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Alboukadel Kassambara&lt;/a&gt;创建了基于&lt;strong&gt;ggplot2&lt;/strong&gt;的可视化包&lt;strong&gt;ggpubr&lt;/strong&gt;用于绘制符合出版物要求的图形。&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggpubr" scheme="https://ytlogos.github.io/tags/ggpubr/"/>
    
  </entry>
  
  <entry>
    <title>R语言学习笔记之聚类分析</title>
    <link href="https://ytlogos.github.io/2017/06/25/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
    <id>https://ytlogos.github.io/2017/06/25/R语言学习笔记之聚类分析/</id>
    <published>2017-06-24T16:00:00.000Z</published>
    <updated>2017-09-13T23:48:50.474Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-f5f4fb4aa3f23466.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>使用<code>k-means</code>聚类所需的包：</p>
<ul>
<li>factoextra</li>
<li>cluster<a id="more"></a>
#加载包<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">library(factoextra)</div><div class="line">library(cluster)</div></pre></td></tr></table></figure>
</li>
</ul>
<p>#数据准备<br>使用内置的R数据集<code>USArrests</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#load the dataset</div><div class="line">data(&quot;USArrests&quot;)</div><div class="line">#remove any missing value (i.e, NA values for not available)</div><div class="line">#That might be present in the data</div><div class="line">USArrests &lt;- na.omit(USArrests)#view the first 6 rows of the data</div><div class="line">head(USArrests, n=6)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-2abe5fa13d02d884.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><strong>在此数据集中，列是变量，行是观测值</strong><br>在聚类之前我们可以先进行一些必要的数据检查即数据描述性统计，如平均值、标准差等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">desc_stats &lt;- data.frame( Min=apply(USArrests, 2, min),#minimum</div><div class="line">Med=apply(USArrests, 2, median),#median </div><div class="line">Mean=apply(USArrests, 2, mean),#mean </div><div class="line">SD=apply(USArrests, 2, sd),#Standard deviation </div><div class="line">Max=apply(USArrests, 2, max)#maximum</div><div class="line">)</div><div class="line">desc_stats &lt;- round(desc_stats, 1)#保留小数点后一位head(desc_stats)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-c28a99b3efe41ca6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><strong>变量有很大的方差及均值时需进行标准化</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df &lt;- scale(USArrests)</div></pre></td></tr></table></figure></p>
<p>#数据集群性评估<br>使用<code>get_clust_tendency()</code>计算<code>Hopkins</code>统计量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">res &lt;- get_clust_tendency(df, 40, graph = TRUE)</div><div class="line">res$hopkins_stat</div><div class="line">## [1] 0.3440875</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Visualize the dissimilarity matrix</div><div class="line">res$plot</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-7ab1c23eb38f6cb5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>Hopkins统计量的值&lt;0.5，表明数据是高度可聚合的。另外，从图中也可以看出数据可聚合。</p>
</blockquote>
<p>#估计聚合簇数<br>由于k均值聚类需要指定要生成的聚类数量，因此我们将使用函数<code>clusGap()</code>来计算用于估计最优聚类数。函数<code>fviz_gap_stat()</code>用于可视化。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">set.seed(123)</div><div class="line">## Compute the gap statistic</div><div class="line">gap_stat &lt;- clusGap(df, FUN = kmeans, nstart = 25, K.max = 10, B = 500) </div><div class="line"># Plot the result</div><div class="line">fviz_gap_stat(gap_stat)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-64e6e37dc513b2be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>图中显示最佳为聚成四类（k=4）</p>
</blockquote>
<p>#进行聚类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">set.seed(123)</div><div class="line">km.res &lt;- kmeans(df, 4, nstart = 25)</div><div class="line">head(km.res$cluster, 20)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-61fe2e1a139e3b9c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Visualize clusters using factoextra</div><div class="line">fviz_cluster(km.res, USArrests)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-2e39c93b63af2161.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>#检查<code>cluster silhouette</code>图</p>
<blockquote>
<p>Recall that the silhouette measures (SiSi) how similar an object ii is to the the other objects in its own cluster versus those in the neighbor cluster. SiSi values range from 1 to - 1:</p>
</blockquote>
<ul>
<li>A value of SiSi close to 1 indicates that the object is well clustered. In the other words, the object ii is similar to the other objects in its group.</li>
<li>A value of SiSi close to -1 indicates that the object is poorly clustered, and that assignment to some other cluster would probably improve the overall results.<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sil &lt;- silhouette(km.res$cluster, dist(df))</div><div class="line">rownames(sil) &lt;- rownames(USArrests)</div><div class="line">head(sil[, 1:3])</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-e2752fd444968a90.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#Visualize </div><div class="line">fviz_silhouette(sil)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-a01f551c35d38d0f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-b2554b235caf0420.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>图中可以看出有负值，可以通过函数<code>silhouette()</code>确定是哪个观测值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">neg_sil_index &lt;- which(sil[, &quot;sil_width&quot;] &lt; 0)</div><div class="line">sil[neg_sil_index, , drop = FALSE]</div><div class="line">##          cluster    neighbor     sil_width</div><div class="line">## Missouri    3          2        -0.07318144</div></pre></td></tr></table></figure></p>
<p>#<strong>eclust()</strong>:增强的聚类分析</p>
<blockquote>
<p>与其他聚类分析包相比，<code>eclust()</code>有以下优点：</p>
</blockquote>
<ul>
<li>简化了聚类分析的工作流程</li>
<li>可以用于计算层次聚类和分区聚类</li>
<li>eclust()自动计算最佳聚类簇数。</li>
<li>自动提供Silhouette plot</li>
<li>可以结合ggplot2绘制优美的图形</li>
</ul>
<p>#使用eclust()的<strong>K</strong>均值聚类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Compute k-means</div><div class="line">res.km &lt;- eclust(df, &quot;kmeans&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-448668d5d66b746c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Gap statistic plot</div><div class="line">fviz_gap_stat(res.km$gap_stat)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-8abcb70ddd53cc9a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Silhouette plotfviz_silhouette(res.km)</div><div class="line"></div><div class="line">##    cluster size ave.sil.width</div><div class="line">## 1     1     13      0.31</div><div class="line">## 2     2     29      0.38</div><div class="line">## 3     3      8      0.39</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-ef8922f5d288768f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>#使用<strong>eclust（）</strong>的层次聚类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Enhanced hierarchical clustering</div><div class="line">res.hc &lt;- eclust(df, &quot;hclust&quot;) # compute hclust</div><div class="line">fviz_dend(res.hc, rect = TRUE) # dendrogam</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-f5f4fb4aa3f23466.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#下面的R代码生成Silhouette plot和分层聚类散点图。</div><div class="line">fviz_silhouette(res.hc) # silhouette plot</div><div class="line">##   cluster size ave.sil.width</div><div class="line">## 1    1     19      0.26</div><div class="line">## 2    2     19      0.28</div><div class="line">## 3    3     12      0.43</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-cdae172ce885358a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fviz_cluster(res.hc) # scatter plot</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-be9e7cd89ccec3bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>#Infos</p>
<blockquote>
<p>This analysis has been performed using R software (R version 3.3.2)</p>
</blockquote>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410</p>
<p>Email: tyan@zju.edu.cn</p>
<p>QQ: 1051927088</p>
<p>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></p>
<p>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></p>
<p>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛</p>
<p>浙江大学作物遗传育种在读研究生（生物信息学方向）</p>
<p>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-f5f4fb4aa3f23466.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;使用&lt;code&gt;k-means&lt;/code&gt;聚类所需的包：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;factoextra&lt;/li&gt;
&lt;li&gt;cluster
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="Cluster analysis" scheme="https://ytlogos.github.io/tags/Cluster-analysis/"/>
    
  </entry>
  
  <entry>
    <title>用circlize包绘制circos-plot</title>
    <link href="https://ytlogos.github.io/2017/06/25/%E7%94%A8circlize%E5%8C%85%E7%BB%98%E5%88%B6circos-plot/"/>
    <id>https://ytlogos.github.io/2017/06/25/用circlize包绘制circos-plot/</id>
    <published>2017-06-24T16:00:00.000Z</published>
    <updated>2017-09-13T23:48:50.489Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-4b332e9275d7088e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="circlize包"><a href="#circlize包" class="headerlink" title="circlize包"></a><code>circlize</code>包</h2><p><code>circlize</code>包在德国癌症中心的华人博士Zuguang Gu开发的，有兴趣的可以去看看他的<a href="https://github.com/jokergoo" target="_blank" rel="external">Github主页</a>。这个包有两个文档，一个是介绍基本原理的绘制简单<a href="https://cran.r-project.org/web/packages/circlize/vignettes/circlize.pdf" target="_blank" rel="external">圈圈图</a>的，也是本次要介绍的。另外一份文档专门介绍基因组数据绘制圈圈图<a href="https://cran.r-project.org/web/packages/circlize/vignettes/genomic_plot.pdf" target="_blank" rel="external">Genomic Circos Plot</a>,我自己还没看完，下次再介绍。<br>根据我的学习发现这个包与<code>ggplot2</code>很相似，也是先创建一个图层，然后不断的添加图形元素（<code>point</code>、<code>line</code>、<code>bar</code>等），这些简单的图形元素都有<code>circos.</code>这个前缀进行绘制，比如要绘制点，则用<code>circos.points()</code>。具体的下面一一介绍。<br><a id="more"></a></p>
<h2 id="用circlize绘制圈圈图"><a href="#用circlize绘制圈圈图" class="headerlink" title="用circlize绘制圈圈图"></a>用<code>circlize</code>绘制圈圈图</h2><blockquote>
<p>照例，没有安装这个包的先安装：<code>install.packages(&quot;circlize&quot;)</code>或者<code>devtools::install_github(&quot;jokergoo/circlize&quot;)</code>。绘图第一步是先初始化(<code>circos.initialize</code>),接下来绘制<code>track</code>，再添加基本元素。需要提一下的是，由于<code>circlize</code>绘制图是不断叠加的，因此如果我们一大段代码下来我们只能看到最终的图形，这里为了演示每端代码的结果，所以每次我都得初始化以及<code>circlize.clear</code>。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(circlize)</div><div class="line"># 简单创建一个数据集</div><div class="line">set.seed(999)</div><div class="line">n &lt;- 1000</div><div class="line">a &lt;- data.frame(factors = sample(letters[1:8], n, replace = TRUE), x = rnorm(n), y = runif(n))</div></pre></td></tr></table></figure>
<h2 id="绘制第一个track"><a href="#绘制第一个track" class="headerlink" title="绘制第一个track"></a>绘制第一个<code>track</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)</div><div class="line">circos.par(track.height = 0.1)</div><div class="line">circos.initialize(factors = a$factors, x = a$x) #初始化，factors来控制track数目，初始化里只有x， 没有y。这一步相当于ggplot()</div><div class="line">circos.trackPlotRegion(factors = a$factors, y = a$y, </div><div class="line">panel.fun = function(x, y) &#123; </div><div class="line">circos.axis()&#125;)</div><div class="line">col &lt;- rep(c(&quot;#FF0000&quot;, &quot;#00FF00&quot;), 4) #自定义一下颜色# 这里先解释一下，一个track有好几个cell，具体数目由factors决定的，向本数据集中factors有八个，因此绘制一个track，其包含八个cell。含有前缀circos.track的函数会在所有的cel里添加基本元素，而只有前缀circos.的函数可以在特定的track、cell里添加基本元素。具体看下演示。</div><div class="line">circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5) #所有的cell里都绘制点图</div><div class="line">circos.text(-1, 0.5, &quot;left&quot;, sector.index = &quot;a&quot;, track.index = 1) #在track 1中的标记为a的cell里添加</div><div class="line">textcircos.text(1, 0.5, &quot;right&quot;, sector.index = &quot;a&quot;)</div><div class="line">circos.clear()</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-d3f6e3b63528471a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>##接下来绘制第二个<code>track</code></p>
<blockquote>
<p><code>circos.trackHist</code>添加柱状图，由于柱状图相对高级一点，因此<code>circos.trackHist</code>会自动创建一个<code>track</code>，无需我们<code>circos.trackPlotRegion</code>进行创建。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)</div><div class="line">circos.par(track.height = 0.1)</div><div class="line">circos.initialize(factors = a$factors, x = a$x)</div><div class="line">circos.trackPlotRegion(factors = a$factors, y = a$y, </div><div class="line">panel.fun = function(x, y) &#123; </div><div class="line">circos.axis()&#125;)</div><div class="line">col &lt;- rep(c(&quot;#FF0000&quot;, &quot;#00FF00&quot;), 4)</div><div class="line">circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)</div><div class="line">circos.text(-1, 0.5, &quot;left&quot;, sector.index = &quot;a&quot;, track.index = 1)</div><div class="line">circos.text(1, 0.5, &quot;right&quot;, sector.index = &quot;a&quot;)</div><div class="line">bg.col &lt;- rep(c(&quot;#EFEFEF&quot;, &quot;#CCCCCC&quot;), 4)</div><div class="line">circos.trackHist(a$factors, a$x, bg.col = bg.col, col = NA)</div><div class="line">circos.clear()</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-42c29a97051139c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="创建第三个track"><a href="#创建第三个track" class="headerlink" title="创建第三个track"></a>创建第三个<code>track</code></h2><blockquote>
<p>这里又得提一下，当我们绘制多个<code>track</code>时，我们添加基本元素时要指定添加到哪个<code>track</code>(<code>track.index</code>指定)、哪个<code>cell</code>(<code>sector.index</code>指定)里，如果不指定，那么将默认<code>track</code>是我们刚刚创建的那个。<code>track.index</code>、<code>sector.index</code>等参数可以通过<code>get.cell.meta.data</code>函数获取。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)</div><div class="line">circos.par(track.height = 0.1)</div><div class="line">circos.initialize(factors = a$factors, x = a$x)</div><div class="line">circos.trackPlotRegion(factors = a$factors, y = a$y,</div><div class="line"> panel.fun = function(x, y) &#123; </div><div class="line">circos.axis()&#125;)</div><div class="line">col &lt;- rep(c(&quot;#FF0000&quot;, &quot;#00FF00&quot;), 4)</div><div class="line">circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)</div><div class="line">circos.text(-1, 0.5, &quot;left&quot;, sector.index = &quot;a&quot;, track.index = 1)</div><div class="line">circos.text(1, 0.5, &quot;right&quot;, sector.index = &quot;a&quot;)</div><div class="line">bg.col &lt;- rep(c(&quot;#EFEFEF&quot;, &quot;#CCCCCC&quot;), 4)</div><div class="line">circos.trackHist(a$factors, a$x, bg.col = bg.col, col = NA)</div><div class="line">circos.trackPlotRegion(factors = a$factors, x = a$x, y = a$y, </div><div class="line">panel.fun = function(x, y) &#123;</div><div class="line"> grey = c(&quot;#FFFFFF&quot;, &quot;#CCCCCC&quot;, &quot;#999999&quot;) </div><div class="line">sector.index = get.cell.meta.data(&quot;sector.index&quot;) #这个是第三个track，因为我们刚刚创建，这里这一步不用也可。</div><div class="line"> xlim = get.cell.meta.data(&quot;xlim&quot;)</div><div class="line"> ylim = get.cell.meta.data(&quot;ylim&quot;) </div><div class="line">circos.text(mean(xlim), mean(ylim), sector.index) </div><div class="line">circos.points(x[1:10], y[1:10], col = &quot;red&quot;, pch = 16, cex = 0.6) </div><div class="line">circos.points(x[11:20], y[11:20], col = &quot;blue&quot;, cex = 0.6)&#125;)</div><div class="line">circos.clear()</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-16e1d662c32d6e48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>实际操作中我们常常会更新数据或者想更新图形，这是可以通过<code>circos.updatePlotRegion</code>函数在特定的<code>track</code>、<code>cell</code>里(先删除再添加)<code>update</code>，下面我们将通过<code>circos.updatePlotRegion</code>函数先删除<code>track 2</code>、<code>sector d</code>中的图形元素再添加点图。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)</div><div class="line">circos.par(track.height = 0.1)</div><div class="line">circos.initialize(factors = a$factors, x = a$x)</div><div class="line">circos.trackPlotRegion(factors = a$factors, y = a$y, </div><div class="line">panel.fun = function(x, y) &#123; </div><div class="line">circos.axis()&#125;)col &lt;- rep(c(&quot;#FF0000&quot;, &quot;#00FF00&quot;), 4)</div><div class="line">circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)</div><div class="line">circos.text(-1, 0.5, &quot;left&quot;, sector.index = &quot;a&quot;, track.index = 1)</div><div class="line">circos.text(1, 0.5, &quot;right&quot;, sector.index = &quot;a&quot;)</div><div class="line">circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)</div><div class="line">circos.text(-1, 0.5, &quot;left&quot;, sector.index = &quot;a&quot;, track.index = 1)</div><div class="line">circos.text(1, 0.5, &quot;right&quot;, sector.index = &quot;a&quot;)</div><div class="line">bg.col &lt;- rep(c(&quot;#EFEFEF&quot;, &quot;#CCCCCC&quot;), 4)</div><div class="line">circos.trackHist(a$factors, a$x, bg.col = bg.col, col = NA)</div><div class="line">circos.trackPlotRegion(factors = a$factors, x = a$x, y = a$y,</div><div class="line"> panel.fun = function(x, y) &#123; </div><div class="line">grey = c(&quot;#FFFFFF&quot;, &quot;#CCCCCC&quot;, &quot;#999999&quot;) </div><div class="line">sector.index = get.cell.meta.data(&quot;sector.index&quot;)</div><div class="line"> xlim = get.cell.meta.data(&quot;xlim&quot;) </div><div class="line">ylim = get.cell.meta.data(&quot;ylim&quot;) </div><div class="line">circos.text(mean(xlim), mean(ylim), sector.index)</div><div class="line">circos.points(x[1:10], y[1:10], col = &quot;red&quot;, pch = 16, cex = 0.6)</div><div class="line"> circos.points(x[11:20], y[11:20], col = &quot;blue&quot;, cex = 0.6)&#125;)</div><div class="line"># update第2个track中标记为d的sector</div><div class="line">circos.updatePlotRegion(sector.index = &quot;d&quot;, track.index = 2)</div><div class="line">circos.points(x = -2:2, y = rep(0, 5))</div><div class="line">xlim &lt;- get.cell.meta.data(&quot;xlim&quot;)</div><div class="line">ylim &lt;- get.cell.meta.data(&quot;ylim&quot;)</div><div class="line">circos.text(mean(xlim), mean(ylim), &quot;updated&quot;)</div><div class="line">circos.clear()</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-c1739e4842120955.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="接下来绘制第四个track"><a href="#接下来绘制第四个track" class="headerlink" title="接下来绘制第四个track"></a>接下来绘制第四个<code>track</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)</div><div class="line">circos.par(track.height = 0.1)</div><div class="line">circos.initialize(factors = a$factors, x = a$x)</div><div class="line">circos.trackPlotRegion(factors = a$factors, y = a$y,</div><div class="line"> panel.fun = function(x, y) &#123; circos.axis()&#125;)</div><div class="line">col &lt;- rep(c(&quot;#FF0000&quot;, &quot;#00FF00&quot;), 4)</div><div class="line">circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)</div><div class="line">circos.text(-1, 0.5, &quot;left&quot;, sector.index = &quot;a&quot;, track.index = 1)</div><div class="line">circos.text(1, 0.5, &quot;right&quot;, sector.index = &quot;a&quot;)</div><div class="line">circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)</div><div class="line">circos.text(-1, 0.5, &quot;left&quot;, sector.index = &quot;a&quot;, track.index = 1)</div><div class="line">circos.text(1, 0.5, &quot;right&quot;, sector.index = &quot;a&quot;)</div><div class="line">bg.col &lt;- rep(c(&quot;#EFEFEF&quot;, &quot;#CCCCCC&quot;), 4)</div><div class="line">circos.trackHist(a$factors, a$x, bg.col = bg.col, col = NA)</div><div class="line">circos.trackPlotRegion(factors = a$factors, x = a$x, y = a$y, </div><div class="line">panel.fun = function(x, y) &#123; </div><div class="line">grey = c(&quot;#FFFFFF&quot;, &quot;#CCCCCC&quot;, &quot;#999999&quot;) </div><div class="line">sector.index = get.cell.meta.data(&quot;sector.index&quot;) </div><div class="line">xlim = get.cell.meta.data(&quot;xlim&quot;)</div><div class="line"> ylim = get.cell.meta.data(&quot;ylim&quot;) </div><div class="line">circos.text(mean(xlim), mean(ylim), sector.index) </div><div class="line">circos.points(x[1:10], y[1:10], col = &quot;red&quot;, pch = 16, cex = 0.6) </div><div class="line">circos.points(x[11:20], y[11:20], col = &quot;blue&quot;, cex = 0.6)&#125;)</div><div class="line"># update第2个track中标记为d的sector</div><div class="line">circos.updatePlotRegion(sector.index = &quot;d&quot;, track.index = 2)</div><div class="line">circos.points(x = -2:2, y = rep(0, 5))</div><div class="line">xlim &lt;- get.cell.meta.data(&quot;xlim&quot;)</div><div class="line">ylim &lt;- get.cell.meta.data(&quot;ylim&quot;)</div><div class="line">circos.text(mean(xlim), mean(ylim), &quot;updated&quot;)</div><div class="line">circos.clear()</div><div class="line">circos.trackPlotRegion(factors = a$factors, y = a$y)</div><div class="line">circos.trackLines(a$factors[1:100], a$x[1:100], a$y[1:100], type = &quot;h&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-dddf4d7d14922cf1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>接下来添加<code>links</code>，<code>links</code>可以是<code>point</code>到<code>point</code>、<code>point</code>到<code>interval</code>、<code>interval</code>到<code>interval</code></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)</div><div class="line">circos.par(track.height = 0.1)</div><div class="line">circos.initialize(factors = a$factors, x = a$x)</div><div class="line">circos.trackPlotRegion(factors = a$factors, y = a$y,</div><div class="line"> panel.fun = function(x, y) &#123; circos.axis()&#125;)</div><div class="line">col &lt;- rep(c(&quot;#FF0000&quot;, &quot;#00FF00&quot;), 4)</div><div class="line">circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)</div><div class="line">circos.text(-1, 0.5, &quot;left&quot;, sector.index = &quot;a&quot;, track.index = 1)</div><div class="line">circos.text(1, 0.5, &quot;right&quot;, sector.index = &quot;a&quot;)</div><div class="line">circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)</div><div class="line">circos.text(-1, 0.5, &quot;left&quot;, sector.index = &quot;a&quot;, track.index = 1)</div><div class="line">circos.text(1, 0.5, &quot;right&quot;, sector.index = &quot;a&quot;)</div><div class="line">bg.col &lt;- rep(c(&quot;#EFEFEF&quot;, &quot;#CCCCCC&quot;), 4)</div><div class="line">circos.trackHist(a$factors, a$x, bg.col = bg.col, col = NA)</div><div class="line">circos.trackPlotRegion(factors = a$factors, x = a$x, y = a$y,</div><div class="line"> panel.fun = function(x, y) &#123;</div><div class="line"> grey = c(&quot;#FFFFFF&quot;, &quot;#CCCCCC&quot;, &quot;#999999&quot;) </div><div class="line">sector.index = get.cell.meta.data(&quot;sector.index&quot;) </div><div class="line">xlim = get.cell.meta.data(&quot;xlim&quot;) </div><div class="line">ylim = get.cell.meta.data(&quot;ylim&quot;)</div><div class="line">circos.text(mean(xlim), mean(ylim), sector.index) </div><div class="line">circos.points(x[1:10], y[1:10], col = &quot;red&quot;, pch = 16, cex = 0.6) </div><div class="line">circos.points(x[11:20], y[11:20], col = &quot;blue&quot;, cex = 0.6)&#125;)</div><div class="line"># update第2个track中标记为d的sector</div><div class="line">circos.updatePlotRegion(sector.index = &quot;d&quot;, track.index = 2)</div><div class="line">circos.points(x = -2:2, y = rep(0, 5))</div><div class="line">xlim &lt;- get.cell.meta.data(&quot;xlim&quot;)</div><div class="line">ylim &lt;- get.cell.meta.data(&quot;ylim&quot;)</div><div class="line">circos.text(mean(xlim), mean(ylim), &quot;updated&quot;)</div><div class="line">circos.clear()</div><div class="line">circos.trackPlotRegion(factors = a$factors, y = a$y)</div><div class="line">circos.trackLines(a$factors[1:100], a$x[1:100], a$y[1:100], type = &quot;h&quot;)</div><div class="line">circos.link(&quot;a&quot;, 0, &quot;b&quot;, 0, h = 0.3) #point to point</div><div class="line">circos.link(&quot;c&quot;, c(-0.5, 0.5), &quot;d&quot;, c(-0.5, 0.5), col = &quot;red&quot;, border = NA, h = 0.2) #intreval to interval</div><div class="line">circos.link(&quot;e&quot;, 0, &quot;g&quot;, c(-1, 1), col = &quot;green&quot;, border = &quot;black&quot;, lwd = 2, lty = 2) #point to interval</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-7c9b4bf33e074663.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="circlize详述"><a href="#circlize详述" class="headerlink" title="circlize详述"></a>circlize详述</h2><blockquote>
<p><code>circlize</code>的绘图规则是初始化(<code>initialize</code>)-创建<code>track</code>-添加图形元素-创建<code>track</code>-添加图形元素-…-<code>circos.clear</code>。具体参数设置以及解释由于内容太多，有兴趣的可以自己<a href="https://cran.r-project.org/web/packages/circlize/vignettes/circlize.pdf" target="_blank" rel="external">参考文档</a>。 我认为比较重要的是要理解<code>track</code>、<code>sector</code>。由于基本所有的图形元素我们都是添加在<code>sector</code><br>里面，因此就需要指定<code>track.index</code>以及<code>sector.index</code>。接下来就用个例子来讲解一下如何操纵<code>track</code>、<code>sector</code>。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">par(mar = c(1, 1, 1, 1))</div><div class="line">factors &lt;- letters[1:8]</div><div class="line">circos.initialize(factors = factors, xlim = c(0, 1)) #初始化# 绘制三个track，并显示具体信息</div><div class="line">for (i in 1:3) &#123; </div><div class="line">circos.trackPlotRegion(ylim = c(0, 1))&#125;</div><div class="line">circos.info(plot = TRUE)</div><div class="line"># 通过draw.sector()来高亮某一sector，比如a：</div><div class="line">draw.sector(get.cell.meta.data(&quot;cell.start.degree&quot;, sector.index = &quot;a&quot;), </div><div class="line">get.cell.meta.data(&quot;cell.end.degree&quot;, sector.index = &quot;a&quot;), rou1 = 1, col = &quot;blue&quot;)</div><div class="line">circos.clear()</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-938c7de4bb4c23d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># 高亮某一track， 比如第一个track：</div><div class="line">circos.initialize(factors = factors, xlim = c(0, 1))</div><div class="line">for (i in 1:3) &#123; </div><div class="line">circos.trackPlotRegion(ylim = c(0, 1))&#125;</div><div class="line">circos.info(plot = TRUE)</div><div class="line">draw.sector(0, 360, rou1 = get.cell.meta.data(&quot;cell.top.radius&quot;, track.index = 1), </div><div class="line">rou2 = get.cell.meta.data(&quot;cell.bottom.radius&quot;, track.index = 1), col = &quot;green&quot;)</div><div class="line">circos.clear()</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-45e3eb273fc3b890.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># 高亮某一track某一sector，比如地2、3track中的e、f(sector)：</div><div class="line">circos.initialize(factors = factors, xlim = c(0, 1))</div><div class="line">for (i in 1:3) &#123; circos.trackPlotRegion(ylim = c(0, 1))&#125;</div><div class="line">circos.info(plot = TRUE)</div><div class="line">draw.sector(get.cell.meta.data(&quot;cell.start.degree&quot;, sector.index = &quot;e&quot;), </div><div class="line">get.cell.meta.data(&quot;cell.end.degree&quot;, sector.index = &quot;f&quot;), </div><div class="line">get.cell.meta.data(&quot;cell.top.radius&quot;, track.index = 2), </div><div class="line">get.cell.meta.data(&quot;cell.bottom.radius&quot;, track.index = 3), col = &quot;red&quot;)</div><div class="line">circos.clear() #千万别忘了circos.clear，不然下次无法绘图。</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-68e9fa0e050abfe9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="放大某一特定区域"><a href="#放大某一特定区域" class="headerlink" title="放大某一特定区域"></a>放大某一特定区域</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">df &lt;- data.frame(factors = sample(letters[1:6], 100, replace = TRUE),</div><div class="line">                          x = rnorm(100), </div><div class="line">                          y = rnorm(100), </div><div class="line">                          stringsAsFactors = FALSE)</div><div class="line"># 放大a，b区域</div><div class="line">zoom_df &lt;- df %&gt;% dplyr::filter(factors %in% c(&quot;a&quot;, &quot;b&quot;))</div><div class="line">zoom_df$factors &lt;- paste0(&quot;zoom_&quot;, zoom_df$factors)</div><div class="line">df2 &lt;- rbind(df, zoom_df)</div><div class="line">xrange &lt;- tapply(df2$x, df2$factors, function(x) max(x) - min(x))</div><div class="line">normal_sector_index &lt;- unique(df$factors)</div><div class="line">zoomed_sector_index &lt;- unique(zoom_df$factors)</div><div class="line">sector.width &lt;- c(xrange[normal_sector_index]/sum(xrange[normal_sector_index]), </div><div class="line">xrange[zoomed_sector_index]/sum(xrange[zoomed_sector_index]))</div><div class="line"># 绘图</div><div class="line">par(mar = c(1, 1, 1, 1))</div><div class="line">circos.par(start.degree = 90)</div><div class="line">circos.initialize(df2$factors, x = df2$x, sector.width = sector.width)</div><div class="line">circos.trackPlotRegion(df2$factors, x = df2$x, y = df2$y, </div><div class="line">panel.fun = function(x, y) &#123; </div><div class="line">circos.points(x, y, col = &quot;red&quot;, pch = 16, cex = 0.5) </div><div class="line">xlim = get.cell.meta.data(&quot;xlim&quot;) </div><div class="line">ylim = get.cell.meta.data(&quot;ylim&quot;) </div><div class="line">sector.index = get.cell.meta.data(&quot;sector.index&quot;) </div><div class="line">circos.text(mean(xlim), mean(ylim), sector.index, niceFacing = TRUE)&#125;)</div><div class="line"># 添加links</div><div class="line">circos.link(&quot;a&quot;, get.cell.meta.data(&quot;cell.xlim&quot;, sector.index = &quot;a&quot;), &quot;zoom_a&quot;, </div><div class="line">get.cell.meta.data(&quot;cell.xlim&quot;, sector.index = &quot;zoom_a&quot;), border = NA, col = &quot;red&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-58a07e148222b8f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>circos.clear()</p>
<h2 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h2><blockquote>
<p>圈圈图+热图+进化树</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">set.seed(1234)</div><div class="line">data &lt;- matrix(rnorm(100 * 10), nrow = 10, ncol = 100)</div><div class="line">col &lt;- colorRamp2(c(-2, 0, 2), c(&quot;green&quot;, &quot;black&quot;, &quot;red&quot;))</div><div class="line">factors &lt;- rep(letters[1:2], times = c(30, 70))</div><div class="line">data_list &lt;- list(a = data[, factors == &quot;a&quot;], b = data[, factors == &quot;b&quot;])</div><div class="line">dend_list &lt;- list(a = as.dendrogram(hclust(dist(t(data_list[[&quot;a&quot;]])))), </div><div class="line">                  b = as.dendrogram(hclust(dist(t(data_list[[&quot;b&quot;]])))))</div><div class="line">circos.par(cell.padding = c(0, 0, 0, 0), gap.degree = 5)</div><div class="line">circos.initialize(factors = factors, xlim = cbind(c(0, 0), table(factors)))</div><div class="line">circos.track(ylim = c(0, 10), bg.border = NA, </div><div class="line">panel.fun = function(x, y) &#123;</div><div class="line"> sector.index = get.cell.meta.data(&quot;sector.index&quot;) </div><div class="line">d = data_list[[sector.index]] </div><div class="line">dend = dend_list[[sector.index]] </div><div class="line">d2 = d[, order.dendrogram(dend)] </div><div class="line">col_data = col(d2)</div><div class="line">nr = nrow(d2)</div><div class="line">nc = ncol(d2) </div><div class="line">for (i in 1:nr) &#123; </div><div class="line">circos.rect(1:nc - 1, rep(nr - i, nc), 1:nc, rep(nr - i + 1, nc),</div><div class="line">border = col_data[i, ], col = col_data[i, ]) &#125;&#125;)</div><div class="line">max_height &lt;- max(sapply(dend_list, function(x) attr(x, &quot;height&quot;)))</div><div class="line">circos.track(ylim = c(0, max_height), </div><div class="line">bg.border = NA, track.height = 0.3,</div><div class="line">panel.fun = function(x, y) &#123; </div><div class="line">sector.index = get.cell.meta.data(&quot;sector.index&quot;)</div><div class="line">dend = dend_list[[sector.index]]</div><div class="line">circos.dendrogram(dend, max_height = max_height)&#125;)</div><div class="line">circos.clear()</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-4b332e9275d7088e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="多图排列"><a href="#多图排列" class="headerlink" title="多图排列"></a>多图排列</h2><blockquote>
<p>直接用layout设置</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">layout(matrix(1:9, 3, 3))</div><div class="line">for (i in 1:9) &#123;</div><div class="line"> factors = letters[1:8] </div><div class="line">par(mar = c(0.5, 0.5, 0.5, 0.5)) </div><div class="line">circos.par(cell.padding = c(0, 0, 0, 0)) </div><div class="line">circos.initialize(factors = factors, xlim = c(0, 1)) </div><div class="line">circos.trackPlotRegion(ylim = c(0, 1), track.height = 0.05, </div><div class="line">bg.col = rand_color(8), bg.border = NA) </div><div class="line"># 绘制links </div><div class="line">for (i in 1:20) &#123;</div><div class="line">se = sample(letters[1:8], 2) </div><div class="line">circos.link(se[1], runif(2), se[2], runif(2),</div><div class="line">col = rand_color(1, transparency = 0.4), border = NA) </div><div class="line">&#125; </div><div class="line">circos.clear()</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-51d87f7dd942126b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="sessionInfo"><a href="#sessionInfo" class="headerlink" title="sessionInfo"></a>sessionInfo</h2><blockquote>
<p>理解circlize包的原理，绘制基因组数据的图形也是一样的。有时间下次介绍(主要是我自己还没看完，看不太懂)<img src="http://upload-images.jianshu.io/upload_images/2084719-a3ebeb278e1c4ae1.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">。<br>老规矩，给出<code>sessionInfo</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div></pre></td></tr></table></figure></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">## R version 3.4.0 (2017-04-21)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 8.1 x64 (build 9600)</div><div class="line">## ## Matrix products: default## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936 </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936 </div><div class="line">## ## attached base packages:</div><div class="line">## [1] stats graphics grDevices utils datasets methods base </div><div class="line">## ## other attached packages:</div><div class="line">## [1] circlize_0.4.0 BiocInstaller_1.26.0 forcats_0.2.0</div><div class="line">## [4] stringr_1.2.0 dplyr_0.5.0 purrr_0.2.2.2 </div><div class="line">## [7] readr_1.1.1 tidyr_0.6.3 tibble_1.3.1</div><div class="line">## [10] ggplot2_2.2.1 tidyverse_1.1.1.9000</div><div class="line">#### loaded via a namespace (and not attached):</div><div class="line">## [1] shape_1.4.2 clisymbols_1.2.0 reshape2_1.4.2 </div><div class="line">## [4] haven_1.0.0 lattice_0.20-35 colorspace_1.3-2</div><div class="line">## [7] htmltools_0.3.6 yaml_2.1.14 rlang_0.1.1 </div><div class="line">## [10] foreign_0.8-68 DBI_0.6-1 modelr_0.1.0</div><div class="line">## [13] readxl_1.0.0 plyr_1.8.4 munsell_0.4.3 </div><div class="line">## [16] gtable_0.2.0 cellranger_1.1.0 rvest_0.3.2 </div><div class="line">## [19] GlobalOptions_0.0.12 psych_1.7.5 evaluate_0.10 </div><div class="line">## [22] knitr_1.16 parallel_3.4.0 broom_0.4.2 </div><div class="line">## [25] Rcpp_0.12.11 scales_0.4.1 backports_1.1.0 </div><div class="line">## [28] formatR_1.5 jsonlite_1.4 boxes_0.0.0.9000</div><div class="line">## [31] mnormt_1.5-5 hms_0.3 digest_0.6.12 </div><div class="line">## [34] stringi_1.1.5 grid_3.4.0 rprojroot_1.2</div><div class="line">## [37] tools_3.4.0 magrittr_1.5 lazyeval_0.2.0 </div><div class="line">## [40] crayon_1.3.2.9000 xml2_1.1.1 lubridate_1.6.0 </div><div class="line">## [43] assertthat_0.2.0 rmarkdown_1.5 httr_1.2.1 </div><div class="line">## [46] rstudioapi_0.6 R6_2.2.1 nlme_3.1-131</div><div class="line">## [49] compiler_3.4.0</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410</p>
<p>Email: tyan@zju.edu.cn</p>
<p>QQ: 1051927088</p>
<p>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></p>
<p>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></p>
<p>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛</p>
<p>浙江大学作物遗传育种在读研究生（生物信息学方向）</p>
<p>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-4b332e9275d7088e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;circlize包&quot;&gt;&lt;a href=&quot;#circlize包&quot; class=&quot;headerlink&quot; title=&quot;circlize包&quot;&gt;&lt;/a&gt;&lt;code&gt;circlize&lt;/code&gt;包&lt;/h2&gt;&lt;p&gt;&lt;code&gt;circlize&lt;/code&gt;包在德国癌症中心的华人博士Zuguang Gu开发的，有兴趣的可以去看看他的&lt;a href=&quot;https://github.com/jokergoo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github主页&lt;/a&gt;。这个包有两个文档，一个是介绍基本原理的绘制简单&lt;a href=&quot;https://cran.r-project.org/web/packages/circlize/vignettes/circlize.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;圈圈图&lt;/a&gt;的，也是本次要介绍的。另外一份文档专门介绍基因组数据绘制圈圈图&lt;a href=&quot;https://cran.r-project.org/web/packages/circlize/vignettes/genomic_plot.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Genomic Circos Plot&lt;/a&gt;,我自己还没看完，下次再介绍。&lt;br&gt;根据我的学习发现这个包与&lt;code&gt;ggplot2&lt;/code&gt;很相似，也是先创建一个图层，然后不断的添加图形元素（&lt;code&gt;point&lt;/code&gt;、&lt;code&gt;line&lt;/code&gt;、&lt;code&gt;bar&lt;/code&gt;等），这些简单的图形元素都有&lt;code&gt;circos.&lt;/code&gt;这个前缀进行绘制，比如要绘制点，则用&lt;code&gt;circos.points()&lt;/code&gt;。具体的下面一一介绍。&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="circlize" scheme="https://ytlogos.github.io/tags/circlize/"/>
    
  </entry>
  
  <entry>
    <title>ggplot2学习笔记系列之利用ggplot2绘制条形图</title>
    <link href="https://ytlogos.github.io/2017/06/25/ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97%E4%B9%8B%E5%88%A9%E7%94%A8ggplot2%E7%BB%98%E5%88%B6%E6%9D%A1%E5%BD%A2%E5%9B%BE/"/>
    <id>https://ytlogos.github.io/2017/06/25/ggplot2学习笔记系列之利用ggplot2绘制条形图/</id>
    <published>2017-06-24T16:00:00.000Z</published>
    <updated>2017-09-13T23:48:50.489Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-5c9a37089f4883ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>条形图可以说是我们最常用的数据可视化方法了，通常用于展示不同分类条件下（在x轴上）某个数值型变量的取值（y轴上）。绘制条形图时需要特别注意的一个细节是条形图的条形高度有时表示的是数据集中变量的频数，有时表示的则是变量本身。本文将会介绍这两类条形图的绘图技巧。<br><a id="more"></a></p>
<h2 id="绘制条形图"><a href="#绘制条形图" class="headerlink" title="绘制条形图"></a>绘制条形图</h2><p>使用<code>ggplot()</code>函数与<code>geom_bar(stat=&quot;identity&quot;)</code>，绘制条形图，我们将利用<strong>gcookbook</strong>包中的数据进行绘制。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#没安装包要先安装包gcookbook、ggplot2以及dplyr</div><div class="line">library(gcookbook)#加载gcookbook以使用其包含的数据</div><div class="line">library(ggplot2)#用于可视化</div><div class="line">library(dplyr)#用于数据处理</div><div class="line">这里我们调用**gcookbook**里的数据集绘制条形图</div><div class="line">head(pg_mean)#查看数据集</div><div class="line">## group weigh</div><div class="line"> 1 ctrl 5.032</div><div class="line"> 2 trt1 4.661</div><div class="line"> 3 trt2 5.526</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(data=pg_mean, aes(x=group, y=weight))+#将group、weight分别赋值给x、y轴 </div><div class="line">geom_bar(stat = &quot;identity&quot;)#必须将geom_bar()中的stat(统计变换)参数设置</div><div class="line">为”identity“，即对原始数据集不作任何统计变换，而该参数的默认值为&apos;count&apos;，即观测数量。</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-a1a6cfbc69210db2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>当x是连续型（数值型）变量时，条形图略有不同，需要略作调整，具体如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">str(BOD)#查看BOD数据集可以发现Time变量是数值型</div><div class="line"></div><div class="line">## &apos;data.frame&apos;:  6 obs. of 2 variables: </div><div class="line">## $ Time : num 1 2 3 4 5 7</div><div class="line">## $ demand: num 8.3 10.3 19 16 15.6 19.8</div><div class="line">## - attr(*, &quot;reference&quot;)= chr &quot;A1.4, p. 270&quot;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggplot(data=BOD, aes(x=Time, y=demand))+ geom_bar(stat = &quot;identity&quot;)#此时Time是数值型</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-91c3a599b1385e04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(data=BOD, aes(x=factor(Time), y=demand))+ </div><div class="line">geom_bar(stat = &quot;identity&quot;)#将Time转换为因子型（分类/离散变量），仔细比较两图</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-a2cb3446cf895736.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>条形图颜色有两部分：填充颜色（<strong>fill</strong>）以及边框颜色（<strong>color</strong>），因此调整条形图颜色要调两部分，具体如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(data=BOD, aes(x=factor(Time), y=demand))+ </div><div class="line">geom_bar(stat = &quot;identity&quot;, fill=&quot;blue&quot;, color=&quot;black&quot;)#可以自己设定喜好的颜色</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-af48e367d1ff7f47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="绘制簇状条形图"><a href="#绘制簇状条形图" class="headerlink" title="绘制簇状条形图"></a>绘制簇状条形图</h2><p>方法：将分类变量映射到fill参数，运用<code>geom_bar(position=&quot;dodge&quot;)</code>绘制，具体如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">head(cabbage_exp)#查看数据，发现含有两个分类变量：`Cultivar`和`Date`以及一个连续型变量Weight</div><div class="line"></div><div class="line">##  Cultivar Date Weight   sd       n     se</div><div class="line">## 1 c39     d16   3.18  0.9566144 10 0.30250803</div><div class="line">## 2 c39     d20   2.80  0.2788867 10 0.08819171</div><div class="line">## 3 c39     d21   2.74  0.9834181 10 0.31098410</div><div class="line">## 4 c52     d16   2.26  0.4452215 10 0.14079141</div><div class="line">## 5 c52     d20   3.11  0.7908505 10 0.25008887</div><div class="line">## 6 c52     d21   1.47   0.2110819 10 0.06674995</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+#分别将Date与Cultivar映射给x和fill </div><div class="line">geom_bar(stat = &quot;identity&quot;, position = &quot;dodge&quot;)#position = &quot;dodge&quot;表示条形图分开不重叠(簇形图)，默认的为stack（堆叠式）,还有百分比堆叠式(fill)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-703232c6cbde3d69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+</div><div class="line">geom_bar(stat = &quot;identity&quot;, position = &quot;stack&quot;)#堆叠式</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-b95adaf8b70d9bf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+ </div><div class="line">geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;)#百分比堆叠式</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-06bc452dce49d4c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="设置颜色或者调用调色板"><a href="#设置颜色或者调用调色板" class="headerlink" title="设置颜色或者调用调色板"></a>设置颜色或者调用调色板</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+ </div><div class="line">geom_bar(stat = &quot;identity&quot;, position = &quot;dodge&quot;, color=&quot;black&quot;)+ </div><div class="line">scale_fill_brewer(palette = &quot;Set1&quot;)#Set1为调色板，后期将会专门讲解Color设置</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-1533b0dd9e638405.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+ </div><div class="line">geom_bar(stat = &quot;identity&quot;, position = &quot;dodge&quot;, color=&quot;black&quot;)+ </div><div class="line">scale_fill_manual(values = c(&quot;darkred&quot;, &quot;purple&quot;))#自设置颜色</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-0ca0540506105191.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="绘制频数条形图"><a href="#绘制频数条形图" class="headerlink" title="绘制频数条形图"></a>绘制频数条形图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">head(diamonds,n=10)#查看前10行数据</div><div class="line"></div><div class="line">## # A tibble: 10 × 10</div><div class="line">##   carat  cut     color clarity depth table  price   x    y     z</div><div class="line">##   &lt;dbl&gt; &lt;ord&gt;    &lt;ord&gt;  &lt;ord&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;</div><div class="line">## 1  0.23 Ideal      E     SI2    61.5   55    326   3.95  3.98 2.43</div><div class="line">## 2  0.21 Premium    E     SI1    59.8   61    326   3.89  3.84 2.31</div><div class="line">## 3  0.23 Good       E     VS1    56.9   65    327   4.05  4.07 2.31</div><div class="line">## 4  0.29 Premium    I     VS2    62.4   58    334   4.20  4.23 2.63</div><div class="line">## 5  0.31 Good       J     SI2    63.3   58    335   4.34  4.35 2.75</div><div class="line">## 6  0.24 Very Good  J     VVS2   62.8   57    336   3.94  3.96 2.48</div><div class="line">## 7  0.24 Very Good  I     VVS1   62.3   57    336   3.95  3.98 2.47</div><div class="line">## 8  0.26 Very Good  H     SI1    61.9   55    337   4.07  4.11 2.53</div><div class="line">## 9  0.22 Fair       E     VS2    65.1   61    337   3.87  3.78 2.49</div><div class="line">## 10 0.23 Very Good  H     VS1    59.4   61    338   4.00  4.05 2.39</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ggplot(diamonds, aes(x=cut))+#此时不要映射任何变量到y </div><div class="line">geom_bar()#等价于geom_bar(stat=&quot;bin&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-95f3a46ca2f42a1d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="绘制y轴正负轴都有数据的条形图"><a href="#绘制y轴正负轴都有数据的条形图" class="headerlink" title="绘制y轴正负轴都有数据的条形图"></a>绘制y轴正负轴都有数据的条形图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#首先先创建一下数据集</div><div class="line">set.seed(1111)#此命令保证数据结果可以重现在任何电脑上</div><div class="line">x &lt;- 1980+1:36#赋值x</div><div class="line">y &lt;- round(100*rnorm(36))#赋值y</div><div class="line">mydata &lt;- data.frame(x=x, y=y)#创建数据集mydata</div><div class="line">head(mydata)#查看数据集</div><div class="line">##    x    y</div><div class="line">## 1 1981  -9</div><div class="line">## 2 1982  132</div><div class="line">## 3 1983  64</div><div class="line">## 4 1984  117</div><div class="line">## 5 1985  12</div><div class="line">## 6 1986 -293</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mydata &lt;- mydata%&gt;%#%&gt;%管道操作，结合dplyr为数据处理神器 </div><div class="line">mutate(judge=ifelse(y&gt;=0,&quot;Yes&quot;, &quot;No&quot;))#创建judge变量，将y正负分类</div><div class="line">head(mydata)#查看数据</div><div class="line">##    x    y   judge</div><div class="line">## 1 1981  -9    No</div><div class="line">## 2 1982  132   Yes</div><div class="line">## 3 1983  64    Yes</div><div class="line">## 4 1984  117   Yes</div><div class="line">## 5 1985  12    Yes</div><div class="line">## 6 1986 -293   No</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">接下来绘制条形图</div><div class="line">ggplot(data=mydata, aes(x=x, y=y, fill=judge))+</div><div class="line"> geom_bar(stat = &quot;identity&quot;,position = &quot;identity&quot;)+#这里position=&quot;identity&quot;可以避免系统对负值绘制条形图发出警告信息 </div><div class="line">scale_fill_manual(values = c(&quot;purple&quot;, &quot;blue&quot;), guide=FALSE)+xlab(&quot;Year&quot;)#guide=FALSE表示不要图例,x轴标题为Year</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-5c9a37089f4883ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="通过width来调整条形宽度以及条形距离"><a href="#通过width来调整条形宽度以及条形距离" class="headerlink" title="通过width来调整条形宽度以及条形距离"></a>通过width来调整条形宽度以及条形距离</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">head(diamonds)</div><div class="line"></div><div class="line">## # A tibble: 6 × 10</div><div class="line">##  carat  cut    color  clarity  depth    table   price   x     y     z</div><div class="line">##  &lt;dbl&gt; &lt;ord&gt;    &lt;ord&gt;   &lt;ord&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;</div><div class="line">## 1 0.23  Ideal     E      SI2    61.5     55      326   3.95  3.98  2.43</div><div class="line">## 2 0.21  Premium   E      SI1    59.8     61      326   3.89  3.84  2.31</div><div class="line">## 3 0.23  Good      E      VS1    56.9     65      327   4.05  4.07  2.31</div><div class="line">## 4 0.29  Premium   I      VS2    62.4     58      334   4.20  4.23  2.63</div><div class="line">## 5 0.31  Good      J      SI2    63.3     58      335   4.34  4.35  2.75</div><div class="line">## 6 0.24  Very Good J      VVS2    62.8    57      336   3.94  3.96  2.48</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ggplot(data=diamonds, aes(x=color, y=price, fill=cut))+ </div><div class="line">geom_bar(stat = &quot;identity&quot;, width = 0.6, position = position_dodge(0.8))+#调整条形宽度以及条形距离 </div><div class="line">scale_fill_brewer(palette = &quot;Set1&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-0cf73b4e51ec0430.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="geom-text-添加数据标签"><a href="#geom-text-添加数据标签" class="headerlink" title="geom_text()添加数据标签"></a><code>geom_text()</code>添加数据标签</h2><p>使用<code>geom_text()</code>为条形图添加标签，需要分别指定一个变量映射给x、y以及标签（label），<code>vjust</code>和<code>hjust</code>分别调整标签的竖直和水平位置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">标签在条形图顶端下方</div><div class="line">ggplot(data=cabbage_exp, aes(x=interaction(Date, Cultivar), y=Weight))+ </div><div class="line">geom_bar(stat = &quot;identity&quot;)+ </div><div class="line">geom_text(aes(label=Weight), vjust=1.5, color=&quot;white&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-aab91b53fbdb3b5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">标签在条形图顶端上方</div><div class="line">ggplot(data=cabbage_exp, aes(x=interaction(Date, Cultivar), y=Weight))+ </div><div class="line">geom_bar(stat = &quot;identity&quot;)+ </div><div class="line">geom_text(aes(label=Weight), vjust=-0.3, color=&quot;red&quot;)#可以通过color、size等自行调整标签属性</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-72f4b5a03f700c8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">堆叠图也一样</div><div class="line">ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+ </div><div class="line">geom_bar(stat=&quot;identity&quot;, position = &quot;stack&quot;)+ </div><div class="line">geom_text(aes(label=Weight), size=5, color=&quot;black&quot;, vjust=3.5, hjust=0.5, </div><div class="line">position = position_stack())#这里的position要与geom_bar()里面的保持一致，各种参数多调整才能效果最佳</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-5545ef422328ac23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>下次将重点讲解如何添加误差棒、显著性标记、坐标轴标题、图标题以及部分小技巧等等</p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410</p>
<p>Email: tyan@zju.edu.cn</p>
<p>QQ: 1051927088</p>
<p>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></p>
<p>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></p>
<p>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛</p>
<p>浙江大学作物遗传育种在读研究生（生物信息学方向）</p>
<p>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-5c9a37089f4883ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;条形图可以说是我们最常用的数据可视化方法了，通常用于展示不同分类条件下（在x轴上）某个数值型变量的取值（y轴上）。绘制条形图时需要特别注意的一个细节是条形图的条形高度有时表示的是数据集中变量的频数，有时表示的则是变量本身。本文将会介绍这两类条形图的绘图技巧。&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggplot2" scheme="https://ytlogos.github.io/tags/ggplot2/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化学习笔记之ggrepel包</title>
    <link href="https://ytlogos.github.io/2017/06/25/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bggrepel%E5%8C%85/"/>
    <id>https://ytlogos.github.io/2017/06/25/R语言可视化学习笔记之ggrepel包/</id>
    <published>2017-06-24T16:00:00.000Z</published>
    <updated>2017-09-13T23:48:50.474Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-9824653100d11fec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>当我们在图形中添加标签时，标签之间很容易相互重叠，包<a href="https://github.com/slowkow/ggrepel" target="_blank" rel="external"><strong>ggrepel</strong></a>就专门用来解决这个问题！ 首先我们来看看通过geom_text()添加标签时的情形：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(ggplot2)</div><div class="line">#使用数据集mtcars演示</div><div class="line">ggplot(mtcars)+ geom_point(aes(wt, mpg), color=&quot;red&quot;)+ </div><div class="line">geom_text(aes(wt, mpg, label=rownames(mtcars)))+ </div><div class="line">theme_classic(base_size = 16)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-0110517941711504.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>可以看到可视化效果不是很好。接下来看看包<strong>ggrepel</strong>的效果。<br>geom_text_repel()是基于geom_text()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(ggrepel)</div><div class="line">set.seed(42)</div><div class="line">ggplot(mtcars)+ geom_point(aes(wt, mpg), color=&quot;red&quot;)+ </div><div class="line">geom_text_repel(aes(wt, mpg, label=rownames(mtcars)))+</div><div class="line">theme_classic(base_size = 16)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-7f9edd980e5504ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="geom-label-repel"><a href="#geom-label-repel" class="headerlink" title="geom_label_repel()"></a>geom_label_repel()</h2><p>geom_label_repel()是基于geom_label(),它将标签置于一个小方框中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">set.seed(42)</div><div class="line">ggplot(mtcars)+ geom_point(aes(wt, mpg), color=&quot;grey&quot;, size=5)+</div><div class="line">geom_label_repel(aes(wt, mpg, fill=factor(cyl), </div><div class="line">label=rownames(mtcars)), fontface=&quot;bold&quot;, color=&quot;white&quot;, </div><div class="line">box.padding=unit(0.35, &quot;lines&quot;), point.padding=unit(0.5, &quot;lines&quot;), </div><div class="line">segment.colour = &quot;grey50&quot;)+ theme_classic(base_size = 16)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-5e60c14166f9c915.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>大部分<code>geom_text()</code>的参数都适用于<code>geom_text_repel()</code>,除了以下几个：</p>
<ul>
<li>hjust</li>
<li>vjust</li>
<li>position</li>
<li>check_overlap</li>
</ul>
<p><strong>ggrepel</strong>包为<code>geom_text_repel()</code>与<code>geom_label_repel()</code>提供了特有的参数设置：</p>
<ul>
<li>segment.color:连接点与标签的线段的颜色</li>
<li>segment.size:线段的粗细</li>
<li>segment.alpha:线段的透明度</li>
<li>box.padding:文本框周边填充</li>
<li>point.padding:点周围填充</li>
<li>arrow:grid:arrow提供的箭头</li>
<li>force:强制性将重叠文本散开</li>
<li>max.oter:最大迭代次数</li>
<li>nudge_x/y:标签开始位置在坐标轴的移动距离</li>
<li>direction:允许标签的方向，x、y or both</li>
</ul>
<p>下面举个栗子来详细了解这些参数的图形效果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">set.seed(42)</div><div class="line">ggplot(mtcars)+ geom_point(aes(wt, mpg, color=factor(cyl)), size=3)+</div><div class="line">geom_text_repel(aes(wt, mpg, color=factor(cyl), </div><div class="line">label=rownames(mtcars), angle=ifelse(mtcars$cyl==4, 90, 0)), </div><div class="line">size=4, family=&quot;Times&quot;, fontface=&quot;bold&quot;, </div><div class="line">box.padding=unit(0.5, &quot;lines&quot;), point.padding=unit(1.6, &quot;lines&quot;), </div><div class="line">segment.color = &quot;#cccccc&quot;, segment.size = 0.5, </div><div class="line">arrow = arrow(length=unit(0.01, &quot;npc&quot;)),force = 1, max.iter = 3e3, </div><div class="line">nudge_x = ifelse(mtcars$cyl==6, 2, 0), nudge_y = ifelse(mtcars$cyl==6, 9, 0))+ </div><div class="line">scale_color_discrete(name=&quot;cyl&quot;)+ </div><div class="line">scale_x_continuous(expand = c(0.5, 0))+ </div><div class="line">scale_y_continuous(expand = c(0.25, 0))+ </div><div class="line">theme_classic(base_size = 16)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-9824653100d11fec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>也可以通过设置参数<code>point.padding=NA</code>不对点进行<strong>repel</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">set.seed(42)</div><div class="line">mtcars$label &lt;- rownames(mtcars)</div><div class="line">ggplot(mtcars, aes(wt, mpg, label=label))+ </div><div class="line">geom_point(color=&quot;red&quot;)+ geom_text_repel(point.padding = NA)+</div><div class="line">theme_classic(base_size = 16)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-238389207de940a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>通过赋值某些<strong>label</strong>空字符“”来隐藏。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">set.seed(42)</div><div class="line">mtcars$label &lt;- rownames(mtcars)</div><div class="line">mtcars$label[1:15] &lt;- &quot;&quot;</div><div class="line">ggplot(mtcars, aes(wt, mpg))+ geom_point(aes(color=factor(cyl)), size=2)+</div><div class="line">geom_text_repel(aes(color=factor(cyl), size=hp, label=label), </div><div class="line">point.padding = unit(0.25, &quot;lines&quot;), box.padding = unit(0.25, &quot;lines&quot;), </div><div class="line">nudge_y = 0.1)+ theme_classic(base_size = 16)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-b6f7d76fe1e36113.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="将标签控制在特定区域"><a href="#将标签控制在特定区域" class="headerlink" title="将标签控制在特定区域"></a>将标签控制在特定区域</h2><p>通过设置参数xlim和ylim来限制label的位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">set.seed(42)</div><div class="line">data &lt;- mtcars</div><div class="line">mu &lt;- mean(data$wt)</div><div class="line">left &lt;- data[data$wt &lt;mu, ]</div><div class="line">right &lt;- data[data$wt&gt;=mu, ]</div><div class="line">ggplot()+ geom_vline(xintercept = mu)+ </div><div class="line">geom_point(aes(wt, mpg), data=data)+ </div><div class="line">geom_text_repel(data=left, aes(wt, mpg, label=rownames(left), </div><div class="line">color=&quot;Left half&quot;), xlim=c(NA, mu))+ </div><div class="line">geom_text_repel(data=right, aes(wt, mpg, label=rownames(right), </div><div class="line">color=&quot;Rigth half&quot;), xlim=c(mu, NA))+ theme_classic(base_size = 16)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-91519695f1b33a20.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>通过控制参数direction来决定label是左右移动还是上下移动， 默认是both<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">set.seed(42)</div><div class="line">#direction=&quot;x&quot; 左右移动</div><div class="line">ggplot(mtcars)+</div><div class="line">  geom_point(aes(wt, mpg), color=&quot;red&quot;)+</div><div class="line">  geom_text_repel(aes(wt, mpg, label=rownames(mtcars)), direction=&quot;x&quot;)+</div><div class="line">  theme_classic(base_size = 16)+xlim(1, 6)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-771214ebd632ce09.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#direction=&quot;x&quot; 上下移动</div><div class="line">ggplot(mtcars)+</div><div class="line">  geom_point(aes(wt, mpg), color=&quot;red&quot;)+</div><div class="line">  geom_text_repel(aes(wt, mpg, label=rownames(mtcars)), direction=&quot;y&quot;)+</div><div class="line">  theme_classic(base_size = 16)+xlim(1, 6)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-771214ebd632ce09.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="线图"><a href="#线图" class="headerlink" title="线图"></a>线图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">set.seed(42)</div><div class="line">ggplot(Orange, aes(age, circumference, color=Tree))+</div><div class="line">  geom_line()+</div><div class="line">  coord_cartesian(xlim=c(min(Orange$age), max(Orange$age)+90))+</div><div class="line">  geom_text_repel(data=subset(Orange, age==max(age)),</div><div class="line">                  aes(label=paste(&quot;Tree&quot;, Tree)),size=6, nudge_x = 45, segment.color = NA)+</div><div class="line">  theme_classic(base_size = 16)+</div><div class="line">  theme(legend.position = &quot;none&quot;)+</div><div class="line">  labs(title=&quot;Orange Trees&quot;, x=&quot;Age(days)&quot;, y=&quot;Circumference(mm)&quot;)</div></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-9b5718dafd8b2739.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="SessionInfo"><a href="#SessionInfo" class="headerlink" title="SessionInfo"></a>SessionInfo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">sessionInfo()</div><div class="line">## R version 3.4.0 (2017-04-21)</div><div class="line">## Platform: x86_64-w64-mingw32/x64 (64-bit)</div><div class="line">## Running under: Windows 8.1 x64 (build 9600)</div><div class="line">## </div><div class="line">## Matrix products: default</div><div class="line">## </div><div class="line">## locale:</div><div class="line">## [1] LC_COLLATE=Chinese (Simplified)_China.936 </div><div class="line">## [2] LC_CTYPE=Chinese (Simplified)_China.936 </div><div class="line">## [3] LC_MONETARY=Chinese (Simplified)_China.936</div><div class="line">## [4] LC_NUMERIC=C </div><div class="line">## [5] LC_TIME=Chinese (Simplified)_China.936 </div><div class="line">## </div><div class="line">## attached base packages:</div><div class="line">## [1] stats graphics grDevices utils datasets methods base </div><div class="line">##</div><div class="line">## other attached packages:</div><div class="line">## [1] ggrepel_0.6.5 ggplot2_2.2.1</div><div class="line">## </div><div class="line">## loaded via a namespace (and not attached):</div><div class="line">## [1] Rcpp_0.12.11 digest_0.6.12 rprojroot_1.2 plyr_1.8.4 </div><div class="line">## [5] grid_3.4.0 gtable_0.2.0 backports_1.1.0 magrittr_1.5 </div><div class="line">## [9] evaluate_0.10 scales_0.4.1 rlang_0.1.1 stringi_1.1.5 </div><div class="line">## [13] lazyeval_0.2.0 rmarkdown_1.5 labeling_0.3 tools_3.4.0 </div><div class="line">## [17] stringr_1.2.0 munsell_0.4.3 yaml_2.1.14 compiler_3.4.0 </div><div class="line">## [21] colorspace_1.3-2 htmltools_0.3.6 knitr_1.16 tibble_1.3.3</div></pre></td></tr></table></figure>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><ul>
<li>wechat: yt056410</li>
<li>Email: tyan@zju.edu.cn</li>
<li>QQ: 1051927088</li>
<li>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></li>
<li>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></li>
<li>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></li>
</ul>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛</p>
<ul>
<li>浙江大学作物遗传育种在读研究生（生物信息学方向）</li>
<li>伪码农，R语言爱好者，爱开源</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-9824653100d11fec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;当我们在图形中添加标签时，标签之间很容易相互重叠，包&lt;a href=&quot;https://github.com/slowkow/ggrepel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;ggrepel&lt;/strong&gt;&lt;/a&gt;就专门用来解决这个问题！ 首先我们来看看通过geom_text()添加标签时的情形：&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggrepel" scheme="https://ytlogos.github.io/tags/ggrepel/"/>
    
  </entry>
  
  <entry>
    <title>R语言可视化学习笔记之相关矩阵可视化包ggcorrplot</title>
    <link href="https://ytlogos.github.io/2017/06/25/R%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%9B%B8%E5%85%B3%E7%9F%A9%E9%98%B5%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8C%85ggcorrplot/"/>
    <id>https://ytlogos.github.io/2017/06/25/R语言可视化学习笔记之相关矩阵可视化包ggcorrplot/</id>
    <published>2017-06-24T16:00:00.000Z</published>
    <updated>2017-09-13T23:48:50.474Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2084719-6a7b9c76f1b9177c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>基于<strong>ggplot2</strong>包以及<strong>corrplot</strong>包的相关矩阵可视化包<strong>ggcorrplot</strong>，<strong>ggcorrplot</strong>包提供对相关矩阵重排序以及在相关图中展示显著性水平的方法，同时也能计算相关性p-value<br><a id="more"></a><br>安装方法就不提了，不懂的可以浏览我以前的<a href="http://www.jianshu.com/p/678213d605a5" target="_blank" rel="external"><strong>文章</strong></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">library(ggcorrplot)</div><div class="line">#计算相关矩阵(cor()计算结果不提供p-value)</div><div class="line">data(&quot;mtcars&quot;)</div><div class="line">corr &lt;- round(cor(mtcars), 1)</div><div class="line">head(corr[, 1:6])</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-6a56840974454525.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#用ggcorrplot包提供的函数cor_pmat()</div><div class="line">p.mat &lt;- cor_pmat(mtcars)</div><div class="line">head(p.mat[, 1:4])</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-885ea263533e51b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>可视化相关性矩阵<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ggcorrplot(corr)#method默认为square</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-679f0410e8d706fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#方法为circle</div><div class="line">ggcorrplot(corr, method = &quot;circle&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-e6cc2527561a9df5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#重排矩阵，使用分等级聚类</div><div class="line">ggcorrplot(corr, hc.order = TRUE, outline.color = &quot;white&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-bc7ef6b733b0010d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#控制矩阵形状</div><div class="line">ggcorrplot(corr, hc.order = TRUE, type = &quot;lower&quot;, outline.color = &quot;white&quot;)#下三角形</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-3841c6dd4591f121.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#上三角形</div><div class="line">ggcorrplot(corr, hc.order = TRUE, type = &quot;upper&quot;, outline.color = &quot;white&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-582e2120663d452c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#更改颜色以及主题</div><div class="line">ggcorrplot(corr, hc.order = TRUE, type = &quot;lower&quot;, outline.color = &quot;white&quot;, </div><div class="line">ggtheme = ggplot2::theme_gray, colors = c(&quot;#6D9EC1&quot;, &quot;white&quot;, &quot;#E46726&quot;))</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-abbab5e291738694.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#添加相关系数</div><div class="line">ggcorrplot(corr, hc.order = TRUE, type = &quot;lower&quot;, lab = TRUE)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-6a7b9c76f1b9177c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#增加显著性水平，不显著的话就不添加了</div><div class="line">ggcorrplot(corr, hc.order = TRUE, type = &quot;lower&quot;, p.mat = p.mat)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-38b016110a10b84b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#将不显著的色块设置成空白</div><div class="line">ggcorrplot(corr, p.mat = p.mat, hc.order=TRUE, type = &quot;lower&quot;, insig = &quot;blank&quot;)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2084719-582c67d095d8e1aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<hr>
<h2 id="联系方式："><a href="#联系方式：" class="headerlink" title="联系方式："></a>联系方式：</h2><p>wechat: yt056410</p>
<p>Email: tyan@zju.edu.cn</p>
<p>QQ: 1051927088</p>
<p>GitHub: <a href="https://github.com/YTLogos" target="_blank" rel="external">https://github.com/YTLogos</a></p>
<p>简书: <a href="http://www.jianshu.com/u/bd001545cf0b" target="_blank" rel="external">http://www.jianshu.com/u/bd001545cf0b</a></p>
<p>博客: <a href="https://ytlogos.github.io/">https://ytlogos.github.io/</a></p>
<h2 id="个人简介："><a href="#个人简介：" class="headerlink" title="个人简介："></a>个人简介：</h2><p>严涛</p>
<p>浙江大学作物遗传育种在读研究生（生物信息学方向）</p>
<p>伪码农，R语言爱好者，爱开源</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2084719-6a7b9c76f1b9177c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;基于&lt;strong&gt;ggplot2&lt;/strong&gt;包以及&lt;strong&gt;corrplot&lt;/strong&gt;包的相关矩阵可视化包&lt;strong&gt;ggcorrplot&lt;/strong&gt;，&lt;strong&gt;ggcorrplot&lt;/strong&gt;包提供对相关矩阵重排序以及在相关图中展示显著性水平的方法，同时也能计算相关性p-value&lt;br&gt;
    
    </summary>
    
      <category term="可视化" scheme="https://ytlogos.github.io/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="R" scheme="https://ytlogos.github.io/tags/R/"/>
    
      <category term="visualization" scheme="https://ytlogos.github.io/tags/visualization/"/>
    
      <category term="ggcorrplot" scheme="https://ytlogos.github.io/tags/ggcorrplot/"/>
    
  </entry>
  
</feed>
